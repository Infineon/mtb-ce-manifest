<apps version="2.0">
  <app keywords="starter,template,empty,blank,mtb-flow" req_capabilities_v2="[psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>Empty App</name>
    <id>mtb-example-empty-app</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-empty-app</uri>
    <description><![CDATA[This is a minimal starter application template for Infineon MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.9.0 release</num>
        <commit>release-v4.9.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.8.0 release</num>
        <commit>release-v4.8.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.7.0 release</num>
        <commit>release-v4.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.4.1 release</num>
        <commit>release-v4.4.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="led,button" req_capabilities_v2="hal switch led [psoc6]">
    <name>GPIO Pins</name>
    <id>mtb-example-psoc6-gpio-pins</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-gpio-pins</uri>
    <description><![CDATA[This example demonstrates the GPIO pin operation on the PSoC&#8482; 6 MCU, using Eclipse IDE for ModusToolbox&#8482;. This includes reading, writing, interrupts, and full port configurations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-gpio-pins/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal switch led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="led,starter,hello world,mtb-flow" req_capabilities_v2="hal led [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02] [flash_0k,flash_8384k,flash_2048k,flash_1024k,flash_512k,flash_256k,flash_832k,flash_448k,flash_4160k,flash_1856k]">
    <name>Hello World</name>
    <id>mtb-example-hal-hello-world</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-hal-hello-world</uri>
    <description><![CDATA[This code example demonstrates a simple UART communication by printing a "Hello World" message on a terminal and blinking an LED using a timer resource. This code example is based on HAL (Hardware Abstraction Layer) libraries.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-hello-world/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.10.0 release</num>
        <commit>release-v4.10.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.9.0 release</num>
        <commit>release-v4.9.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.8.0 release</num>
        <commit>release-v4.8.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.7.0 release</num>
        <commit>release-v4.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,lptimer,mtb-flow" req_capabilities_v2="led low_power switch [psoc6,t2gbe,cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>HAL Low-Power Timer</name>
    <id>mtb-example-hal-lptimer</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-lptimer</uri>
    <description><![CDATA[This code example demonstrates how to configure a low-power timer to measure the timing between events in free-running mode using the LPTimer HAL resource.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-lptimer/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led low_power switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.2.1 release</num>
        <commit>release-v2.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,fault handling,mtb-flow" req_capabilities_v2="psoc6 uart">
    <name>Fault Handling</name>
    <id>mtb-example-psoc6-fault-handling</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-fault-handling</uri>
    <description><![CDATA[This example demonstrates the fault handling functionality of PSoC&#8482; 6 MCU using Peripheral Driver Library (PDL) System Library (SysLib).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-fault-handling/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_062s4]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="wdt,mtb-flow" req_capabilities_v2="cat1 hal led [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>HAL Watchdog Timer</name>
    <id>mtb-example-hal-wdt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-wdt</uri>
    <description><![CDATA[This example explains how to set up a Watchdog Timer (WDT) using the WDT HAL resource. The WDT resets the device if it is not serviced or "kicked" within the configured timeout interval.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-wdt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat1 hal led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.5.0 release</num>
        <commit>release-v3.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.3.1 release</num>
        <commit>release-v3.3.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mcwdt,mtb-flow" req_capabilities_v2="psoc6 capsense [std_crypto,flash_2048k,flash_1024k,flash_512k,flash_256k]">
    <name>Free-Running Multi-Counter Watchdog Timer</name>
    <id>mtb-example-psoc6-mcwdt</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-mcwdt</uri>
    <description><![CDATA[This code example explains how to set up a multi-counter watchdog timer (MCWDT) using the MCWDT PDL resource to measure the timing between events in free-running mode on PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-mcwdt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,led,pwm,square wave,frequency,duty cycle,blinky,blinking" req_capabilities_v2="hal led [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>HAL PWM Square Wave</name>
    <id>mtb-example-hal-pwm-square-wave</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-pwm-square-wave</uri>
    <description><![CDATA[This code example generates a square wave using the PWM driver. An LED connected to the PWM output pin blinks at 2 Hz.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-pwm-square-wave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.1 release</num>
        <commit>release-v3.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,capsense,button,slider,i2c,tuner,mtb-flow" req_capabilities_v2="psoc6 led capsense_button capsense_linear_slider [flash_2048k,flash_1024k,flash_512k,flash_256k,flash_1856k]">
    <name>CAPSENSE Buttons and Slider</name>
    <id>mtb-example-psoc6-capsense-buttons-slider</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider</uri>
    <description><![CDATA[This code example features a 5-segment CAPSENSE&#8482; slider and two CAPSENSE&#8482; buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates monitoring CAPSENSE&#8482; data using CAPSENSE&#8482; Tuner GUI tool.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-capsense-buttons-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4, bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4, bsp_gen5]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen4">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen4">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,capsense,button,slider,i2c,tuner,rtos,mtb-flow" req_capabilities_v2="psoc6 led capsense_button capsense_linear_slider [flash_2048k,flash_1024k,flash_512k,flash_256k,flash_1856k]">
    <name>CAPSENSE Buttons and Slider FreeRTOS</name>
    <id>mtb-example-psoc6-capsense-buttons-slider-freertos</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider-freertos</uri>
    <description><![CDATA[This code example features a 5-segment linear slider and two CAPSENSE&#8482; buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates interfacing the CAPSENSE&#8482; Tuner using the I2C interface.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-capsense-buttons-slider-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="uart,transmit,receive,mtb-flow" req_capabilities_v2="hal led [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>UART Transmit and Receive</name>
    <id>mtb-example-hal-uart-transmit-receive</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-uart-transmit-receive</uri>
    <description><![CDATA[This example demonstrates the UART (HAL) transmit and receive operation in an Infineon MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-uart-transmit-receive/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.5.0 release</num>
        <commit>release-v3.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,uart,transmit,receive,dma,mtb-flow" req_capabilities_v2="psoc6 led">
    <name>SCB UART Transmit and Receive using DMA</name>
    <id>mtb-example-psoc6-uart-transmit-receive-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-uart-transmit-receive-dma</uri>
    <description><![CDATA[This code example demonstrates the UART transmit and receive operation in PSoC&#8482; 6 MCU using DMA. The application uses a serial terminal to read data and echoes what is received. UART is configured to perform both transmit and receive operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-uart-transmit-receive-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.4.0 release</num>
        <commit>release-v2.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_064b0s2_4343w]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_064b0s2_4343w]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ckit_064b0s2_4343w]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="i2c,master,slave,mtb-flow" req_capabilities_v2="hal led i2c [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>HAL I2C Master</name>
    <id>mtb-example-hal-i2c-master</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-i2c-master</uri>
    <description><![CDATA[This example demonstrates the use of I2C (HAL) resource in Master mode. The I2C master is configured to send command packets to control a user LED on the slave.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-i2c-master/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.10.0 release</num>
        <commit>release-v3.10.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.9.0 release</num>
        <commit>release-v3.9.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.8.0 release</num>
        <commit>release-v3.8.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.7.0 release</num>
        <commit>release-v3.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.6.0 release</num>
        <commit>release-v3.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>3.5.0 release</num>
        <commit>release-v3.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.4.1 release</num>
        <commit>release-v3.4.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="i2c,ezi2c,master,slave,mtb-flow" req_capabilities_v2="hal i2c led [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite]">
    <name>I2C Master EzI2C Slave</name>
    <id>mtb-example-hal-i2c-master-ezi2c-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-i2c-master-ezi2c-slave</uri>
    <description><![CDATA[This example demonstrates the use of I2C (HAL) resource in Master mode with an EzI2C slave. The I2C master is configured to send command packets to control a user LED on the slave. Both the slave and the master can be configured on the same kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-i2c-master-ezi2c-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal i2c led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="i2c,slave,mtb-flow" req_capabilities_v2="hal led i2c [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>I2C Slave Using Callbacks</name>
    <id>mtb-example-hal-i2c-slave-callback</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-i2c-slave-callback</uri>
    <description><![CDATA[This example demonstrates the operation of the I2C (HAL) resource in Slave mode using callbacks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-i2c-slave-callback/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="spi,master,mtb-flow" req_capabilities_v2="hal led spi [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw20829,cyw89829]">
    <name>HAL SPI Master</name>
    <id>mtb-example-hal-spi-master</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-spi-master</uri>
    <description><![CDATA[This example demonstrates the use of SPI (HAL) resource in Master mode. The SPI master is configured to send command packets to control a user LED on the slave.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-spi-master/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>3.10.0 release</num>
        <commit>release-v3.10.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai]">
        <num>3.9.0 release</num>
        <commit>release-v3.9.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cyw989829m2evb_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai]">
        <num>3.8.0 release</num>
        <commit>release-v3.8.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cyw989829m2evb_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8ceval_062s2_cyw43022cub]">
        <num>3.7.1 release</num>
        <commit>release-v3.7.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cyw989829m2evb_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8ceval_062s2_cyw43022cub]">
        <num>3.7.0 release</num>
        <commit>release-v3.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1]">
        <num>3.6.0 release</num>
        <commit>release-v3.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.3.1 release</num>
        <commit>release-v3.3.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cyw920829m2evk_02,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite,cy8ceval_062s2_lai_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,spi,master,slave,dma,mtb-flow" req_capabilities_v2="psoc6 led spi">
    <name>SCB SPI Master DMA</name>
    <id>mtb-example-psoc6-spi-master-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-spi-master-dma</uri>
    <description><![CDATA[This example demonstrates the use of the SPI Serial Communication Block (SCB) resource for PSoC&#8482; 6 MCU Master mode using DMA.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-spi-master-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.1.1 release</num>
        <commit>release-v3.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cysbsyskit_01,cysbsyskit_dev_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cysbsyskit_01,cysbsyskit_dev_01]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cysbsyskit_01,cysbsyskit_dev_01,cy8ckit_064b0s2_4343w]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cysbsyskit_01,cysbsyskit_dev_01,cy8ckit_064b0s2_4343w]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="led,smartio,smart io,pwm,mtb-flow" req_capabilities_v2="led smart_io [psoc6,t2gbe,cyw20829,cyw89829]">
    <name>Ramping LED using Smart IO</name>
    <id>mtb-example-smartio-ramping-led</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-smartio-ramping-led</uri>
    <description><![CDATA[This example uses a PWM resource and Smart I/O in MCU to implement a ramping LED, where an LED gradually cycles through increasing and decreasing brightness levels. There is no CPU usage except for the initialization of PWM and Smart I/O.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-smartio-ramping-led/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led smart_io</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_064b0s3,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_064b0s3,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>3.3.1 release</num>
        <commit>release-v3.3.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_064b0s3,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_064b0s3,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02]">
        <num>3.2.1 release</num>
        <commit>release-v3.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_064b0s3,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_064b0s3,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_064b0s3,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.5.0 release</num>
        <commit>release-v2.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4]">
        <num>2.4.0 release</num>
        <commit>release-v2.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="oob,led,starter,hello world,mtb-flow" req_capabilities_v2="hal led uart switch [xmc7000,t2gbh]">
    <name>XMC7000 OOB Demo</name>
    <id>mtb-example-xmc7000-oob-demo</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-oob-demo</uri>
    <description><![CDATA[This example is the out-of-the-box (OOB) demo project for the XMC7000 evaluation kit which includes - Hello world, PWM square-wave output, GPIO interrupt, SAR ADC basics, XMC&#8482; MCU power modes, QSPI memory read/write, and CAN FD loopback code examples.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-oob-demo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led uart switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pwm,tcpwm,timer,mtb-flow" req_capabilities_v2="hal led [xmc7000,t2gbh,t2gbh_lite,psoc6,cyw20829,cyw89829]">
    <name>HAL TCPWM Timer</name>
    <id>mtb-example-hal-tcpwm-timer</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-tcpwm-timer</uri>
    <description><![CDATA[This code example generates an interrupt every second with the timer driver, and toggles the user LED when a timer interrupt is generated.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-tcpwm-timer/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [kit_xmc72_evk,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02,cyw989829m2evb_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [kit_xmc72_evk,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02,cyw989829m2evb_01]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02]">
        <num>1.2.1 release</num>
        <commit>release-v1.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pwm,tcpwm,dead time,mtb-flow" req_capabilities_v2="hal [xmc7000,t2gbh]">
    <name>TCPWM Dead Time Mode</name>
    <id>mtb-example-hal-tcpwm-dt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-tcpwm-dt</uri>
    <description><![CDATA[This code example shows TCPWM dead-time mode function. PWM line and PWM COMPL pins output the 1-kHz frequency wave and 1-kHz frequency wave with PWM leftalign 250 us in PWM dead-time mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-tcpwm-dt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="led,smartio,smart io,mtb-flow" req_capabilities_v2="switch led smart_io [xmc7000,t2gbh]">
    <name>Smart IO with GPIO</name>
    <id>mtb-example-pdl-xmc7000-smartio-gpio</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-smartio-gpio</uri>
    <description><![CDATA[This example uses the smart I/O peripheral in XMC7000 MCU to connect the button input pin to an output pin to toggle an external LED. There is no CPU usage except for the initialization of GPIO and smart I/O.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-smartio-gpio/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>switch led smart_io</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="led,button,mtb-flow" req_capabilities_v2="switch led [xmc7000,t2gbh]">
    <name>GPIO Pins</name>
    <id>mtb-example-pdl-xmc7000-gpio-pins</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-gpio-pins</uri>
    <description><![CDATA[This example demonstrates the GPIO pin operation on the XMC7000 MCU, using Eclipse IDE for ModusToolbox&#8482;. This includes reading, writing, interrupts, and full port configurations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-gpio-pins/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>switch led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pwm,tcpwm,asymmetric,mtb-flow" req_capabilities_v2="uart [xmc7000,t2gbh]">
    <name>Asymmetric PWM Generation</name>
    <id>mtb-example-pdl-xmc7000-pwm-dual-compare-capture</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-pwm-dual-compare-capture</uri>
    <description><![CDATA[This code example demonstrates the generation of asymmetric PWM signals using two compare/capture registers available in the TCPWM block of the XMC7000 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-pwm-dual-compare-capture/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="uart,transmit,receive,dma,mtb-flow" req_capabilities_v2="led [xmc7000,t2gbh,t2gbh_lite]">
    <name>SCB UART Transmit and Receive using DMA</name>
    <id>mtb-example-pdl-xmc7000-uart-transmit-receive-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-uart-transmit-receive-dma</uri>
    <description><![CDATA[This example demonstrates the UART transmit and receive operation using DMA in XMC7000 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-uart-transmit-receive-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="systick,timer,toggle,led,mtb-flow" req_capabilities_v2="led [xmc7000,t2gbh]">
    <name>Toggle LED with SysTick Timer</name>
    <id>mtb-example-pdl-xmc7000-systick-led</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-systick-led</uri>
    <description><![CDATA[This code example demonstrates how to use the SysTick timer to generate a timer interrupt on XMC7000 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-systick-led/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cryptography,sha2,message digest,hash,mtb-flow" req_capabilities_v2="uart [xmc7000,t2gbh,t2gbh_lite]">
    <name>Cryptography SHA Demonstration</name>
    <id>mtb-example-pdl-xmc7000-crypto-sha</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-crypto-sha</uri>
    <description><![CDATA[This code example shows how to generate a 32-byte hash value or message digest for an arbitrary user input message with the SHA2 algorithm using the Cryptographic hardware block in the XMC7000 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-crypto-sha/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cryptography,aes,mtb-flow" req_capabilities_v2="uart [xmc7000,t2gbh,t2gbh_lite]">
    <name>Cryptography AES Demonstration</name>
    <id>mtb-example-pdl-xmc7000-crypto-aes</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-crypto-aes</uri>
    <description><![CDATA[This code example encrypts and decrypts user input data using the AES algorithm using a 128-bit key. The encrypted and decrypted data are displayed on a UART terminal emulator.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-crypto-aes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="canfd,can,mtb-flow" req_capabilities_v2="led [xmc7000,t2gbh]">
    <name>CAN FD</name>
    <id>mtb-example-pdl-xmc7000-canfd</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-canfd</uri>
    <description><![CDATA[This code example demonstrates how to use controller area network flexible data-rate (CAN FD) in XMC7000 MCU devices. In this example, the CAN Node-1 sends a CAN FD or standard frame to CAN Node-2 on pressing the user button and vice versa. Both the CAN nodes log the received data over UART serial terminal. Each time a CAN frame is received, the user LED toggles.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-canfd/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="tcpwm,counter,mtb-flow" req_capabilities_v2="led [xmc7000,t2gbh]">
    <name>TCPWM Counter</name>
    <id>mtb-example-pdl-xmc7000-tcpwm-counter</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-tcpwm-counter</uri>
    <description><![CDATA[This code example demonstrates how to use the tcpwm counter on the XMC7000 MCU. The counter is started by pwm signal and work with 200KHz clock frequency. Enable the counter CC0 match interrupt, when counter up to CC0 match value generates the interrupt to toggle user LED.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-tcpwm-counter/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="gpio,led,freertos,mtb-flow" req_capabilities_v2="led [xmc7000,t2gbh,t2gbh_lite]">
    <name>FreeRTOS Blinky</name>
    <id>mtb-example-xmc7000-blinky-freertos</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-blinky-freertos</uri>
    <description><![CDATA[This code example demonstrates blinking LED functionality implemented by FreeRTOS tasks on the XMC7000 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-blinky-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="spi,master,slave,dma,mtb-flow" req_capabilities_v2="led spi [xmc7000,t2gbh]">
    <name>SCB SPI Master DMA</name>
    <id>mtb-example-pdl-xmc7000-spi-master-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-spi-master-dma</uri>
    <description><![CDATA[This example demonstrates the use of the SPI Serial Communication Block (SCB) resource for XMC7000 MCU in master and slave mode using DMA.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-spi-master-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="led,power,sleep,mtb-flow" req_capabilities_v2="led low_power [xmc7000,t2gbh,t2gbh_lite]">
    <name>Switching Power Modes</name>
    <id>mtb-example-xmc7000-switching-power-modes</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-switching-power-modes</uri>
    <description><![CDATA[This example demonstrates how to transition XMC7000 MCU to the Active, Sleep, DeepSleep and Hibernate power states, and how to wake up and return to Active state.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-switching-power-modes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="low power,sleep,mtb-flow" req_capabilities_v2="uart low_power [xmc7000,t2gbh,t2gbh_lite]">
    <name>Low-Power Wakeup from RTC Alarm</name>
    <id>mtb-example-xmc7000-low-power-wakeup-from-rtc-alarm</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-low-power-wakeup-from-rtc-alarm</uri>
    <description><![CDATA[This code example demonstrates XMC7000 MCU how to enter the DeepSleep and Hibernate mode, and wake-up using the RTC alarm.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-low-power-wakeup-from-rtc-alarm/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="multicore,starter,template,empty,blank,mtb-flow" req_capabilities_v2="[xmc7000,t2gbh,t2gbh_lite]">
    <name>Multicore Empty App</name>
    <id>mtb-example-xmc7000-multicore-empty-app</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-multicore-empty-app</uri>
    <description><![CDATA[This empty application provides a multicore template for creating XMC7000 MCU applications.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-multicore-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="multicore,ipc,mtb-flow,pipes" req_capabilities_v2="multi_core [xmc7000,t2gbh,t2gbh_lite]">
    <name>Multicore IPC Pipes</name>
    <id>mtb-example-xmc7000-multicore-ipc-pipes</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-multicore-ipc-pipes</uri>
    <description><![CDATA[This example demonstrates how to use the inter-processor communication (IPC) driver to implement a message pipe in XMC7000 MCU. The pipe is used to send messages between CPUs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-multicore-ipc-pipes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>multi_core</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mcwdt,mtb-flow" req_capabilities_v2="uart [xmc7000,t2gbh,t2gbh_lite]">
    <name>MCWDT Interrupt</name>
    <id>mtb-example-pdl-xmc7000-mcwdt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-mcwdt</uri>
    <description><![CDATA[This example shows how to configure XMC7000 MCWDT Subcounter0/1 and Subcounter2 operation with interrupt.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-mcwdt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="lvd,interrupt,mtb-flow" req_capabilities_v2="led [xmc7000,t2gbh,t2gbh_lite]">
    <name>LVD Interrupt</name>
    <id>mtb-example-pdl-xmc7000-lvd-interrupt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-lvd-interrupt</uri>
    <description><![CDATA[This code example shows how to configure low-voltage detection (LVD) in XMC7000 MCU to monitor VDDD and generate an interrupt when VDDD drops below the configured threshold.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-lvd-interrupt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="emulated,eeprom,flash,mtb-flow" req_capabilities_v2="led uart [xmc7000,t2gbh,t2gbh_lite]">
    <name>Emulated EEPROM</name>
    <id>mtb-example-xmc7000-emulated-eeprom</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-emulated-eeprom</uri>
    <description><![CDATA[This code example demonstrates emulation of EEPROM behavior in flash memory of XMC7000 MCU using emeeprom middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-emulated-eeprom/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk,kit_t2g_b_h_lite]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="fault handling,mtb-flow" req_capabilities_v2="uart [xmc7000,t2gbh,t2gbh_lite]">
    <name>Fault Handling</name>
    <id>mtb-example-pdl-xmc7000-fault-handling</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-fault-handling</uri>
    <description><![CDATA[This example demonstrates the fault handling functionality of XMC7000 MCU using Peripheral Driver Library (PDL) System Library (SysLib).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-fault-handling/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,adc,hal" req_capabilities_v2="hal uart [xmc7000,t2gbh]">
    <name>ADC basic</name>
    <id>mtb-example-xmc7000-adc-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-adc-basic</uri>
    <description><![CDATA[This example demonstrates use of the ADC (Analog to Digital Converter) HAL driver to perform voltage measurements in XMC7000 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-adc-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="evtgen,event generator,mtb-flow" req_capabilities_v2="uart [xmc7000,t2gbh]">
    <name>EVTGEN trigger ADC</name>
    <id>mtb-example-pdl-xmc7000-evtgen-active-trigger-adc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pdl-xmc7000-evtgen-active-trigger-adc</uri>
    <description><![CDATA[This code example demonstrates how to use the XMC7000 MCU event generator (EVTGEN) resource to trigger ADC conversion in active power mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pdl-xmc7000-evtgen-active-trigger-adc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_t2g_b_h_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,tcp,client,ethernet" req_capabilities_v2="ethernet led uart [xmc7000,t2gbh]">
    <name>Ethernet TCP Client</name>
    <id>mtb-example-ethernet-tcp-client</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-tcp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of TCP client with XMC7000 MCU. The example establishes a connection with a remote TCP server and based on the command received from the TCP server, turns the user LED ON or OFF.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-tcp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>ethernet led uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,tcp,server,ethernet" req_capabilities_v2="ethernet switch uart [xmc7000,t2gbh]">
    <name>Ethernet TCP Server</name>
    <id>mtb-example-ethernet-tcp-server</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-tcp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of a TCP server with XMC7000 MCU. In this example, the TCP server establishes a connection with a TCP client. Once the connection completes successfully, the server allows the user to send LED ON/OFF command to the TCP client, and the client responds by sending an acknowledgment message to the server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-tcp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>ethernet switch uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,udp,client,ethernet" req_capabilities_v2="ethernet led uart [xmc7000,t2gbh]">
    <name>Ethernet UDP Client</name>
    <id>mtb-example-ethernet-udp-client</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-udp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP client with XMC7000 MCU. The example establishes a connection with a remote UDP server and turns the user LED ON or OFF based on the command received from the UDP server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-udp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>ethernet led uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,udp,server,ethernet" req_capabilities_v2="ethernet uart switch [xmc7000,t2gbh]">
    <name>Ethernet UDP Server</name>
    <id>mtb-example-ethernet-udp-server</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-udp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP Server with XMC7000 MCU. In this example, the UDP server waits for the UDP client to establish a connection. Once a connection is established, the server allows the user to send the LED ON/OFF command to the UDP client through a button press; the client responds by sending an acknowledgement message to the server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-udp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>ethernet uart switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,tcp,secure,client,ethernet" req_capabilities_v2="ethernet led uart [xmc7000,t2gbh]">
    <name>Ethernet Secure TCP Client</name>
    <id>mtb-example-ethernet-secure-tcp-client</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-secure-tcp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of a secure TCP client with XMC7000 MCU. In this example, a TCP client establishes a secure connection with a TCP server through an SSL handshake. Once the SSL handshake completes successfully, the TCP client turns ON or OFF the user LED based on the command received from the TCP server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-secure-tcp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>ethernet led uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,tcp,secure,server,ethernet" req_capabilities_v2="ethernet uart switch [xmc7000,t2gbh]">
    <name>Ethernet Secure TCP Server</name>
    <id>mtb-example-ethernet-secure-tcp-server</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-secure-tcp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of a secure TCP Server with XMC7000 MCU. In this example, the TCP server establishes a secure connection with a TCP client through SSL handshake. Once the SSL handshake completes successfully, the server allows the user to send LED ON/OFF command to the TCP client; the client responds by sending an acknowledgement message to the server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-secure-tcp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>ethernet uart switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,flash,code flash,hal" req_capabilities_v2="hal uart [xmc7000,t2gbh,t2gbh_lite]">
    <name>Code Flash Sector Data Updating</name>
    <id>mtb-example-hal-code-flash-sector-data-updating</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-code-flash-sector-data-updating</uri>
    <description><![CDATA[This code example demonstrates the use of the Flash HAL driver to perform code flash Read/Write/Erase basic operate and update sector data online. The running steps logs on a UART terminal emulator.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-code-flash-sector-data-updating/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,eink,emwin,freertos,display,mtb-flow" req_capabilities_v2="psoc6 led arduino switch [sram_288k,sram_1024k] [flash_2048k,flash_1856k,flash_1024k]">
    <name>emWin E-Ink FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-eink-freertos</id>
    <category>Graphics</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-eink-freertos</uri>
    <description><![CDATA[This code example demonstrates displaying 2D graphics on an E-ink display using the emWin graphics library.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-emwin-eink-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led arduino switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,oled,emwin,freertos,display,mtb-flow" req_capabilities_v2="psoc6 arduino switch [flash_2048k,flash_1856k,flash_1024k]">
    <name>emWin OLED FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-oled-freertos</id>
    <category>Graphics</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-oled-freertos</uri>
    <description><![CDATA[This code example demonstrates displaying 2D graphics on an OLED display using emWin graphics library and the AppWizard GUI design tool in FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-emwin-oled-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 arduino switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pwm,tcpwm,asymmetric,mtb-flow" req_capabilities_v2="uart [cy8ckit_062s4]">
    <name>Asymmetric PWM Generation</name>
    <id>mtb-example-psoc6-pwm-dual-compare-capture</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pwm-dual-compare-capture</uri>
    <description><![CDATA[This code example demonstrates the generation of asymmetric PWM signals using two compare/capture registers available in the TCPWM block of the PSoC&#8482; 6 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-pwm-dual-compare-capture/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cryptography,sha2,message digest,hash,mtb-flow" req_capabilities_v2="uart std_crypto [psoc6,t2gbe]">
    <name>Cryptography SHA Demonstration</name>
    <id>mtb-example-psoc6-crypto-sha</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-sha</uri>
    <description><![CDATA[This code example demonstrates how to generate a 32-byte hash value or message digest for an arbitrary user input message with the SHA-2 algorithm using the Cryptographic hardware block in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-crypto-sha/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,csdadc,mtb-flow" req_capabilities_v2="psoc6 capsense">
    <name>CSDADC</name>
    <id>mtb-example-psoc6-csdadc</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-csdadc</uri>
    <description><![CDATA[This example demonstrates the usage of CSDADC in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-csdadc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,dual cpu,starter,template,empty,blank,mtb-flow" req_capabilities_v2="psoc6 multi_core">
    <name>Dual-CPU Empty PSoC6 App</name>
    <id>mtb-example-psoc6-dual-cpu-empty-app</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dual-cpu-empty-app</uri>
    <description><![CDATA[This is a minimal starter dual-CPU template for PSoC&#8482; 6 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 multi_core</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw43022cub,rdk2,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw43022cub,rdk2,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>3.6.0 release</num>
        <commit>release-v3.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw43022cub,rdk2,cy8ckit_062s2_ai]">
        <num>3.5.0 release</num>
        <commit>release-v3.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw43022cub,rdk2]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,pdm,pcm,mtb-flow,audio,microphone" req_capabilities_v2="psoc6 pdm switch">
    <name>PDM PCM Audio</name>
    <id>mtb-example-psoc6-pdm-pcm</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pdm-pcm</uri>
    <description><![CDATA[This example demonstrates how to use the pulse-density modulation/pulse-code modulation (PDM/PCM) hardware block in PSoC&#8482; 6 MCU with a digital microphone.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-pdm-pcm/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 pdm switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,i2s,mtb-flow,audio,codec" req_capabilities_v2="psoc6 i2s led switch">
    <name>I2S Audio</name>
    <id>mtb-example-psoc6-i2s</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2s</uri>
    <description><![CDATA[This example demonstrates how to use the I2S hardware block in PSoC&#8482; 6 MCU to interface with an audio codec.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-i2s/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 i2s led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,ipc,mtb-flow,pipes" req_capabilities_v2="psoc6 multi_core switch [capsense,flash_2048k]">
    <name>Dual-CPU IPC Pipes</name>
    <id>mtb-example-psoc6-dual-cpu-ipc-pipes</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dual-cpu-ipc-pipes</uri>
    <description><![CDATA[This example demonstrates how to use the inter-processor communication (IPC) driver to implement a message pipe in PSoC&#8482; 6 MCU. The pipe is used to send messages between CPUs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-ipc-pipes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 multi_core switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_lai_43439m2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cy8ckit_062s4]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,ipc,mtb-flow,semaphore" req_capabilities_v2="psoc6 multi_core led switch [capsense,flash_2048k]">
    <name>Dual-CPU IPC Semaphore</name>
    <id>mtb-example-psoc6-dual-cpu-ipc-sema</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dual-cpu-ipc-sema</uri>
    <description><![CDATA[This example demonstrates how to use the inter-processor communication (IPC) driver to implement a semaphore in PSoC&#8482; 6 MCU. The semaphore is used as a lock to control access to a resource shared by the CPUs and synchronize the initialization instructions.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-ipc-sema/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 multi_core led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyble_416045_eval,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyble_416045_eval,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyble_416045_eval]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyble_416045_eval,cysbsyskit_dev_01]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyble_416045_eval,cysbsyskit_dev_01]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cysbsyskit_dev_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,ble,bluetooth,btstack,freertos,ess,4343w,43012" req_capabilities_v2="bt led switch [psoc6, cyw920829m2evk_02, cyw89829] [flash_2048k, flash_1024k, flash_512k, flash_0k]">
    <name>Bluetooth LE Environmental Sensing Service</name>
    <id>mtb-example-btstack-freertos-ess</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-ess</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; LE environmental sensing profile. It shows how to send environmental parameters like temperature by sending simulated temperature values over the Bluetooth&#174; LE connection using AIROC&#8482; CYW20829 Wi-Fi & Bluetooth&#174; combo SoCs
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-ess/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>4.5.1 release</num>
        <commit>release-v4.5.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,ble,bluetooth,btstack,freertos,beacon,eddystone,multi-adv,4343w,43012" req_capabilities_v2="psoc6 bt [cyw43xxx,cyw55xxx] [flash_2048k, flash_1024k, flash_512k]">
    <name>Bluetooth LE Multi Beacon</name>
    <id>mtb-example-btstack-freertos-multi-beacon</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-multi-beacon</uri>
    <description><![CDATA[This code example demonstrates the implementation of a beacon which advertises Eddystone and iBeacon UUID data.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-multi-beacon/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8cproto_062_4343w,cysbsyskit_dev_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8cproto_062_4343w,cysbsyskit_dev_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8cproto_062_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,ble,bluetooth,btstack,freertos,onboarding,4343w,43012" req_capabilities_v2="psoc6 wifi bt low_power">
    <name>Wi-Fi Onboarding Using Bluetooth LE</name>
    <id>mtb-example-btstack-freertos-wifi-onboarding</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-wifi-onboarding</uri>
    <description><![CDATA[This code example demonstrates Wi-Fi Onboarding using Bluetooth&#174; Low Energy.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-wifi-onboarding/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 wifi bt low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_cyw43022cub]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cysbsyskit_dev_01,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cysbsyskit_dev_01]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cysbsyskit_dev_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cysbsyskit_dev_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sar,adc,op amp,mtb-flow" req_capabilities_v2="psoc6 cy8ckit_062s4">
    <name>Low-Power Analog Front End using OpAmp and SAR ADC</name>
    <id>mtb-example-psoc6-low-power-analog-front-end</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-low-power-analog-front-end</uri>
    <description><![CDATA[This example demonstrates the low-power analog features of PSoC&#8482; 6 MCU using an OpAmp and SAR ADC. PDL is used for the application firmware. This example is supported only for the devices like CY8C62x4 which have an OpAmp and SAR ADC capable of operating in System Deep Sleep mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-low-power-analog-front-end/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 cy8ckit_062s4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sar,analog,sensor,mtb-flow" req_capabilities_v2="psoc6 cy8ckit_062s4">
    <name>SAR ADC Low Power Sensing - Thermistor and ALS</name>
    <id>mtb-example-psoc6-low-power-sar-adc-thermistor-als</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-low-power-sar-adc-thermistor-als</uri>
    <description><![CDATA[This example demonstrates low-power sensing of a thermistor and ambient light sensor (ALS) using the SAR ADC of PSoC&#8482; 6 MCU. PDL is used for the application firmware. This example is supported only for the devices like CY8C62x4 which have a SAR ADC capable of operating in System Deep Sleep mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-low-power-sar-adc-thermistor-als/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 cy8ckit_062s4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,low power,comparator,lpcomp,wakeup,hibernate,mtb-flow" req_capabilities_v2="psoc6 led">
    <name>Low Power Comparator - Wakeup from Hibernate</name>
    <id>mtb-example-psoc6-comparator-hibernate-wakeup</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-comparator-hibernate-wakeup</uri>
    <description><![CDATA[This code example demonstrates the functionality of wakeup from the Hibernate mode using the Low-Power Comparator (LPCOMP)
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-comparator-hibernate-wakeup/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,capsense,tuner,ble,server,tuning,mtb-flow" req_capabilities_v2="psoc6 led capsense_button capsense_linear_slider">
    <name>CAPSENSE Tuning Over Bluetooth LE - Server</name>
    <id>mtb-example-psoc6-ble-capsense-tuner-server</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-capsense-tuner-server</uri>
    <description><![CDATA[This code example demonstrates how to monitor the CAPSENSE&#8482; data and tune the CAPSENSE&#8482; sensors over Bluetooth&#174; Low Energy communication with CAPSENSE&#8482; Tuner GUI using PSoC&#8482; 6 Bluetooth&#174; Low Energy MCU. This is intended to be used with the CAPSENSE&#8482; Tuning Over Bluetooth&#174; LE - Client example.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-capsense-tuner-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,capsense,tuner,ble,client,tuning,ezi2c,mtb-flow" req_capabilities_v2="psoc6 led">
    <name>CAPSENSE Tuning Over Bluetooth LE - Client</name>
    <id>mtb-example-psoc6-ble-capsense-tuner-client</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-capsense-tuner-client</uri>
    <description><![CDATA[This code example demonstrates how to monitor the CAPSENSE&#8482; data and tune the CAPSENSE&#8482; sensors over Bluetooth&#174; Low Energy communication with CAPSENSE&#8482; Tuner GUI using PSoC&#8482; 6 Bluetooth&#174; Low Energy MCU. This is intended to be used with the CAPSENSE&#8482; Tuning Over Bluetooth&#174; LE - Server example.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-capsense-tuner-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8cproto_063_ble]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sar,adc,simultaneous sampling,mtb-flow" req_capabilities_v2="psoc6 cy8ckit_062s4">
    <name>SAR ADC Simultaneous Sampling</name>
    <id>mtb-example-psoc6-sar-adc-simultaneous-sampling</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-sar-adc-simultaneous-sampling</uri>
    <description><![CDATA[This code example demonstrates simultaneous sampling of two SAR ADCs. The simultaneouly sampled input voltages by SAR ADCs are displayed on UART. PDL is used for the application firmware. This example is supported only for the devices like CY8C62x4 which have two SAR ADCs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-sar-adc-simultaneous-sampling/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 cy8ckit_062s4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk,spi,cyw208xx,data-logger,mtb-flow" req_capabilities_v2="CYW208XX ncu15wf104 [CYW920819EVB_02, CYW920819M2EVB_01, CYW920820EVB_02, CYW920820M2EVB_01]">
    <name>CYW208xx Data logger</name>
    <id>mtb-example-btsdk-cyw208xx-data-logger</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw208xx-data-logger</uri>
    <description><![CDATA[This code example includes two applications that demonstrate the operation of multiple Serial Peripheral Interface (SPI) interfaces using the CYW208xx Bluetooth&#174; SoC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-cyw208xx-data-logger/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>CYW208XX ncu15wf104</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk,privacy,bonding,mtb-flow" req_capabilities_v2="fw2 btsdk button">
    <name>LE Peripheral Privacy</name>
    <id>mtb-example-btsdk-peripheral-privacy</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-peripheral-privacy</uri>
    <description><![CDATA[This code example demonstrates the privacy features available to users in Bluetooth&#174; Low Energy 5.0 and above.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-peripheral-privacy/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920820M2EVB_01,CYW920835M2EVB_01,CYW920819M2EVB_01,CYW989820M2EVB_01,CYW920819EVB_02,CYW920820EVB_02,CYW920719B2Q40EVB_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920820M2EVB_01,CYW920835M2EVB_01,CYW920819M2EVB_01,CYW989820M2EVB_01,CYW920819EVB_02,CYW920820EVB_02,CYW920719B2Q40EVB_01]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920820M2EVB_01,CYW920819EVB_02,CYW920820EVB_02,CYW920719B2Q40EVB_01,CYW920835M2EVB_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920820EVB_02,CYW920719B2Q40EVB_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920820EVB_02,CYW920719B2Q40EVB_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk,spi,cyw20719b2,mtb-flow" req_capabilities_v2="ncu15wf104 fw2 btsdk CYW920719B2Q40EVB_01">
    <name>CYW20719B2 SPI</name>
    <id>mtb-example-btsdk-cyw20719b2-spi</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw20719b2-spi</uri>
    <description><![CDATA[This code example demonstrates the SPI interface using CYW20719B2 boards.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-cyw20719b2-spi/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>ncu15wf104 fw2 btsdk CYW920719B2Q40EVB_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk,sensors,sensor hub,motion,accelerometer,gyro,compass,temperature,thermistor,magnetic,3d magnetic,i2c,adc,mtb-flow" req_capabilities_v2="lsm9ds1 ncu15wf104 fw2 btsdk">
    <name>LE SensorHub</name>
    <id>mtb-example-btsdk-sensorhub</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-sensorhub</uri>
    <description><![CDATA[This code example demonstrates the interfacing of Multiple sensors, Motion, Temperature, and 3D magnetic sensor and sends the data over GATT custom service.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-sensorhub/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>lsm9ds1 ncu15wf104 fw2 btsdk</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920719B2Q40EVB_01,CYW920819EVB_02]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920719B2Q40EVB_01,CYW920819EVB_02]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920719B2Q40EVB_01,CYW920819EVB_02]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="GPIO,PWM,btsdk,mtb-flow" req_capabilities_v2="[CYW920820M2EVB_01,CYW920835M2EVB_01,CYW920719B2Q40EVB_01,CYW920819EVB_02,CYW920820EVB_02]">
    <name>PWM GPIO</name>
    <id>mtb-example-btsdk-pwm-gpio</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-pwm-gpio</uri>
    <description><![CDATA[This example demonstrates the configuration of PWM (pulse width modulation) to control the brightness of an LED, and configuration of GPIO to toggle an LED ON and OFF.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-pwm-gpio/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk led2x</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,starter,template,empty,blank,mtb-flow" req_capabilities_v2="psoc4">
    <name>Empty PSoC4 App</name>
    <id>mtb-example-psoc4-empty-app</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-empty-app</uri>
    <description><![CDATA[This empty application provides a template for creating applications using PSoC&#8482; 4 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,dfu,bootloader,mtb-flow" req_capabilities_v2="psoc4 led">
    <name>PSoC 4 Basic device firmware upgrade</name>
    <id>mtb-example-psoc4-dfu-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-dfu-basic</uri>
    <description><![CDATA[This example demonstrates how to create a field upgradable project for PSoC&#8482; 4 using the DFU middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-dfu-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8ckit_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,dfu,bootloader,mtb-flow" req_capabilities_v2="psoc4 led">
    <name>PSoC 4 Device firmware upgrade host</name>
    <id>mtb-example-psoc4-dfu-host</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-dfu-host</uri>
    <description><![CDATA[This example demonstrates how to create an I2C-based DFU Host on PSoC&#8482; 4100S Max Pioneer Kit CY8CKIT-041S-MAX and flash the PSoC&#8482; 4000T DFU target device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-dfu-host/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,capsense,custom scan,mtb-flow" req_capabilities_v2="psoc6 led capsense_linear_slider">
    <name>CAPSENSE Custom Scan</name>
    <id>mtb-example-psoc6-capsense-custom-scan</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-custom-scan</uri>
    <description><![CDATA[This code example demonstrates CAPSENSE&#8482; custom scanning through callback functions from CAPSENSE&#8482; Middleware that allows altering the sensor parameters during runtime or synchronizing the CAPSENSE&#8482; scan with non-CAPSENSE&#8482; operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-capsense-custom-scan/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,msc,usb,file system,mass storage,sd,mtb-flow" req_capabilities_v2="psoc6 led usb_device pdm switch sdhc">
    <name>USB Mass Storage File System</name>
    <id>mtb-example-psoc6-usb-msc-filesystem-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-msc-filesystem-freertos</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU device as a Mass Storage (MSC) device and run a file system (FatFs) through an external memory (microSD). This example uses FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-msc-filesystem-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led usb_device pdm switch sdhc</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,airoc,wifi,mtb-flow,wifi-scan,wcm,scan filters,xmc7000" req_capabilities_v2="wifi led switch std_crypto [cyw55xxx,cyw43xxx] [psoc6, t2gbe, xmc7000] [flash_2048k, flash_1024k, flash_512k, flash_8384k, flash_1856k]">
    <name>Wi-Fi Scan</name>
    <id>mtb-example-wifi-scan</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-scan</uri>
    <description><![CDATA[This code example demonstrates how to configure different scan filters provided in the Wi-Fi Connection Manager (WCM) middleware and scan for the available Wi-Fi networks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-scan/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi led switch std_crypto cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.7.0 release</num>
        <commit>release-v4.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,wifi,mtb-flow,wcm,wps,enrollee,wps-pbc,wps-sta-pin,xmc7000" req_capabilities_v2="wifi led switch std_crypto [cyw43xxx,cyw55xxx] [psoc6,t2gbe, xmc7000] [flash_2048k, flash_1024k, flash_8384k, flash_1856k]">
    <name>WPS Enrollee</name>
    <id>mtb-example-wifi-wps-enrollee</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-wps-enrollee</uri>
    <description><![CDATA[This code example demonstrates how to use the connection management and WPS Enrollee feature provided in the Wi-Fi Connection Manager (WCM) middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-wps-enrollee/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi led switch std_crypto cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.7.0 release</num>
        <commit>release-v3.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.6.0 release</num>
        <commit>release-v3.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.5.0 release</num>
        <commit>release-v3.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sgpio,target,mtb-flow,smartio,spi" req_capabilities_v2="psoc6 smart_io">
    <name>SGPIO Target Interface</name>
    <id>mtb-example-psoc6-smartio-sgpio-target</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-smartio-sgpio-target</uri>
    <description><![CDATA[This example uses a SPI resource and Smart I/O in PSoC&#8482; 6 MCU to implement the serial general purpose input/output (SGPIO) target interface, which is a four-signal bus defined in the SFF-8485 standard. Another SPI resource is used to implement the SGPIO initiator, which drives the clock on the SGPIO bus.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-smartio-sgpio-target/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 smart_io</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>1.4.0 release</num>
        <commit>release-v1.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01,cysbsyskit_dev_01]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cysbsyskit_01]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,capsense,slider,linear slider,csd,tuning,i2c,tuner" req_capabilities_v2="psoc4 capsense_linear_slider">
    <name>CAPSENSE CSD Slider Tuning</name>
    <id>mtb-example-psoc4-capsense-csd-slider-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-capsense-csd-slider-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune Self Capacitance (CSD) based slider widget in PSoC&#8482; 4 devices using CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-csd-slider-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_145_40xx]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,ble,bluetooth,btstack,freertos,battery,4343w,43012" req_capabilities_v2="[psoc6,t2gbe] bt led">
    <name>Bluetooth LE Battery Server</name>
    <id>mtb-example-btstack-freertos-battery-server</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-battery-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; LE Battery Service. The Battery Service exposes the Battery Level of the device and supports over-the-air (OTA) update over Bluetooth&#174; Low Energy connection.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-battery-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw43022cub]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw43022cub]">
        <num>5.4.0 release</num>
        <commit>release-v5.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02,cy8ceval_062s2_cyw43022cub]">
        <num>5.3.0 release</num>
        <commit>release-v5.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02]">
        <num>5.2.0 release</num>
        <commit>release-v5.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8cproto_062s3_4343w,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8cproto_062s3_4343w,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8cproto_062_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8cproto_062_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,ble,bluetooth,btstack,freertos,findme,4343w,43012" req_capabilities_v2="bt led">
    <name>Bluetooth LE Findme</name>
    <id>mtb-example-btstack-freertos-findme</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-findme</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; Immediate Alert Service (IAS)-based Find Me Profile (FMP) using the Infineon PSoC&#8482; 6 MCU with AIROC&#8482; Bluetooth&#174; LE, AIROC&#8482; CYW20829, and AIROC&#8482; Wi-Fi & Bluetooth&#174; combo SoC devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-findme/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.9.0 release</num>
        <commit>release-v4.9.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw43022cub]">
        <num>4.8.0 release</num>
        <commit>release-v4.8.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.7.0 release</num>
        <commit>release-v4.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8ckit_062_wifi_bt,cysbsyskit_dev_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8ckit_062_wifi_bt,cysbsyskit_dev_01]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cy8ckit_062_wifi_bt]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,capsense,button,slider,i2c,tuner,ble,bluetooth,btstack,freertos,4343w,43012,43438,mtb-flow" req_capabilities_v2="psoc6 led bt capsense_button capsense_linear_slider [cyw43xxx,cyw55xxx] [flash_2048k, flash_1024k, flash_512k]">
    <name>Bluetooth LE CAPSENSE Buttons and Slider</name>
    <id>mtb-example-btstack-freertos-capsense-buttons-slider</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-capsense-buttons-slider</uri>
    <description><![CDATA[This code example features a 5-segment CAPSENSE&#8482; slider and two CAPSENSE&#8482; buttons with Bluetooth&#174; Low Energy custom service. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The LED status is notified to the client via Bluetooth&#174; Low Energy GATT profile.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-capsense-buttons-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led bt capsense_button capsense_linear_slider cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2,cy8ceval_062s2_cyw43022cub,cy8ckit_062_ble,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 6.X release</num>
        <commit>latest-v6.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2,cy8ceval_062s2_cyw43022cub,cy8ckit_062_ble,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>6.1.0 release</num>
        <commit>release-v6.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2,cy8ceval_062s2_cyw43022cub,cy8ckit_062_ble,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>6.0.0 release</num>
        <commit>release-v6.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>5.1.1 release</num>
        <commit>release-v5.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,lpa,wifi,wlan,lowpower" req_capabilities_v2="psoc6 wifi led low_power [cyw43xxx,cyw55xxx][flash_2048k, flash_1024k, flash_512k, flash_1856k]">
    <name>WLAN Low Power</name>
    <id>mtb-example-wifi-wlan-lowpower</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-wlan-lowpower</uri>
    <description><![CDATA[This code example demonstrates the low-power operation of a host MCU and a WLAN device using the network activity handlers provided by the Low Power Assistant middleware for AIROC&#8482; Wi-Fi & Bluetooth&#174; combos.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-wlan-lowpower/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ckit_064b0s2_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ckit_064b0s2_4343w]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tester,anycloud,ble,tool,manufacturing">
    <name>Tester - Bluetooth MFG Tool</name>
    <id>mtb-anycloud-bluetooth-mfg-tester</id>
    <category>Manufacturing</category>
    <uri>https://github.com/Infineon/mtb-anycloud-bluetooth-mfg-tester</uri>
    <description><![CDATA[This application is used to validate the Bluetooth&#174; Firmware and RF performance for PSoC&#8482; 6 MCU with Bluetooth&#174; BR/EDR/LE devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-anycloud-bluetooth-mfg-tester/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt anycloud cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tester,anycloud,wifi,wlan,certification,cert,tool" req_capabilities_v2="psoc6 wifi cyw43xxx low_power anycloud std_crypto">
    <name>Tester - Wi-Fi Cert Tool</name>
    <id>mtb-anycloud-wifi-cert-tester</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-anycloud-wifi-cert-tester</uri>
    <description><![CDATA[This Tester is a Wi-Fi Cert tool used for Wi-Fi 11n PSK/Enterprise Security certification for PSoC&#8482; 6 MCU with 2 MB flash and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-anycloud-wifi-cert-tester/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This tester application makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi low_power anycloud cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tester,anycloud,wifi,wlan,tool,manufacturing" req_capabilities_v2="[cat4, cy8ceval_062s2_mur_43439m2, cy8ceval_062s2_lai_4373m2, cy8ckit_062s2_43012, cy8cproto_062_4343w, cy8ceval_062s2_cyw955513sdm2wlipa] wifi low_power anycloud [flash_2048k, sram_2048k]">
    <name>Tester - Wi-Fi Bluetooth Console</name>
    <id>mtb-wifi-bluetooth-tester</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-wifi-bluetooth-tester</uri>
    <description><![CDATA[This application integrates command console library including Wi-Fi iPerf and Bluetooth&#174; Low Energy functionality. Using this application, the user can characterize the Wi-Fi/Bluetooth&#174; Low Energy functionality and performance.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-wifi-bluetooth-tester/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This tester application makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>wifi low_power anycloud</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.2 release</num>
        <commit>release-v2.0.2</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.4.0 release</num>
        <commit>release-v1.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.2.1 release</num>
        <commit>release-v1.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="1.0" req_capabilities_per_version="bsp_gen1">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tester,anycloud,wifi,wlan,tool,manufacturing" req_capabilities_v2="psoc6 wifi cyw43xxx low_power anycloud std_crypto">
    <name>Tester - Wi-Fi MFG Tool</name>
    <id>mtb-anycloud-wifi-mfg-tester</id>
    <category>Manufacturing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-anycloud-wifi-mfg-tester</uri>
    <description><![CDATA[This tester is a tool used for Wi-Fi manufacturing tests with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-anycloud-wifi-mfg-tester/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This tester application makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx low_power anycloud</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.0.1 release</num>
        <commit>release-v3.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,lpa,wifi,wlan,offload,tcp-keepalive,xmc7000" req_capabilities_v2="wifi low_power [cyw43xxx,cyw55xxx][psoc6, xmc7000] [flash_2048k, flash_1024k, flash_512k, flash_8384k, flash_1856k]">
    <name>WLAN Offloads</name>
    <id>mtb-example-wlan-offloads</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wlan-offloads</uri>
    <description><![CDATA[This code example demonstrates various Wireless Local Area Network (WLAN) offloads such as Address Resolution Protocol (ARP) offload, packet filter offload, and the Transmission Control Protocol (TCP) keepalive offload functionality offered by Infineon AIROC&#8482; Wi-Fi devices using PSoC&#8482; 6 MCU. It employs the Low Power Assistant (LPA) middleware library, which helps in developing low-power applications for Infineon devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wlan-offloads/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>5.5.0 release</num>
        <commit>release-v5.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>5.4.0 release</num>
        <commit>release-v5.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ckit_062s2_ai]">
        <num>5.3.0 release</num>
        <commit>release-v5.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>5.2.0 release</num>
        <commit>release-v5.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01,cy8ceval_062s2_lai_43439m2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cysbsyskit_dev_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cysbsyskit_dev_01]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,wifi,matter" req_capabilities_v2="psoc6 wifi cyw43xxx flash_2048k">
    <name>Matter Wi-Fi Door Lock</name>
    <id>mtb-example-psoc6-matter-door-lock</id>
    <category>Connectivity</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-matter-door-lock</uri>
    <description><![CDATA[This code example makes use of Matter on an Infineon PSoC&#8482; 6 board to demonstrate it's functionality as a Wi-Fi door lock device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-matter-door-lock/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx flash_2048k</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,qspi,fram,led" req_capabilities_v2="psoc6 led qspi fram">
    <name>QSPI F-RAM Access</name>
    <id>mtb-example-psoc6-qspi-fram-access</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-fram-access</uri>
    <description><![CDATA[This code example demonstrates interfacing with an external QSPI F-RAM memeory and access it in single, dual or quad SPI mode using the serial memory interface (SMIF) block in PSoC&#8482; 6 MCU. This example uses the PSoC&#8482; 6 MCU standard QSPI HAL driver library to build the QSPI F-RAM access API.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-qspi-fram-access/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led qspi fram</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,i2c,i2c-slave,callback,pwm,mtb-flow" req_capabilities_v2="i2c led psoc4">
    <name>I2C Slave Using Callbacks</name>
    <id>mtb-example-psoc4-i2c-slave-callback</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-i2c-slave-callback</uri>
    <description><![CDATA[This example demonstrates the operation of the I2C block for PSoC&#8482; 4 in Slave mode using callbacks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-i2c-slave-callback/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>i2c led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,tcpwm,interrupt" req_capabilities_v2="led psoc4">
    <name>Periodic Interrupt Using TCPWM</name>
    <id>mtb-example-psoc4-tcpwm-interrupt</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-tcpwm-interrupt</uri>
    <description><![CDATA[This example uses the TCPWM Component in the Timer/Counter mode to generate a periodic interrupt. An LED toggles whenever the interrupt occurs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-tcpwm-interrupt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,uart,led,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Hello World</name>
    <id>mtb-example-psoc4-hello-world</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-hello-world</uri>
    <description><![CDATA[This code example demonstrates simple UART communication by printing a "Hello world" message on a terminal and blinks an LED using PSoC&#8482; 4 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-hello-world/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,mtb-flow,gpio,interrupt,isr,led,deep sleep" req_capabilities_v2="led psoc4">
    <name>GPIO Interrupt</name>
    <id>mtb-example-psoc4-gpio-interrupt</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-gpio-interrupt</uri>
    <description><![CDATA[This code example demonstrates the use of a GPIO configured as an input pin to generate interrupts on PSoC&#8482; 4. The GPIO signal interrupts the CPU and executes a user-defined Interrupt Service Routine (ISR). The GPIO interrupt acts as a wakeup source to wake the CPU from Deep Sleep.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-gpio-interrupt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,csx,button,tuning,ezi2c,mtb-flow" req_capabilities_v2="psoc4 capsense_button">
    <name>CAPSENSE CSX Button Tuning</name>
    <id>mtb-example-psoc4-capsense-csx-button-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-capsense-csx-button-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a mutual capacitance (CSX)-based button widget in PSoC&#8482; 4 devices using CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-csx-button-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 capsense_button</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,i2c,i2c-master,ezi2c-slave,mtb-flow" req_capabilities_v2="i2c led psoc4">
    <name>I2C Master EzI2C Slave</name>
    <id>mtb-example-psoc4-i2c-master-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-i2c-master-slave</uri>
    <description><![CDATA[This example demonstrates the operation of I2C resource for PSoC&#8482; 4 in Master mode with an EzI2C slave.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-i2c-master-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>i2c led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,spi,master" req_capabilities_v2="led spi psoc4">
    <name>SPI Master</name>
    <id>mtb-example-psoc4-spi-master</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-spi-master</uri>
    <description><![CDATA[This example demonstrates the use of a SPI resource for PSoC&#8482; 4 in master mode using high level APIs. The SPI master is configured to send command packets to control a user LED on the slave.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-spi-master/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led spi psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,spi,slave" req_capabilities_v2="led spi psoc4">
    <name>SPI Slave</name>
    <id>mtb-example-psoc4-spi-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-spi-slave</uri>
    <description><![CDATA[This example demonstrates the use of a SPI Serial Communication Block (SCB) resource for PSoC&#8482; 4 in slave mode using high-level API. This example is intended to be used with PSoC&#8482; 4 SPI Master project
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-spi-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led spi psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,uart,dma" req_capabilities_v2="psoc4 dma">
    <name>SCB UART Transmit and Receive with DMA</name>
    <id>mtb-example-psoc4-uart-transmit-receive-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-uart-transmit-receive-dma</uri>
    <description><![CDATA[This code example demonstrates the UART transmit and receive operation in PSoC&#8482; 4 using DMA. The application uses a serial terminal to read data and echoes what is received.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-uart-transmit-receive-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 dma</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,led,pwm,tcpwm,dma,breathing" req_capabilities_v2="psoc4 led dma">
    <name>PWM Triggering a DMA Channel</name>
    <id>mtb-example-psoc4-pwm-trigger-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-pwm-trigger-dma</uri>
    <description><![CDATA[This example demonstrates how to route trigger signals on a PSoC&#8482; 4 device.The trigger signal, in this code example, is routed from the PWM to the DMA, using Device Configurator.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-pwm-trigger-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led dma</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,uart,transmit,receive" req_capabilities_v2="led psoc4">
    <name>UART Transmit and Receive</name>
    <id>mtb-example-psoc4-uart-transmit-receive</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-uart-transmit-receive</uri>
    <description><![CDATA[This example demonstrates the UART transmit and receive operation in PSoC&#8482; 4 device. The application uses a serial terminal to read data and to echo back the received data.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-uart-transmit-receive/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,i2s,audio,mtb-flow,smartio,spi" req_capabilities_v2="psoc6 smart_io">
    <name>I2S Master using Smart IO and SPI</name>
    <id>mtb-example-psoc6-smartio-i2s</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-smartio-i2s</uri>
    <description><![CDATA[This code example uses a SPI resource and Smart I/O in PSoC&#8482; 6 MCU to implement the Inter-IC Sound (I2S) master interface (TX only).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-smartio-i2s/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 smart_io</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ckit_062s4]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,pdm,pcm,i2s,mtb-flow,audio,microphone,codec" req_capabilities_v2="psoc6 pdm i2s switch [flash_2048k,flash_1024k,flash_1856k]">
    <name>PDM to I2S Audio</name>
    <id>mtb-example-psoc6-pdm-to-i2s</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pdm-to-i2s</uri>
    <description><![CDATA[This example demonstrates how to route Pulse-Density Modulation (PDM) audio data to the Inter-IC Sound (I2S) Interface in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-pdm-to-i2s/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 pdm i2s switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,mtb-flow,audio,microphone,recorder" req_capabilities_v2="psoc6 usb_device pdm">
    <name>USB Audio Recorder</name>
    <id>mtb-example-psoc6-usb-audio-recorder</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-audio-recorder</uri>
    <description><![CDATA[This example demonstrates the use of PSoC&#8482; 6 MCU to implement an audio recorder using the USB Audio Device Class.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-audio-recorder/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 usb_device pdm</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.3.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.3.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.3.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,mtb-flow,hid,mouse" req_capabilities_v2="psoc6 usb_device pdm">
    <name>USB HID Mouse</name>
    <id>mtb-example-psoc6-usb-hid-mouse</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-hid-mouse</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU as a HID. The device enumerates as a 3-button mouse.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-hid-mouse/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 usb_device pdm</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_064b0s3]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_064b0s3]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,mtb-flow,hid,generic" req_capabilities_v2="psoc6 usb_device pdm">
    <name>USB HID Generic</name>
    <id>mtb-example-psoc6-usb-hid-generic</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-hid-generic</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU as a Human Interface Device (HID). The device enumerates as a Generic HID device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-hid-generic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 usb_device pdm</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,wdt,interrupt,reset,deepsleep,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Watchdog timer interrupt and reset</name>
    <id>mtb-example-psoc4-wdt</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-wdt</uri>
    <description><![CDATA[This code example features the watchdog timer and its usage in interrupt mode, reset mode and how to wake up the device from deepsleep using watchdog interrupt.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-wdt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s,cy8ckit_040t,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_145_40xx,cy8ckit_149,cy8ckit_041_41xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,wdc,interrupt" req_capabilities_v2="psoc4 lptimer led">
    <name>Watchdog Counter Interrupts</name>
    <id>mtb-example-psoc4-wdc</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-wdc</uri>
    <description><![CDATA[This example demonstrates the use of PSoC&#8482; 4 Watchdog Counters in cascaded mode. The user LED is toggled every time the Counter2 interrupt occurs. The match values of all the counters are set to toggle the LED every 1 second.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-wdc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 lptimer led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc4,gpio,pins" req_capabilities_v2="led psoc4">
    <name>GPIO Pins</name>
    <id>mtb-example-psoc4-gpio</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-gpio</uri>
    <description><![CDATA[This example demonstrates multiple methods of configuring, reading, writing, and generating interrupts with PSoC&#8482; 4 General Purpose Input/Output (GPIO) pins.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-gpio/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,gpio,interrupt,switch" req_capabilities_v2="hal led switch low_power [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>HAL GPIO Interrupt</name>
    <id>mtb-example-hal-gpio-interrupt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-gpio-interrupt</uri>
    <description><![CDATA[This example demonstrates the use of a GPIO configured as an input pin to generate interrupts on an Infineon MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-gpio-interrupt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led switch low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.1 release</num>
        <commit>release-v3.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,rtc" req_capabilities_v2="hal rtc [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw20829,cyw89829]">
    <name>RTC Basics</name>
    <id>mtb-example-hal-rtc-basics</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-rtc-basics</uri>
    <description><![CDATA[This example demonstrates the usage of the real-time clock (RTC) in Infineon MCU. It shows how to get and set the time in the RTC using the RTC HAL API.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-rtc-basics/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal rtc uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyw989829m2evb_01,cyble_416045_eval,cy8cproto_062s2_43439,kit_xmc71_evk_lite_v1]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyw989829m2evb_01,cyble_416045_eval,cy8cproto_062s2_43439,kit_xmc71_evk_lite_v1]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cy8cproto_062s2_43439,kit_xmc71_evk_lite_v1]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cy8ckit_062s4,kit_xmc72_evk]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cy8ckit_062s4]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01,cy8ckit_062s4]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cysbsyskit_dev_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,adc,hal" req_capabilities_v2="psoc6 uart">
    <name>ADC basic</name>
    <id>mtb-example-hal-adc-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-adc-basic</uri>
    <description><![CDATA[This example demonstrates use of the ADC HAL driver to perform voltage measurements.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-adc-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,power,sleep,mtb-flow" req_capabilities_v2="cat1 led low_power psoc6 switch">
    <name>Switching Power Modes</name>
    <id>mtb-example-psoc6-switching-power-modes</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-switching-power-modes</uri>
    <description><![CDATA[This example demonstrates how to transition PSoC&#8482; 6 between the following power modes - Active, Sleep, Low Power Active, Low Power Sleep, and Deep Sleep.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-switching-power-modes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat1 led low_power psoc6 switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow, psoc4, low power, uart, led" req_capabilities_v2="led psoc4">
    <name>Power Modes</name>
    <id>mtb-example-psoc4-power-modes</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-power-modes</uri>
    <description><![CDATA[This code example shows how to enter system Sleep and Deep Sleep modes. After entering Deep Sleep or Sleep mode, the example also shows how to wake up from these low-power modes and return to normal Active mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-power-modes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,csd,button,tuning,ezi2c,mtb-flow" req_capabilities_v2="psoc4 led capsense_button">
    <name>CAPSENSE CSD Button Tuning</name>
    <id>mtb-example-psoc4-capsense-csd-button-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-capsense-csd-button-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a self-capacitance (CSD) based button widget in PSoC&#8482; 4 devices using CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-csd-button-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led capsense_button</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msc,capsense,csd,button,tuning,mtb-flow" req_capabilities_v2="psoc4 led msc_button">
    <name>MSC CAPSENSE CSD Button Tuning</name>
    <id>mtb-example-psoc4-msc-capsense-csd-button-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-msc-capsense-csd-button-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a self capacitance-based button widget in PSoC&#8482; 4 devices using the Multi Sense Converter (MSC) CSD-RM sensing technique and CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msc-capsense-csd-button-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led msc_button</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msc,capsense,csx,button,tuning,mtb-flow" req_capabilities_v2="psoc4 led msc_button">
    <name>MSC CAPSENSE CSX Button Tuning</name>
    <id>mtb-example-psoc4-msc-capsense-csx-button-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-msc-capsense-csx-button-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a mutual capacitance-based button widget in PSoC&#8482; 4 devices using the Multi Sense Converter (MSC) CSX-RM sensing technique and CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msc-capsense-csx-button-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led msc_button</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,starter,template,empty,blank,mtb-flow" req_capabilities_v2="xmc">
    <name>Empty XMC App</name>
    <id>mtb-example-xmc-empty-app</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-empty-app</uri>
    <description><![CDATA[This empty application provides a template for creating applications using XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-empty-app/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,gpio,led,isr,toggle,systick,mtb-flow" req_capabilities_v2="xmc led">
    <name>GPIO Toggle</name>
    <id>mtb-example-xmc-gpio-toggle</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-gpio-toggle</uri>
    <description><![CDATA[This code example demonstrates GPIO toggling by periodically blinking an LED using SysTick available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-gpio-toggle/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,gpio,led,freertos,mtb-flow" req_capabilities_v2="xmc led">
    <name>FreeRTOS Blinky</name>
    <id>mtb-example-xmc-blinky-freertos</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-blinky-freertos</uri>
    <description><![CDATA[This code example demonstrates blinking LED functionality implemented by FreeRTOS tasks running on the XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-blinky-freertos/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu4,pwm,led,mtb-flow" req_capabilities_v2="xmc led [ccu4, ccu4_capture]">
    <name>CCU4 PWM</name>
    <id>mtb-example-xmc-ccu4-pwm</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu4-pwm</uri>
    <description><![CDATA[This code example demonstrates the use of CCU4 module in XMC&#8482; MCU to create a PWM signal. The CCU4 slice is configured in monoshot mode and is restarted on an external start event.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu4-pwm/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu4,capture,mtb-flow" req_capabilities_v2="xmc ccu4_capture uart">
    <name>CCU4 Capture</name>
    <id>mtb-example-xmc-ccu4-capture</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu4-capture</uri>
    <description><![CDATA[This code example demonstrates the capture features of the Capture and Compare Unit 4 (CCU4) slices available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu4-capture/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc ccu4_capture uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu4,timer,concatenation,led,mtb-flow" req_capabilities_v2="xmc led [ccu4, ccu4_capture]">
    <name>CCU4 Timer Concatenation</name>
    <id>mtb-example-xmc-ccu4-timer-concatenation</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu4-timer-concatenation</uri>
    <description><![CDATA[This code example demonstrates the concatenation or linking feature of the Capture and Compare Unit 4 (CCU4) slices available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu4-timer-concatenation/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu4,timer,led,mtb-flow" req_capabilities_v2="xmc led [ccu4, ccu4_capture]]">
    <name>CCU4 Timer</name>
    <id>mtb-example-xmc-ccu4-timer</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu4-timer</uri>
    <description><![CDATA[This code example demonstrates the usage of the Capture and Compare Unit 4 (CCU4) timer by blinking an LED using CCU4 timer period match interrupt available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu4-timer/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,uart,printf,hello world,usic,mtb-flow" req_capabilities_v2="xmc uart">
    <name>UART Printf</name>
    <id>mtb-example-xmc-uart-printf</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-uart-printf</uri>
    <description><![CDATA[This example demonstrates how to use the printf function with a Universal Serial Interface Channel (USIC) based UART in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-uart-printf/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,uart,printf,shell,console,usic,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>UART Shell</name>
    <id>mtb-example-xmc-uart-shell</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-uart-shell</uri>
    <description><![CDATA[This code example demonstrates implementation of a shell on the UART communication interface including commands to toggle a LED using XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-uart-shell/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,uart,dma,usic,mtb-flow" req_capabilities_v2="xmc dma">
    <name>UART DMA</name>
    <id>mtb-example-xmc-uart-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-uart-dma</uri>
    <description><![CDATA[This example demonstrates how to stream data using DMA via UART based on Universal Serial Interface Channel (USIC) to an external terminal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-uart-dma/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dma</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,uart,dma,usic,mtb-flow" req_capabilities_v2="xmc dma">
    <name>DMA Ring Buffer</name>
    <id>mtb-example-xmc-dma-ring-buffer</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-dma-ring-buffer</uri>
    <description><![CDATA[This code example demonstrates how to receive data using DMA via a Universal Serial Interface Channel (USIC) and synchronize the processing with an OS task through a ring buffer. For simplicity, the OS task is emulated inside this example with a SysTick Timer interrupt.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-dma-ring-buffer/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dma</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,i2c,master,slave,transmit,receive,usic,led,mtb-flow" req_capabilities_v2="xmc i2c led">
    <name>I2C Master and Slave</name>
    <id>mtb-example-xmc-i2c-master-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-i2c-master-slave</uri>
    <description><![CDATA[This code example demonstrates the implementation of an I2C master and an I2C slave on the same device based on the Universal Serial Interface Channel (USIC). The I2C master sends commands to the I2C slave to toggle the LEDs present on the XMC&#8482; development kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-i2c-master-slave/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc i2c led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,flash,program,sector,erase,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>Flash Program</name>
    <id>mtb-example-xmc-flash-program</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-flash-program</uri>
    <description><![CDATA[This code example demonstrates how to erase a sector of the flash, write data to the sector and check the data for correctness on the XMC&#8482; MCU device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-flash-program/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu8,timer,led,mtb-flow" req_capabilities_v2="xmc led ccu8">
    <name>CCU8 Timer</name>
    <id>mtb-example-xmc-ccu8-timer</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu8-timer</uri>
    <description><![CDATA[This code example demonstrates the usage of Capture-Compare Unit 8 (CCU8) in the XMC&#8482; MCU in timer mode. The CCU8 timer slice program blinks an LED when a timer period match interrupt occurs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu8-timer/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,adc,vadc,scan,continuous scan,led,mtb-flow" req_capabilities_v2="xmc adc [xmc4000]">
    <name>VADC Scan</name>
    <id>mtb-example-xmc-vadc-scan</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-vadc-scan</uri>
    <description><![CDATA[This code example demonstrates working of the Versatile Analog to Digital Converter (VADC) in the XMC&#8482; MCU in continuous scan mode for one channel.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-vadc-scan/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led adc</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,rtc,alarm,led,mtb-flow" req_capabilities_v2="xmc rtc led">
    <name>RTC Alarm</name>
    <id>mtb-example-xmc-rtc-alarm</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-rtc-alarm</uri>
    <description><![CDATA[This code example demonstrates an RTC alarm interrupt of 1 minute to set a periodically blinking LED on the XMC&#8482; MCU Evaluation kits.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-rtc-alarm/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc rtc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu8,pwm,led,mtb-flow" req_capabilities_v2="xmc led ccu8">
    <name>CCU8 PWM</name>
    <id>mtb-example-xmc-ccu8-pwm</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu8-pwm</uri>
    <description><![CDATA[This code example demonstrates how to generate PWM signals using Capture and Compare unit (CCU8) slices available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu8-pwm/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu8,capture,led,mtb-flow" req_capabilities_v2="xmc led ccu8">
    <name>CCU8 Capture</name>
    <id>mtb-example-xmc-ccu8-capture</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu8-capture</uri>
    <description><![CDATA[This code example demonstrates the capture feature of Capture and Compare unit (CCU8) slices available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu8-capture/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu8,pwm,mtb-flow" req_capabilities_v2="xmc ccu8 uart">
    <name>CCU8 PWM Complementary</name>
    <id>mtb-example-xmc-ccu8-pwm-complementary</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-ccu8-pwm-complementary</uri>
    <description><![CDATA[This code example demonstrates generating two complementary pulse width modulated (PWM) waves using the Capture and Compare Unit(CCU8 module) available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu8-pwm-complementary/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc ccu8 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,dac,sine,wave,analog,mtb-flow" req_capabilities_v2="xmc dac">
    <name>DAC Sine Wave</name>
    <id>mtb-example-xmc-dac-sine</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-dac-sine</uri>
    <description><![CDATA[This code example demonstrates the usage of DAC peripheral of the XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-dac-sine/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dac</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,acmp,comparator,analog,led,mtb-flow" req_capabilities_v2="xmc1000 led comp">
    <name>Analog Comparator</name>
    <id>mtb-example-xmc-acmp-cmp</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-acmp-cmp</uri>
    <description><![CDATA[This code example demonstrates the usage of the Analog Comparator (ACMP) peripheral of XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-acmp-cmp/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc1000 led comp</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,flash,emulated,eeprom,mtb-flow" req_capabilities_v2="xmc uart">
    <name>Flash EEPROM</name>
    <id>mtb-example-xmc-flash-eeprom</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-xmc-flash-eeprom</uri>
    <description><![CDATA[This code example shows how to use a portion of the internal flash memory of XMC&#8482; MCUs as emulated EEPROM memory, and provides necessary APIs to perform read and write operations to the emulated EEPROM.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-flash-eeprom/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,can,receiver,led,mtb-flow" req_capabilities_v2="xmc can led">
    <name>CAN Receiver</name>
    <id>mtb-example-xmc-can-receiver</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-can-receiver</uri>
    <description><![CDATA[This example demonstrates how to receive CAN messages over the CAN bus using XMC&#8482; MCU. This example can be used together with the <a href="https://github.com/Infineon/mtb-example-xmc-can-transmitter">CAN Transmitter</a> example running on another board.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-can-receiver/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc can led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,can,loopback,led,mtb-flow" req_capabilities_v2="xmc can led [xmc4000, kit_xmc14_boot_001]">
    <name>CAN Loopback</name>
    <id>mtb-example-xmc-can-loopback</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-can-loopback</uri>
    <description><![CDATA[This code example demonstrates the communication between two CAN nodes in loopback mode using XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-can-loopback/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc can led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,dma,fce,crc,led,mtb-flow" req_capabilities_v2="xmc dma led">
    <name>DMA FCE</name>
    <id>mtb-example-xmc-dma-fce</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-dma-fce</uri>
    <description><![CDATA[This code example demonstrates how to use DMA to feed the Flexible CRC Engine (FCE) to calculate the CRC-32 on a fictitious frame of data in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-dma-fce/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dma led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,spi,dma,led,mtb-flow" req_capabilities_v2="xmc dma spi led">
    <name>SPI DMA</name>
    <id>mtb-example-xmc-spi-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-spi-dma</uri>
    <description><![CDATA[This code example demonstrates how to use DMA driver to transfer data from RAM to SPI freeing the CPU for other tasks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-spi-dma/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dma spi led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,fce,crc,led,mtb-flow" req_capabilities_v2="xmc led xmc4000">
    <name>FCE CRC</name>
    <id>mtb-example-xmc-fce-crc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-fce-crc</uri>
    <description><![CDATA[This code example uses the Flexible CRC Engine (FCE) driver for kernel to demonstrate CRC-32, CRC-16, and CRC-8 checksum calculations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-fce-crc/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led xmc4000</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,can,transmitter,led,mtb-flow" req_capabilities_v2="xmc can led">
    <name>CAN Transmitter</name>
    <id>mtb-example-xmc-can-transmitter</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-can-transmitter</uri>
    <description><![CDATA[This example demonstrates how to transmit CAN messages over the CAN bus using XMC&#8482; MCU. This example can be used with the <a href="https://github.com/Infineon/mtb-example-xmc-can-receiver">CAN Receiver</a> example running on another board.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-can-transmitter/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc can led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,uart,transmit,hello world,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>UART Transmit</name>
    <id>mtb-example-xmc-uart-transmit</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-uart-transmit</uri>
    <description><![CDATA[This code example demonstrates simple UART communication by printing periodic "Hello World!!" message on a terminal and blinking an LED. The message can be seen on a PC terminal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-uart-transmit/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,math,sqrt,square root,cordic,mtb-flow" req_capabilities_v2="xmc xmc1000 [kit_xmc14_boot_001]">
    <name>MATH SQRT</name>
    <id>mtb-example-xmc-math-sqrt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-math-sqrt</uri>
    <description><![CDATA[This code example uses the MATH CORDIC block to perform the square root operation for the given input number.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-math-sqrt/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc xmc1000</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,eru,extint,interrupt,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>ERU EXTINT</name>
    <id>mtb-example-xmc-eru-extint</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-eru-extint</uri>
    <description><![CDATA[This code example demonstrates Event Request Unit (ERU) functionality with external interrupt on XMC&#8482; MCU evaluation kits. In this example, an external signal, fed into the ERU unit using a GPIO pin, triggers a service request interrupt that toggles an LED.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-eru-extint/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,scu,sleep,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>SCU Sleep</name>
    <id>mtb-example-xmc-scu-sleep</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-scu-sleep</uri>
    <description><![CDATA[This code example demonstrates the System Control Unit (SCU) sleep mode on the XMC&#8482; MCU evaluation kits. Wakeup is done by using an external interrupt via the Event Request Unit (ERU). An LED glows at every falling edge of the external signal inside the ERU interrupt. The MCU is put back to sleep mode again after servicing the interrupt.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-scu-sleep/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,watchdog,wdt,prewarning,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>WDT Prewarning</name>
    <id>mtb-example-xmc-wdt-prewarning</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-wdt-prewarning</uri>
    <description><![CDATA[This code example demonstrates the prewarning feature of the watchdog timer (WDT) on the XMC&#8482; MCU evaluation kits.
    <br>A pre-warning alarm is triggered before a watchdog reset only if the watchdog timer is not serviced properly. When a prewarning condition occurs, the User LED1 blinks once. After a watchdog reset, the MCU checks the reason for the last reset; if it was caused by a watchdog reset, the User LED2 blinks at a faster rate.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-wdt-prewarning/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu8,timer,concatenation,led,mtb-flow" req_capabilities_v2="xmc led ccu8">
    <name>CCU8 Timer Concatenation</name>
    <id>mtb-example-xmc-ccu8-timer-concatenation</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-ccu8-timer-concatenation</uri>
    <description><![CDATA[This code example demonstrates the concatenation or linking feature of the Capture and Compare Unit 8 (CCU8) slices available in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu8-timer-concatenation/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,spi,master,transmit,led,mtb-flow" req_capabilities_v2="xmc led spi">
    <name>SPI Master</name>
    <id>mtb-example-xmc-spi-master</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-spi-master</uri>
    <description><![CDATA[This code example demonstrates the transfer of 3 bytes of data using SPI Master in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-spi-master/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,dma,pwm,mtb-flow" req_capabilities_v2="xmc dma">
    <name>DMA PWM</name>
    <id>mtb-example-xmc-dma-pwm</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-dma-pwm</uri>
    <description><![CDATA[This code example demonstrates the use of DMA double buffering with the PWM block. DMA writes to the compare register of the PWM to obtain a varying duty cycle at the output. Two buffers are present to provide an increasing duty cycle in one and a decreasing duty cycle in the other.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-dma-pwm/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dma</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,dma,gpio,led,mtb-flow" req_capabilities_v2="xmc dma led">
    <name>DMA GPIO</name>
    <id>mtb-example-xmc-dma-gpio</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-dma-gpio</uri>
    <description><![CDATA[This code example demonstrates how to configure the GPIO registers using GPDMA.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-dma-gpio/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dma led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,dma,m2m,led,mtb-flow" req_capabilities_v2="xmc dma led">
    <name>DMA M2M</name>
    <id>mtb-example-xmc-dma-m2m</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-dma-m2m</uri>
    <description><![CDATA[This example demonstrates the transfer of data from the flash to the RAM using the GPDMA peripheral.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-dma-m2m/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc dma led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,mtb-flow,flash-protection,flash,protection" req_capabilities_v2="xmc xmc4000">
    <name>Flash Protection</name>
    <id>mtb-example-xmc-flash-protection</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-flash-protection</uri>
    <description><![CDATA[This example demonstrates how flash protection can be configured in the XMC&#8482;4000 Series of devices.
    <br><br><b>Note:</b> This code example involves programming the User Configuration Blocks (UCB), which can only be programmed only a limited number of times. See the Design and Implementation section in the README before proceeding with this code example.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-flash-protection/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc xmc4000</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,uart,transmit,tx,receive,rx,fifo,interrupt,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>UART Transmit Receive FIFO Interrupts</name>
    <id>mtb-example-xmc-uart-transmit-receive-fifo-interrupts</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-uart-transmit-receive-fifo-interrupts</uri>
    <description><![CDATA[This code example demonstrates how to use the Tx and Rx FIFO limit interrupts and send data from the Tx buffer to the Rx buffer. If reception is successful, the on-board LED 1 glows; otherwise, the LED remains OFF.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-uart-transmit-receive-fifo-interrupts/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,tse,calc,temperature,dts,mtb-flow" req_capabilities_v2="xmc led xmc1000">
    <name>TSE Calc Temperature</name>
    <id>mtb-example-xmc-tse-calc-temperature</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-tse-calc-temperature</uri>
    <description><![CDATA[This code example demonstrates how to use TSE (on-chip temperature sensor). TSE calculates temperature readings from the sensor and sends them over UART periodically every 1 s. Correspondingly, the LED blinks every 1 s; the temperature readings can be observed on the terminal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-tse-calc-temperature/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led xmc1000</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,ccu,ccu8,sync,start,timer,led,mtb-flow" req_capabilities_v2="xmc led ccu8">
    <name>CCU8 Timer Synchronous Start</name>
    <id>mtb-example-xmc-ccu8-sync-start</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-ccu8-sync-start</uri>
    <description><![CDATA[This code example demonstrates the synchronous start of Capture-Compare Unit 8 (CCU80 and CCU81) in the XMC&#8482; MCU upon receving a trigger from the Event Request Unit (ERU). The CCU8 timer slice program blinks the on-board user LEDs (CCU80 blinks User LED1 and CCU81 blinks User LED2) when a timer period match interrupt occurs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu8-sync-start/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,math,cordic,mtb-flow" req_capabilities_v2="xmc xmc1000 [kit_xmc14_boot_001]">
    <name>MATH CORDIC</name>
    <id>mtb-example-xmc-math-cordic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-math-cordic</uri>
    <description><![CDATA[This code example uses the MATH CORDIC block to perform circular, hyperbolic, and logarithmic operations. The example demonstrates the blocking, non-blocking, and direct register write operations of the CORDIC block.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-math-cordic/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc xmc1000</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,posif,qd,led,mtb-flow" req_capabilities_v2="xmc led posif">
    <name>POSIF QD</name>
    <id>mtb-example-xmc-posif-qd</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-posif-qd</uri>
    <description><![CDATA[This example demonstrates a Position Interface (POSIF) module in Quadrature Decoder (QD) mode and uses the CCU40 module to determine the speed of rotation of the encoder.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-posif-qd/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led posif</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,adc,vadc,background,bg,led,mtb-flow" req_capabilities_v2="xmc led adc">
    <name>VADC Background</name>
    <id>mtb-example-xmc-vadc-bg</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-vadc-bg</uri>
    <description><![CDATA[This example demonstrates how to convert a single channel using the background source in VADC. In this example, the background source continuously requests conversion. The ADC conversion result is read and displayed on the UART Terminal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-vadc-bg/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led adc</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,watchdog,wdt,feed,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>WDT FEED</name>
    <id>mtb-example-xmc-wdt-feed</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-wdt-feed</uri>
    <description><![CDATA[This code example demonstrates a Watchdog Timer (WDT) on the XMC&#8482; MCU.
    <br><br>The WDT needs to be fed every second for proper serving of the WDT. The SysTick timer is used to feed the WDT. When feeding occurs, the User LED blinks. If there is no feeding, the device goes into reset. After the reset, the MCU checks the reason for the last reset. If it is due to a failure to feed the WDT, the User LED blinks at a faster rate.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-wdt-feed/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,qspi-flash,flash,qspi,spi-qspi-flash,led,mtb-flow" req_capabilities_v2="xmc4000 led spi">
    <name>SPI QSPI Flash</name>
    <id>mtb-example-xmc-spi-qspi-flash</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-spi-qspi-flash</uri>
    <description><![CDATA[This example demonstrates how the communication between the XMC&#8482;4700 (master) and the on-board QSPI flash chip N25Q03 (slave) takes place using the Quad SPI interface.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-spi-qspi-flash/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc4000 led spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,brownout,detection,power-supply,led,mtb-flow" req_capabilities_v2="xmc led">
    <name>Brownout Detection</name>
    <id>mtb-example-xmc-scu-brownout-detection</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-scu-brownout-detection</uri>
    <description><![CDATA[This code example demonstrates brownout detection by reducing power supply voltage from 3.3 V to the defined voltage threshold using brownout detection available in XMC&#8482; MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-scu-brownout-detection/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,adc,vadc,queue,mtb-flow" req_capabilities_v2="xmc adc">
    <name>VADC Queue</name>
    <id>mtb-example-xmc-vadc-queue</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-vadc-queue</uri>
    <description><![CDATA[This example demonstrates how to convert multiple channels in a dedicated sequence using the queue source in VADC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-vadc-queue/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc adc</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,mtb-flow,flash-bmi,flash,bmi,boot-mode-index" req_capabilities_v2="xmc xmc4000">
    <name>Flash BMI</name>
    <id>mtb-example-xmc-flash-bmi</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-flash-bmi</uri>
    <description><![CDATA[This example demonstrates how Boot Mode Index (BMI) can be used to configure a customized boot sequence on XMC&#8482;4700 device.
    <br><br><b>Note:</b> This code example involves programming the User Configuration Blocks (UCB), which can be programmed only a limited number of times. See the Design and Implementation section in the README before proceeding with this code example.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-flash-bmi/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc xmc4000</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,posif,hall,uart,led,mtb-flow" req_capabilities_v2="xmc posif uart">
    <name>POSIF Hall</name>
    <id>mtb-example-xmc-posif-hall</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-posif-hall</uri>
    <description><![CDATA[This code example demonstrates a position interface (POSIF) module in Hall sensor mode and uses the capture and compare unit 4 (CCU40) module to determine the speed of rotation of the motor.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-posif-hall/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc posif uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [kit_xmc14_boot_001,kit_xmc47_relax_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,udp,client,wifi,led" req_capabilities_v2="psoc6 wifi led std_crypto [cyw43xxx,cyw55xxx][flash_2048k, flash_1024k, flash_512k, flash_1856k]">
    <name>Wi-Fi UDP Client</name>
    <id>mtb-example-wifi-udp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-udp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP Client using the Wi-Fi connectivity SDK. The UDP Client establishes a connection with a remote UDP server and based on the command received from the UDP server, turns the user LED ON or OFF using PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-udp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi led std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,udp,server,wifi,switch" req_capabilities_v2="psoc6 wifi switch std_crypto [cyw43xxx,cyw55xxx][flash_2048k,flash_1024k,flash_512k,flash_1856k]">
    <name>Wi-Fi UDP Server</name>
    <id>mtb-example-wifi-udp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-udp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP Server using the Wi-Fi connectivity SDK. The UDP Server allows the user to send LED ON/OFF command to the UDP client using PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-udp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi switch std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,wifi,ota,http,https,xmc7000" req_capabilities_v2="wifi led [cyw43xxx,cyw55xxx][psoc6, xmc7000]">
    <name>OTA Using HTTPS</name>
    <id>mtb-example-ota-https</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-ota-https</uri>
    <description><![CDATA[This code example demonstrates OTA update with PSoC&#8482; 6 or XMC&#8482; 7000 MCU and AIROC&#8482; CYW43xxx Wi-Fi & Bluetooth&#174; combo chips. The device establishes a connection with the designated HTTPS server. It periodically checks the job document to see if a new update is available. When a new update is available, it is downloaded and written to the secondary slot. On the next reboot, MCUboot swaps the new image in the secondary slot with the primary slot image and runs the application. If the new image is not validated in runtime, on the next reboot, MCUboot reverts to the previously validated image.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ota-https/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 6.X release</num>
        <commit>latest-v6.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012, cy8cproto_062_4343w, cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>6.2.0 release</num>
        <commit>release-v6.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012, cy8cproto_062_4343w, cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>6.1.0 release</num>
        <commit>release-v6.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012, cy8cproto_062_4343w, cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>6.0.0 release</num>
        <commit>release-v6.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub]">
        <num>5.5.0 release</num>
        <commit>release-v5.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub]">
        <num>5.4.0 release</num>
        <commit>release-v5.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>5.3.0 release</num>
        <commit>release-v5.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>5.2.0 release</num>
        <commit>release-v5.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,uart,capsense,slider,ganged sensor,i2c,tuner,rtos,mtb-flow" req_capabilities_v2="psoc6 capsense_linear_slider low_power">
    <name>Low-power CAPSENSE FreeRTOS</name>
    <id>mtb-example-psoc6-low-power-capsense-freertos</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-low-power-capsense-freertos</uri>
    <description><![CDATA[This code example demonstrates how to create a low-power CAPSENSE&#8482; design using PSoC&#8482; 6 MCU. This example features a 5-segment CAPSENSE&#8482; slider and a Ganged Sensor, and displays the detected touch position over the serial terminal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-low-power-capsense-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 capsense_linear_slider low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_064s0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_064s0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_064s0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_064s0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_064s0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_063_ble]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_063_ble]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8cproto_063_ble]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,wifi,ota,mqtt" req_capabilities_v2="wifi led [cyw43xxx,cyw55xxx][psoc6, xmc7000]">
    <name>OTA Using MQTT</name>
    <id>mtb-example-ota-mqtt</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-ota-mqtt</uri>
    <description><![CDATA[This code example demonstrates OTA update with PSoC&#8482; 6 or XMC&#8482; 7000 MCU and AIROC&#8482; CYW43xxx Wi-Fi & Bluetooth&#174; combo chips. The device establishes a connection with the designated MQTT broker (this example uses a local Mosquitto broker). It periodically checks the job document to see if a new update is available. When a new update is available, it is downloaded and written to the secondary slot. On the next reboot, MCUboot swaps the new image in the secondary slot with the primary slot image and runs the application. If the new image is not validated in runtime, on the next reboot MCUboot reverts to the previously validated image.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ota-mqtt/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 7.X release</num>
        <commit>latest-v7.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>7.2.0 release</num>
        <commit>release-v7.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>7.1.0 release</num>
        <commit>release-v7.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>7.0.0 release</num>
        <commit>release-v7.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w]">
        <num>Latest 6.X release</num>
        <commit>latest-v6.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w]">
        <num>6.1.0 release</num>
        <commit>release-v6.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w]">
        <num>6.0.0 release</num>
        <commit>release-v6.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,suspend,resume,mtb-flow" req_capabilities_v2="psoc6 led usb_device">
    <name>USB Suspend and Resume</name>
    <id>mtb-example-psoc6-usb-suspend</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-suspend</uri>
    <description><![CDATA[This code example demonstrates how PSoC&#8482; 6 USB detects a suspend condition, enters a low-power state, and restores normal operation when USB activity is resumed.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-suspend/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ckit_062s4]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,button,led,ble,findme,FMP,GAP peripheral,mtb-flow" req_capabilities_v2="psoc6 led switch">
    <name>Bluetooth LE Find Me</name>
    <id>mtb-example-psoc6-ble-findme</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-findme</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; Low Energy Immediate Alert Service (IAS)-based Find Me Profile (FMP) using PSoC&#8482; 6 MCU with Bluetooth&#174; Low Energy Connectivity.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-findme/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8cproto_063_ble]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8cproto_063_ble]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,http,https,server,wifi,xmc7000" req_capabilities_v2="led wifi std_crypto [cyw43xxx,cyw55xxx][psoc6,t2gbe, xmc7000] [flash_8384k, flash_2048k,flash_1024k,flash_512k,flash_1856k]">
    <name>Wi-Fi HTTPS Server</name>
    <id>mtb-example-wifi-https-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-https-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of an HTTPS server with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices. It employs the HTTPS server middleware library, which takes care of all the underlying socket connections with the HTTPS client. This example establishes a secure connection with a HTTPS client through SSL handshake. Once the SSL handshake completes successfully, the HTTPS client can make GET, POST, and PUT requests with the server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-https-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license.<br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx led wifi std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,http,softap,tft,server,wifi,AP+STA concurrent mode,web server" req_capabilities_v2="psoc6 led capsense_button capsense_linear_slider wifi [cyw43xxx,cyw55xxx][flash_2048k, flash_1024k, flash_1856k]">
    <name>Wi-Fi Web Server</name>
    <id>mtb-example-wifi-web-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-web-server</uri>
    <description><![CDATA[This code example demonstrates Wi-Fi provisioning via a SoftAP interface and setting up a web server using PSoC&#8482; 6 MCU with AIROC&#8482; CYW43xxx Wi-Fi & Bluetooth&#174; combo chips. In this example, the PSoC&#8482; 6 MCU device is configured in AP+STA concurrent mode. It starts an HTTP web server while in AP+STA concurrent mode and hosts an HTTP web page. The kit can be connected to the desired Wi-Fi network by entering the credentials via this web page. After connecting to the specified Wi-Fi network, the device is reconfigured to start a new HTTP web server. The new web server hosts a web page that displays the device data containing ambient light sensor (ALS) value and provides a button to change the brightness of an LED.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-web-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx led capsense_button capsense_linear_slider wifi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8cproto_062s2_43439]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8cproto_062_4343w,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tcp,secure,client,wifi,xmc7000" req_capabilities_v2="wifi led switch [cyw43xxx,cyw55xxx][psoc6,t2gbe, xmc7000] [flash_8384k, flash_2048k,flash_1024k,flash_512k,flash_1856k]">
    <name>Wi-Fi Secure TCP client</name>
    <id>mtb-example-wifi-secure-tcp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-secure-tcp-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of a secure TCP client using PSoC&#8482; 6 MCU with AIROC&#8482; CYW43xxx Wi-Fi & Bluetooth&#174; combo chips.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-secure-tcp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5, bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5, bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.8.0 release</num>
        <commit>release-v4.8.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5, bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.7.0 release</num>
        <commit>release-v4.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tcp,secure,server,wifi,xmc7000" req_capabilities_v2="wifi led switch [cyw43xxx,cyw55xxx][psoc6,t2gbe, xmc7000] [flash_8384k, flash_2048k, flash_1024k, flash_512k,flash_1856k]">
    <name>Wi-Fi Secure TCP server</name>
    <id>mtb-example-wifi-secure-tcp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-secure-tcp-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a secure TCP server using PSoC&#8482; 6 MCU with AIROC&#8482; CYW43xxx Wi-Fi & Bluetooth&#174; combo chips.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-secure-tcp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5, bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5, bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.8.0 release</num>
        <commit>release-v4.8.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5, bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.7.0 release</num>
        <commit>release-v4.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,kit_xmc72_evk_mur_43439m2]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tcp,client,wifi" req_capabilities_v2="psoc6 wifi led std_crypto switch [cyw43xxx,cyw55xxx][flash_2048k,flash_1024k,flash_1856k]">
    <name>Wi-Fi TCP Client</name>
    <id>mtb-example-wifi-tcp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-tcp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of TCP client with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-tcp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led std_crypto switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tcp,server,wifi" req_capabilities_v2="psoc6 wifi led std_crypto switch [cyw43xxx,cyw55xxx][flash_2048k,flash_1024k,flash_1856k]">
    <name>Wi-Fi TCP Server</name>
    <id>mtb-example-wifi-tcp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-tcp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of a TCP server with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-tcp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led std_crypto switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cysbsyskit_dev_01,cysbsyskit_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,mqtt,client,wifi,aws,mosquitto,xmc7000" req_capabilities_v2="wifi led switch [cyw43xxx,cyw55xxx][psoc6, xmc7000] [flash_2048k, flash_1024k, flash_512k, flash_8384k,flash_1856k]">
    <name>Wi-Fi MQTT Client</name>
    <id>mtb-example-wifi-mqtt-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-mqtt-client</uri>
    <description><![CDATA[This code example demonstrates implementing an MQTT Client using the MQTT Client library. The library uses the AWS IoT device SDK Port library and implements the glue layer that is required for the library to work with Infineon&#8482; connectivity platforms. This example can be ported to CM0+ core using a make variable CORE from Makefile.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-mqtt-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license.<br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_064b0s2_4343w,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 6.X release</num>
        <commit>latest-v6.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_064b0s2_4343w,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>6.6.0 release</num>
        <commit>release-v6.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_064b0s2_4343w,cy8ckit_062s2_ai,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>6.5.1 release</num>
        <commit>release-v6.5.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_064b0s2_4343w,cy8ckit_062s2_ai]">
        <num>6.5.0 release</num>
        <commit>release-v6.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_064b0s2_4343w]">
        <num>6.4.0 release</num>
        <commit>release-v6.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_cyw43022cub,cy8ckit_064b0s2_4343w]">
        <num>6.3.0 release</num>
        <commit>release-v6.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,kit_xmc72_evk_mur_43439m2]">
        <num>6.2.0 release</num>
        <commit>release-v6.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>6.1.0 release</num>
        <commit>release-v6.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>6.0.0 release</num>
        <commit>release-v6.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w,cy8ceval_062s2_lai_43439m2]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s3_4343w]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_062_wifi_bt]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062s2_43012]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,mqtt,azure-iot,azure,azure-sdk,wifi" req_capabilities_v2="psoc6 wifi cyw43xxx">
    <name>Connecting to Azure IoT</name>
    <id>mtb-example-azure-iot</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-azure-iot</uri>
    <description><![CDATA[This code example demonstrates connecting to the Azure IoT services using the <a href="https://github.com/Azure/azure-sdk-for-c">Azure SDK for Embedded C</a> and Infineon's Wi-Fi connectivity SDK in ModusToolbox&#8482;. This code example demonstrates the features such as IoT hub - C2D (Cloud-to-Device messaging), Telemetry, Methods, Twin, Provisioning, and PnP (Plug and Play).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-azure-iot/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license.<br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s2_43439,cy8ceval_062_s2_lai_43439m2,cy8ceval_062_s2_mur_4373em2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s2_43439,cy8ceval_062_s2_lai_43439m2,cy8ceval_062_s2_mur_4373em2]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8cproto_062s2_43439,cy8ceval_062_s2_lai_43439m2,cy8ceval_062_s2_mur_4373em2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064s0s2_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064s0s2_4343w]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064s0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064s0s2_4343w]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064s0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,audio,freertos,mtb-flow" req_capabilities_v2="psoc6 usb_device capsense_button capsense_linear_slider i2s">
    <name>USB Audio Device FreeRTOS</name>
    <id>mtb-example-psoc6-usb-audio-device-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-audio-device-freertos</uri>
    <description><![CDATA[This example demonstrates how to use PSoC&#8482; 6 MCU to implement a USB Audio Device and HID Audio Playback Control that connects to the PC via the USB interface. The example also uses FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-audio-device-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 usb_device capsense_button capsense_linear_slider i2s</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.2.0" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cryptography,trng,mtb-flow" req_capabilities_v2="hal uart std_crypto [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite]">
    <name>Cryptography TRNG Demonstration</name>
    <id>mtb-example-hal-crypto-trng</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-crypto-trng</uri>
    <description><![CDATA[This code example demonstrates how to generate a one-time password (OTP) of eight characters in length with the true random number generation feature using the cryptographic hardware block in MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-crypto-trng/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal uart std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,bmi160,motion,motion-sensor,bmi160,freertos,mtb-flow" req_capabilities_v2="psoc6 i2c">
    <name>BMI160 Motion Sensor over I2C FreeRTOS</name>
    <id>mtb-example-psoc6-bmi160-motion-sensor-freertos</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-bmi160-motion-sensor-freertos</uri>
    <description><![CDATA[This example demonstrates how to interface PSoC&#8482; 6 MCU with a BMI160 Motion Sensor over an I2C interface within a FreeRTOS task using the BMI160 motion sensor library. This example reads the raw motion data and estimates the orientation of the board.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-bmi160-motion-sensor-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cryptography,aes,mtb-flow" req_capabilities_v2="uart std_crypto [psoc6,t2gbe]">
    <name>Cryptography AES Demonstration</name>
    <id>mtb-example-psoc6-crypto-aes</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-aes</uri>
    <description><![CDATA[This code example encrypts and decrypts user input data using the AES algorithm using a 128-bit key. The encrypted and decrypted data are displayed on a UART terminal emulator.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-crypto-aes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,protection units,pc,smpu,dual cpu,memory,console,mtb-flow" req_capabilities_v2="psoc6 multi_core [capsense, flash_2048k]">
    <name>Protection Units FreeRTOS</name>
    <id>mtb-example-psoc6-dual-cpu-protection-units-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dual-cpu-protection-units-freertos</uri>
    <description><![CDATA[This example demonstrates how to use the protection units to isolate the CM0+ CPU memory from CM4. This example uses FreeRTOS (v10.3.1)
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-protection-units-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 multi_core</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cysbsyskit_dev_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cysbsyskit_dev_01]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,led,starter,hello world,mtb-flow" req_capabilities_v2="pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113, pmg1_b1_cy7116, eval_pmg1_s1_drp, eval_pmg1_s3_dualdrp]">
    <name>Hello World</name>
    <id>mtb-example-pmg1-hello-world</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-pmg1-hello-world</uri>
    <description><![CDATA[This code example demonstrates simple UART communication by printing a "Hello World" message on a terminal and blinking an LED using Power Delivery Microcontroller Generation 1 (PMG1) devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-hello-world/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,mtb-flow" req_capabilities_v2="usbpd pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>USBPD Sink</name>
    <id>mtb-example-pmg1-usbpd-sink</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-pmg1-usbpd-sink</uri>
    <description><![CDATA[This code example demonstrates USB-C attach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1) devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-sink/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,capsense,slider,linear slider,csd,tuning,ezi2c,tuner,mtb-flow" req_capabilities_v2="pmg1 capsense_linear_slider [pmg1_cy7113]">
    <name>CAPSENSE CSD Slider Tuning</name>
    <id>mtb-example-pmg1-capsense-csd-slider-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-capsense-csd-slider-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a CAPSENSE&#8482; Sigma Delta(CSD)-based slider widget in EZ-PD&8482; PMG1-S3 device using the CAPSENSE&#8482; Tuner.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-capsense-csd-slider-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,capsense,button,csd,tuning,ezi2c,tuner,mtb-flow" req_capabilities_v2="pmg1 capsense_button [pmg1_cy7113]">
    <name>CAPSENSE CSD Button Tuning</name>
    <id>mtb-example-pmg1-capsense-csd-button-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-capsense-csd-button-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a CAPSENSE&#8482; Sigma Delta(CSD)-based button widget in EZ-PD&8482; PMG1-S3 device using the CAPSENSE&#8482; Tuner.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-capsense-csd-button-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 capsense_button</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,ocp,scp,rcp,mtb-flow" req_capabilities_v2="pmg1 [pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Using the CSA block for OCP-SCP-RCP</name>
    <id>mtb-example-pmg1-ocp-scp-rcp</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-ocp-scp-rcp</uri>
    <description><![CDATA[This example demonstrates the use of overcurrent protection (OCP), short-circuit protection (SCP), and reverse current protection (RCP) features of current sense amplifier (CSA) block on EZ-PD&8482; PMG1-S1, PMG1-S2 and PMG1-S3 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-ocp-scp-rcp/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,csdidac,mtb-flow" req_capabilities_v2="pmg1 csd [pmg1_cy7113]">
    <name>IDAC - Current output digital-to-analog converter</name>
    <id>mtb-example-pmg1-csdidac</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-csdidac</uri>
    <description><![CDATA[This code example demonstrates the use of the CSD hardware-block-based current digital-to-analog converter (CSDIDAC)of EZ-PD&8482; PMG1-S3 MCU as both a current source and a current sink.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-csdidac/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 csd</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,sw,uart,tx,mtb-flow" req_capabilities_v2="pmg1 uart [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Software UART transmit</name>
    <id>mtb-example-pmg1-sw-uart-tx</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-sw-uart-tx</uri>
    <description><![CDATA[This code example demonstrates UART transmit (TX) operation using software (SW) bit-banging technique on PMG1 devices. This application uses a serial terminal to transmit the data. Any GPIO pin can be configured as a transmit (TX) pin to send data using this code example.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-sw-uart-tx/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,mtb-flow" req_capabilities_v2="usbpd pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>USB PD sink PPS demo</name>
    <id>mtb-example-pmg1-usbpd-sink-pps</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-pps</uri>
    <description><![CDATA[This code example illustrates how to implement a programmable power supply (PPS) sink using EZ-PD&8482; PMG1 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-pps/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,led,switch,gpio-interrupt,mtb-flow" req_capabilities_v2="pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Multiple GPIO interrupts</name>
    <id>mtb-example-pmg1-multiple-gpio-interrupts</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-multiple-gpio-interrupts</uri>
    <description><![CDATA[This code example demonstrates a method to detect multiple GPIO interrupts from the same port using the pin status bits of a port on the EZ-PD&8482; PMG1 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-multiple-gpio-interrupts/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,led,under-voltage,over-voltage,mtb-flow" req_capabilities_v2="pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Using UVP and OVP blocks</name>
    <id>mtb-example-pmg1-uvov-blocks</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-uvov-blocks</uri>
    <description><![CDATA[This code example demonstrates the use of overvoltage protection(OVP) and undervoltage proection(UVP) blocks for high-voltage and low-voltage detection on the Type-C Vbus pin of EZ-PD&8482; PMG1 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-uvov-blocks/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,spi,led,dma,mtb-flow" req_capabilities_v2="pmg1 spi led [pmg1_cy7113]">
    <name>SPI Flash</name>
    <id>mtb-example-pmg1-spi-master-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-spi-master-dma</uri>
    <description><![CDATA[This code example demonstrates the configuration and usage of Serial Communication Block (SCB) as SPI master to write and read data to an EEPROM Flash (Slave).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-spi-master-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 spi led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,lcd,pwm,led,mtb-flow" req_capabilities_v2="pmg1 usbpd led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>USB PD Sink with 16x2 LCD</name>
    <id>mtb-example-pmg1-usbpd-sink-lcd-display</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-lcd-display</uri>
    <description><![CDATA[This code example demonstrates the USB Power Delivery (PD) sink functionality, displays the PD contract information on LCD and PWM to control the brightness of the LCD.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-lcd-display/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usbpd led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,adc,sar,12-bit,analog,pass,opamp,ctbm,ctb,led,mtb-flow" req_capabilities_v2="pmg1 opamp adc uart led [pmg1_cy7113]">
    <name>12-bit SAR ADC with opamp as amplifier</name>
    <id>mtb-example-pmg1-opamp-amplifier-saradc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-opamp-amplifier-saradc</uri>
    <description><![CDATA[This code example demonstrates the use of opamp as an amplifier along with 12-bit SAR ADC to measure the low voltage signals on EZ-PD&8482; PMG1-S3 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-opamp-amplifier-saradc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 opamp adc uart led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,adc,sar,12-bit,analog,pass,opamp,ctbm,ctb,led,mtb-flow" req_capabilities_v2="pmg1 opamp adc uart led [pmg1_cy7113]">
    <name>12-bit SAR ADC with opamp as buffer</name>
    <id>mtb-example-pmg1-opamp-buffer-saradc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-opamp-buffer-saradc</uri>
    <description><![CDATA[This code example demonstrates the use of opamp as a buffer along with 12-bit SAR ADC to provide impedance matching for high-impedance signals on EZ-PD&8482; PMG1-S3 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-opamp-buffer-saradc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 opamp adc uart led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,bldc,motor,control,sensorless,mtb-flow" req_capabilities_v2="pmg1 usbpd adc opamp led [pmg1_cy7113]">
    <name>USBPD sensorless BLDC motor control</name>
    <id>mtb-example-pmg1-usbpd-sensorless-bldc-motor</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-sensorless-bldc-motor</uri>
    <description><![CDATA[This code example demonstrates EZ-PD&#8482; PMG1-S3 device-based solution for controlling sensorless Brushless DC (BLDC) motor of up to 140 watts, directly through USB PD power derived from a Type-C cable in 28-V Extended Power Range (EPR) mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-sensorless-bldc-motor/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usbpd adc opamp led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,mtb-flow" req_capabilities_v2="usbpd pmg1 led [pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>USBPD DRP</name>
    <id>mtb-example-pmg1-usbpd-drp</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-drp</uri>
    <description><![CDATA[This code example demonstrates USB-C attach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1) devices in DRP role.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-drp/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2 pmg1_cy7113">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2 pmg1_cy7113">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,mtb-flow" req_capabilities_v2="usbpd pmg1 led [pmg1_cy7113, pmg1s3dual]">
    <name>USBPD DRP EPR</name>
    <id>mtb-example-pmg1-usbpd-drp-epr</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-drp-epr</uri>
    <description><![CDATA[This code example demonstrates USB-C attach/detach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1) devices in DRP role with Extended Power Range(EPR) operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-drp-epr/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,mtb-flow" req_capabilities_v2="usbpd pmg1 led [pmg1s3dual]">
    <name>PMG1S3 TBT Griffin Creek Dock Solution</name>
    <id>mtb-example-pmg1s3-griffin-creek-dock</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1s3-griffin-creek-dock</uri>
    <description><![CDATA[This is a reference TBT Griffin Creek Dock solution example using PMG1S3.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1s3-griffin-creek-dock/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,mtb-flow" req_capabilities_v2="usbpd pmg1 led [pmg1s3dual]">
    <name>PMG1S3 USB-C Dock Solution</name>
    <id>mtb-example-pmg1s3-usbc-dock</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1s3-usbc-dock</uri>
    <description><![CDATA[This is a reference USB-C Dock solution example using PMG1S3.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1s3-usbc-dock/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,capsense,mtb-flow" req_capabilities_v2="usbpd pmg1 capsense led [pmg1_cy7113]">
    <name>USBPD Sink CAPSENSE</name>
    <id>mtb-example-pmg1-usbpd-sink-capsense</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-capsense</uri>
    <description><![CDATA[This code example demonstrates CAPSENSE&#8482; functionality using a 5-segment CAPSENSE&#8482; slider and two CAPSENSE&#8482; buttons along with USB-C attach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1) devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-capsense/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 capsense led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbpd,mtb-flow" req_capabilities_v2="usbpd pmg1 led [pmg1_cy7113]">
    <name>USBPD Sink using FreeRTOS</name>
    <id>mtb-example-pmg1-usbpd-sink-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-freertos</uri>
    <description><![CDATA[This code example demonstrates USB-C attach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1) devices. This code example uses FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usb,mtb-flow,hid,mouse" req_capabilities_v2="pmg1 usb_device [pmg1_cy7112, pmg1_cy7113]">
    <name>USB HID Mouse</name>
    <id>mtb-example-pmg1-usb-hid-mouse</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usb-hid-mouse</uri>
    <description><![CDATA[This code example demonstrates how to configure the USB block in a PMG1 MCU as a Human Interface Device (HID). The device enumerates as a 3-button mouse.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usb-hid-mouse/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,mtb-flow" req_capabilities_v2="pmg1">
    <name>Basic Device Firmware Upgrade</name>
    <id>mtb-example-pmg1-dfu-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-dfu-basic</uri>
    <description><![CDATA[This code example demonstrates Device Firmware Upgrade (DFU) with PMG1 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-dfu-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,mtb-flow" req_capabilities_v2="pmg1 [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>DFU Bootloader</name>
    <id>mtb-example-pmg1-dfu-bootloader</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-dfu-bootloader</uri>
    <description><![CDATA[This code example demonstrates Device Firmware Upgrade (DFU) with PMG1 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-dfu-bootloader/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,mtb-flow" req_capabilities_v2="pmg1 [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>DFU Blinky LED</name>
    <id>mtb-example-pmg1-dfu-blinky-led</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-dfu-blinky-led</uri>
    <description><![CDATA[This code example demonstrates the bootloadable application in basic Device Firmware Upgrade (DFU), also known as bootloading with PMG1 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-dfu-blinky-led/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,starter,template,empty,blank,mtb-flow" req_capabilities_v2="pmg1 [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113, pmg1s3dual, pmg1_b1_cy7116, eval_pmg1_s1_drp, eval_pmg1_s3_dualdrp]">
    <name>Empty App</name>
    <id>mtb-example-pmg1-empty-app</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-empty-app</uri>
    <description><![CDATA[This empty application provides a template for creating applications using Power Delivery Microcontroller Generation 1 (PMG1) devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,led,switch,gpio-interrupt,mtb-flow" req_capabilities_v2="pmg1 led switch[pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113, pmg1_b1_cy7116]">
    <name>LED Switch Interface</name>
    <id>mtb-example-pmg1-led-sw-interface</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-led-sw-interface</uri>
    <description><![CDATA[This code example demonstrates simple Switch and LED interface on Power Delivery Microcontroller Generation 1 (PMG1) devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-led-sw-interface">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,led,switch,gpio-interrupt,i2c,pwm,dps310,mtb-flow" req_capabilities_v2="pmg1 usbpd i2c uart switch led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>USBPD Sink DPS310 I2C Sensor</name>
    <id>mtb-example-pmg1-usbpd-sink-dps310-i2c-sensor</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-dps310-i2c-sensor</uri>
    <description><![CDATA[This code example demonstrates how the USB Type-C and Power delivery contract negotiation is achieved using PMG1 devices. It also shows how to integrate PMG1 with DPS310 external temperature and pressure sensor through an I2C interface.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbpd-sink-dps310-i2c-sensor/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usbpd i2c uart switch led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,led,starter,critical-section,mtb-flow" req_capabilities_v2="pmg1 switch led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Critical Section</name>
    <id>mtb-example-pmg1-critical-section</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-critical-section</uri>
    <description><![CDATA[This code example demonstrates the usage of critical section in the EZ-PD&#8482; PMG1 MCU device. Upon entering the critical section, the CPU will disable all interrupts and will not service any interrupt requests received. Interrupt requests are queued until the CPU exits the critical section; interrupts are enabled and serviced only after exit from the critical section.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-critical-section/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 switch led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,uart,starter,dma,mtb-flow" req_capabilities_v2="pmg1 uart [pmg1_cy7113]">
    <name>UART Transmit Receive DMA</name>
    <id>mtb-example-pmg1-uart-transmit-receive-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-uart-transmit-receive-dma</uri>
    <description><![CDATA[This code example demonstrates the UART transmit and receive operation in PMG1 devices using DMA. The application uses a serial terminal to read data and echoes what is received. The UART is configured to do both transmit and receive operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-uart-transmit-receive-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,counter,LED,mtb-flow" req_capabilities_v2="pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Counter LED</name>
    <id>mtb-example-pmg1-counter-led</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-counter-led</uri>
    <description><![CDATA[This code example demonstrates how to toggle an LED whenever the timer/counter in a PMG1 device is triggered every 1 second.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-counter-led/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,pwm,led,mtb-flow" req_capabilities_v2="pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113, pmg1_b1_cy7116]">
    <name>PWM LED</name>
    <id>mtb-example-pmg1-pwm-led</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-pwm-led</uri>
    <description><![CDATA[This code example shows the usage of the PWM block in the PMG1 MCU and how it can be used to toggle an LED.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-pwm-led/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,powermodes,sleep,deepsleep" req_capabilities_v2="pmg1 led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Power Modes</name>
    <id>mtb-example-pmg1-power-modes</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-power-modes</uri>
    <description><![CDATA[This code example shows how to enter system Sleep and Deep Sleep modes. After entering Deep Sleep or Sleep mode, the example also shows how to wake up from these low-power modes and return to the Active mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-power-modes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,eeprom,i2c-master" req_capabilities_v2="pmg1 i2c led switch [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>I2C EEPROM</name>
    <id>mtb-example-pmg1-i2c-eeprom</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-i2c-eeprom</uri>
    <description><![CDATA[This code example demonstrates the configuration and usage of serial communication block (SCB) as I2C master to write and read data to an I2C (slave) EEPROM (24LC128).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-i2c-eeprom/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 i2c led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1b1, battery, usbpd, mtb-flow" req_capabilities_v2="pmg1_b1_cy7116 usbpd">
    <name>USBPD Li-ion Battery Charger</name>
    <id>mtb-example-pmg1b1-usbpd-battery-charger</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1b1-usbpd-battery-charger</uri>
    <description><![CDATA[This code example demonstrates Li-ion battery charger functionality along with USB-C attach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1-B1) devices in DRP role.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1b1-usbpd-battery-charger/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1_b1_cy7116 usbpd</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1b1, usbpd, mtb-flow" req_capabilities_v2="pmg1_b1_cy7116 usbpd">
    <name>USBPD Sink</name>
    <id>mtb-example-pmg1b1-usbpd-sink</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1b1-usbpd-sink</uri>
    <description><![CDATA[This code example demonstrates USB-C attach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1-B1) devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1b1-usbpd-sink/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1_b1_cy7116 usbpd</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1b1, battery, usbpd, mtb-flow" req_capabilities_v2="pmg1_b1_cy7116 usbpd">
    <name>USBPD DRP</name>
    <id>mtb-example-pmg1b1-usbpd-drp</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1b1-usbpd-drp</uri>
    <description><![CDATA[This code example demonstrates USB-C attach detection and USB Power Delivery contract negotiation using Power Delivery Microcontroller Generation 1 (PMG1-B1) devices in DRP role.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1b1-usbpd-drp/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1_b1_cy7116 usbpd</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,dfu,bootloader,mtb-flow" req_capabilities_v2="psoc6 led switch std_crypto">
    <name>Basic Device Firmware Upgrade</name>
    <id>mtb-example-psoc6-dfu-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dfu-basic</uri>
    <description><![CDATA[This example demonstrates the basic DFU with PSoC&#8482; 6 MCU. This includes downloading an application from a host and installing it in the device flash. and then transferring control to that application.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dfu-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led switch std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062_s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062_s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062_s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062_s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062_s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>1.4.0 release</num>
        <commit>release-v1.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,emulated,eeprom,flash,mtb-flow" req_capabilities_v2="psoc6 led">
    <name>Emulated EEPROM</name>
    <id>mtb-example-psoc6-emulated-eeprom</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emulated-eeprom</uri>
    <description><![CDATA[This code example demonstrates emulation of EEPROM behavior in flash memory of PSoC&#8482; 6 MCU using emeeprom middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-emulated-eeprom/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0S2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_062s2_43439,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0S2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_062s2_43439,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0S2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0S2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_064b0s3]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0S2_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8cproto_064b0s3]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0S2_4343w,cy8ckit_062s4]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0S2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,xmc7000,mcuboot,bootloader,mtb-flow" req_capabilities_v2="std_crypto led qspi nor_flash [psoc6, xmc7000]">
    <name>MCUboot-Based Basic Bootloader</name>
    <id>mtb-example-mcuboot-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-mcuboot-basic</uri>
    <description><![CDATA[This example demonstrates using MCUboot with PSoC&#8482; 6 MCUs and XMC&#8482; 7000 MCUs an open-source secure bootloader for 32-bit MCUs. The bootloader app runs on CM0+.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-mcuboot-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 7.X release</num>
        <commit>latest-v7.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>7.1.0 release</num>
        <commit>release-v7.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>7.0.0 release</num>
        <commit>release-v7.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>Latest 6.X release</num>
        <commit>latest-v6.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>6.2.0 release</num>
        <commit>release-v6.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>6.1.0 release</num>
        <commit>release-v6.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>6.0.0 release</num>
        <commit>release-v6.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_063_ble,cy8cproto_062s3_4343w]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_063_ble,cy8cproto_062s3_4343w]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,ml,nn,profiler" req_capabilities_v2="psoc6 uart [flash_2048k, flash_1856k, flash_1024k, flash_832k, flash_512k]">
    <name>Machine Learning Neural Network Profiler</name>
    <id>mtb-example-ml-profiler</id>
    <category>Machine Learning</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-ml-profiler</uri>
    <description><![CDATA[This code example demonstrates how to run through the machine learning (ML) development flow with PSoC&#8482; 6 MCU, where the end user has a pre-trained Neural Network (NN) model, which can be profiled and validated at the PC and target device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ml-profiler/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.1 release</num>
        <commit>release-v3.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.3" tools_max_version="2.2.3" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,littlefs,filesystem,file,system,nor-flash,sd-card" req_capabilities_v2="psoc6 qspi nor_flash switch">
    <name>Littlefs Filesystem</name>
    <id>mtb-example-psoc6-filesystem-littlefs-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-filesystem-littlefs-freertos</uri>
    <description><![CDATA[This example uses the Arm&#174; Cortex&#174;-M4 (CM4) CPU of PSoC&#8482; 6 MCU to execute a littlefs filesystem task. This example uses the mtb-littlefs middleware library that implements the littlefs-compatible block device drivers for different storage devices such as SD card and NOR flash.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-filesystem-littlefs-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 qspi nor_flash switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,segger,emfile,FAT,filesystem,file,system,nor-flash,sd-card">
    <name>emFile Filesystem</name>
    <id>mtb-example-psoc6-filesystem-emfile-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-filesystem-emfile-freertos</uri>
    <description><![CDATA[This example uses the Arm&#174; Cortex&#174;-M4 (CM4) CPU of PSoC&#8482; 6 MCU to execute an emFile filesystem task. This example uses the emFile middleware library that includes emFile in the form of pre-built libraries along with the hardware layer and OS layer implementation for PSoC&#8482; 6 MCUs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-filesystem-emfile-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 qspi nor_flash switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc64,led,freertos,mtb-flow" req_capabilities_v2="secure_boot">
    <name>Secure Blinky LED FreeRTOS</name>
    <id>mtb-example-psoc6-secure-blinkyled-freertos</id>
    <category>Getting Started</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-secure-blinkyled-freertos</uri>
    <description><![CDATA[This code example demonstrates the implementation of two tasks with FreeRTOS. One task blinks an LED and the other prints an incrementing counter value out to the UART.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-secure-blinkyled-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>secure_boot</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w,cy8cproto_064s1_sb,cy8cproto_064b0s3]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w,cy8cproto_064s1_sb,cy8cproto_064b0s3]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w,cy8cproto_064s1_sb,cy8cproto_064b0s3]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w,cy8cproto_064s1_sb,cy8cproto_064b0s3]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_064b0s2_4343w,cy8cproto_064s1_sb,cy8cproto_064b0s3]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_064b0s2_4343w,cy8cproto_064s1_sb,cy8cproto_064b0s3]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msc,capsense,csd,touchpad,tuning,mtb-flow" req_capabilities_v2="psoc4 led msc_touchpad">
    <name>MSC CAPSENSE CSD Touchpad Tuning</name>
    <id>mtb-example-psoc4-msc-capsense-csd-touchpad-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-msc-capsense-csd-touchpad-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a self capacitance-based touchpad widget in PSoC&#8482; 4 devices using the Multi Sense Converter (MSC) CSD-RM sensing technique and CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msc-capsense-csd-touchpad-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led msc_touchpad</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msc,capsense,csx,touchpad,tuning,mtb-flow" req_capabilities_v2="psoc4 led msc_touchpad">
    <name>MSC Multi-Touch CSX Touchpad Tuning</name>
    <id>mtb-example-psoc4-msc-capsense-csx-touchpad-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-msc-capsense-csx-touchpad-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a mutual capacitance-based touchpad widget in PSoC&#8482; 4 devices using the Multi Sense Converter (MSC) CSX-RM sensing technique and CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msc-capsense-csx-touchpad-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led msc_touchpad</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,machine-learning,ml,bmx160,gesture,motion sensor,mtb-flow" req_capabilities_v2="psoc6 spi arduino cyw43xxx">
    <name>Machine Learning Gesture Classification</name>
    <id>mtb-example-ml-gesture-classification</id>
    <category>Machine Learning</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-ml-gesture-classification</uri>
    <description><![CDATA[This code example demonstrates how to perform gesture classification based on motion sensor (accelerometer and gyroscope) data. The code example comes with a pre-trained model that classifies the following gestures: circle, square, and side-to-side.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ml-gesture-classification/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 spi arduino cyw43xxx</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk,mesh,ble,sensors,sensor hub,als,ambient,light,temperature,thermistor,i2c,adc,mtb-flow" req_capabilities_v2="[CYW920835M2EVB_01]">
    <name>Mesh SensorHub</name>
    <id>mtb-example-btsdk-mesh-sensorhub</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-mesh-sensorhub</uri>
    <description><![CDATA[This example demonstrates the use of a Bluetooth&#174; Low Energy Mesh sensor model with Ambient Light and Temperature sensor interfaced with AIROC&#8482; CYW20835 Bluetooth&#174; LE system-on-chip using ModusToolbox&#8482; software.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-mesh-sensorhub/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>mesh fw2 led2x ncu15wf104 button MAX44009EDT</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.3.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.3.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,emwin,display,tft,freertos,mtb-flow,appwizard" req_capabilities_v2="psoc6 arduino switch">
    <name>emWin TFT FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-tft-freertos</id>
    <category>Graphics</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-tft-freertos</uri>
    <description><![CDATA[This example demonstrates displaying 2D graphics on a TFT display using the emWin graphics library and the AppWizard GUI design tool in FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-emwin-tft-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 arduino switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.2.1 release</num>
        <commit>release-v3.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,lin" req_capabilities_v2="psoc4 rgb_led">
    <name>LIN Slave</name>
    <id>mtb-example-psoc4-lin-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-lin-slave</uri>
    <description><![CDATA[This code example shows how to implement a basic LIN 2.2 slave using the LIN Middleware in PSoC&#8482; 4. PSoC&#8482; 4 responds to an external LIN Master's commands to either turn on the corresponding color LED on PSoC&#8482; development kit or report the current LED color status.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-lin-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 rgb_led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,qspi-flash,flash,qspi,spi-qspi-flash,led,mtb-flow" req_capabilities_v2="psoc6 led qspi nor_flash">
    <name>QSPI XIP</name>
    <id>mtb-example-psoc6-qspi-xip</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-xip</uri>
    <description><![CDATA[This example demonstrates how to use the queued serial peripheral interface (QSPI) block of the PSoC&#8482; 6 MCU in eXecute-in-Place (XiP) mode with an external flash memory device using Eclipse IDE for ModusToolbox&#8482; software.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-qspi-xip/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led qspi nor_flash</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062s4,cy8cproto_062s2_43439,cy8cproto_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062s4,cy8cproto_062s2_43439,cy8cproto_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062s4]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062s4]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062s4]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,qspi,spi,nor,flash,sfdp,smif,serial-flash,mtb-flow" req_capabilities_v2="psoc6 std_crypto led qspi nor_flash">
    <name>QSPI Flash Read Write Using SFDP</name>
    <id>mtb-example-psoc6-qspi-readwrite-sfdp</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-readwrite-sfdp</uri>
    <description><![CDATA[This example demonstrates interfacing with an external NOR flash memory in Quad-SPI mode using the Serial Memory Interface (SMIF) block in PSoC&#8482; 6 MCU. This example uses the Serial Flash Discoverable Parameters (SFDP) standard to auto-discover the flash parameters and the commands for read, program, and erase operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-qspi-readwrite-sfdp/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_mur_4373em2,cy8cproto_062s2_43439]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_mur_4373em2,cy8cproto_062s2_43439]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,qspi,spi,nor,flash,smif,serial-flash,mtb-flow" req_capabilities_v2="std_crypto led qspi nor_flash [psoc6,xmc7000,t2gbe,cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>Serial Flash Read Write</name>
    <id>mtb-example-serial-flash-readwrite</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-serial-flash-readwrite</uri>
    <description><![CDATA[This code example demonstrates interfacing an external NOR flash memory using serial flash library.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-serial-flash-readwrite/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.1 release</num>
        <commit>release-v3.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,psoc6,canfd,mtb-flow" req_capabilities_v2="led can">
    <name>CAN FD</name>
    <id>mtb-example-psoc4-canfd</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-canfd</uri>
    <description><![CDATA[This example demonstrates how to use CAN FD in Infineon's PSoC&#8482; 4 MCU devices. In this example, the CANFD Node-1 sends a CAN FD frame to CANFD-Node-2 on pressing the user button and vice versa. Both the CAN FD nodes log the received data over UART serial terminal. Each time a CAN FD Frame is received, the user LED toggles.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-canfd/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led can</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ckit_041s_max]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msc,capsense,csd,slider,tuning,mtb-flow" req_capabilities_v2="psoc4 led msc_slider">
    <name>MSC CAPSENSE CSD Slider Tuning</name>
    <id>mtb-example-psoc4-msc-capsense-csd-slider-tuning</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msc-capsense-csd-slider-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a self capacitance-based slider widget in PSoC&#8482; 4 devices using the Multi Sense Converter (MSC) CSD-RM sensing technique and CAPSENSE&#8482; Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msc-capsense-csd-slider-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led msc_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="measurement,ble,client,server,throughput,btsdk,mtb-flow" req_capabilities_v2="fw2 btsdk led2x button">
    <name>LE Throughput</name>
    <id>mtb-example-btsdk-ble-throughput</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-ble-throughput</uri>
    <description><![CDATA[This code example demonstrates the maximum Bluetooth&#174; LE throughput (using GATT layer notifications and write command) that can be obtained with Infineon AIROC&#8482; CYW20xxx Bluetooth&#174; devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-ble-throughput/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk led2x button</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920819M2EVB_01,CYW920820EVB_02,CYW920820M2EVB_01,CYW920719B2Q40EVB_01]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920819M2EVB_01,CYW920820EVB_02,CYW920820M2EVB_01,CYW920719B2Q40EVB_01]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920819M2EVB_01,CYW920820EVB_02,CYW920820M2EVB_01,CYW920719B2Q40EVB_01]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920820EVB_02,CYW920719B2Q40EVB_01]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="optiga,security,crypto,ecc,rsa,ecdsa,ecdh,mtb-flow" req_capabilities_v2="optiga_trust_m std_crypto uart">
    <name>OPTIGA Cryptography</name>
    <id>mtb-example-optiga-crypto</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-optiga-crypto</uri>
    <description><![CDATA[This example uses an Infineon OPTIGA&#8482; Trust Security Solution on a PSoC&#8482; 6 MCU to execute example code to perform available crypto operations on the Secure Element.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-optiga-crypto/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>optiga_trust_m std_crypto uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="optiga,power-management,hibernation,mtb-flow" req_capabilities_v2="optiga_trust_m uart arduino">
    <name>OPTIGA Power management</name>
    <id>mtb-example-optiga-power-management</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-optiga-power-management</uri>
    <description><![CDATA[This example uses an Infineon OPTIGA&#8482; Trust Security Solution on a PSoC&#8482; 6 MCU to execute example code to control the hibernation feature on the security solution.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-optiga-power-management/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>optiga_trust_m uart arduino</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="optiga,security,crypto,ecc,mbedtls,ecdsa,ecdh,mqtt,aws,mtb-flow" req_capabilities_v2="optiga_trust_m wifi switch led uart">
    <name>OPTIGA MQTT Client</name>
    <id>mtb-example-optiga-mqtt-client</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-optiga-mqtt-client</uri>
    <description><![CDATA[This example uses an Infineon OPTIGA&#8482; Trust Security Solution on a PSoC&#8482; 6 MCU to execute example code to perform an MQTT connection to the AWS IoT Cloud.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-optiga-mqtt-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>optiga_trust_m wifi switch led uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="optiga,security,management,python,crypto,ecc,rsa,ecdsa,ecdh,mtb-flow" req_capabilities_v2="optiga_trust_m uart">
    <name>OPTIGA Trust M Data and certificates management</name>
    <id>mtb-example-optiga-data-management</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-optiga-data-management</uri>
    <description><![CDATA[This example uses an Infineon OPTIGA&#8482; Trust Security Solution on a PSoC&#8482; 6 MCU to execute example code to manage internal aata or key Objects including its Update.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-optiga-data-management/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>optiga_trust_m uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk keyboard scanner cyw208xx row column" req_capabilities_v2="fw2 btsdk CYW208XX_62fbga [CYW920819EVB_02, CYW920820EVB_02, CYW920820M2EVB_01]">
    <name>HAL Keyboard Scanner</name>
    <id>mtb-example-btsdk-cyw208xx-keyboard-scanner</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw208xx-keyboard-scanner</uri>
    <description><![CDATA[This code example demonstrates the dedicated keyscan hardware, which processes key press events from proprietary GPIOs (LHL GPIOs) without interrupting the CPU core. This code example also demonstrates low power entry when the system is idle (no activity or keypress) and wake up when there is key press.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-cyw208xx-keyboard-scanner/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk CYW208XX_62fbga</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,wifi,ota,mqtt,mcuboot,bootloader" req_capabilities_v2="psoc6 wifi cyw43xxx led std_crypto qspi nor_flash flash_2048k">
    <name>Wi-Fi MCUboot-Based Bootloader with Rollback</name>
    <id>mtb-example-wifi-mcuboot-rollback</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-mcuboot-rollback</uri>
    <description><![CDATA[This code example implements a bootloader based on MCUboot to demonstrate &#8216;Rollback&#8217; to a known good image ('factory_app_cm4') in case of unrecoverable error conditions in the current application. The bootloader can load the factory app from a known location in the external memory by directly copying it into the primary slot in the internal flash, based on user inputs during boot. The factory app can then perform the OTA to download an image over Wi-Fi and place it to the secondary slot of MCUboot.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-mcuboot-rollback/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led std_crypto qspi nor_flash flash_2048k</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>4.0.1 release</num>
        <commit>release-v4.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8ckit_062s2_43012,cy8cproto_062_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,emulated,eeprom,flash,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Emulated EEPROM</name>
    <id>mtb-example-psoc4-emulated-eeprom</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-emulated-eeprom</uri>
    <description><![CDATA[This example demonstrates how to use the Em_EEPROM middleware in PSoC&#8482; 4 MCU devices. In this example, a counter is read from the Emulated EEPROM (Em_EEPROM), incremented, written back to the Em_EEPROM and printed on a serial terminal. This occurs on every device reset or power cycle. As a result, an incrementing value is printed on every reset.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-emulated-eeprom/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,sar,adc,die temperature,opamp" req_capabilities_v2="psoc4 adc opamp">
    <name>SAR ADC BASIC</name>
    <id>mtb-example-psoc4-sar-adc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-sar-adc</uri>
    <description><![CDATA[This example demonstrates how to use the SAR ADC in PSoC&#8482; 4 MCU devices. In this example, the ADC is configured to measure inputs from different sources and display results through a uart terminal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-sar-adc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 adc opamp</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_041_41xx,cy8ckit_045s]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,btstack,freertos,cts,server,bluetooth" req_capabilities_v2="bt led switch [psoc6, cyw920829m2evk_02, cyw89829] [flash_2048k, flash_1856k, flash_1024k, flash_512k, flash_0k]">
    <name>Bluetooth LE CTS Server</name>
    <id>mtb-example-btstack-freertos-cts-server</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cts-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple AIROC&#8482; Bluetooth&#174; LE GAP central - GATT server with Current time service (CTS) using PSoC&#8482; 6 MCU, AIROC&#8482; CYW20829, and ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cts-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.7.0 release</num>
        <commit>release-v4.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cyw920829m2evk_02,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cyw920829m2evk_02,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cyw920829m2evk_02]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,btstack,freertos,cts,client,bluetooth" req_capabilities_v2="bt led switch [psoc6, cyw920829m2evk_02, cyw89829] [flash_2048k, flash_1856k, flash_1024k, flash_512k, flash_0k]">
    <name>Bluetooth LE CTS Client</name>
    <id>mtb-example-btstack-freertos-cts-client</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cts-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple AIROC&#8482; Bluetooth&#174; LE GAP peripheral - GATT client with Current time service (CTS) using PSoC&#8482; 6 MCU, AIROC&#8482; CYW20829, and ModusToolbox&#8482; Software Environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cts-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>5.1.0 release</num>
        <commit>release-v5.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>4.6.0 release</num>
        <commit>release-v4.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>4.5.0 release</num>
        <commit>release-v4.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cyw920829m2evk_02,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.4.1 release</num>
        <commit>release-v4.4.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cyw920829m2evk_02,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>4.4.0 release</num>
        <commit>release-v4.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cyw920829m2evk_02]">
        <num>4.3.0 release</num>
        <commit>release-v4.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>4.2.0 release</num>
        <commit>release-v4.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.1" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_4373m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,radar,presence,csk">
    <name>Radar Presence Application</name>
    <id>mtb-example-sensors-radar-presence</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-sensors-radar-presence</uri>
    <description><![CDATA[This application demonstrates the use of the radar presence application on the feather board.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-sensors-radar-presence/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cysbsyskit_dev_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,radar,presence,csk" req_capabilities_v2="psoc6 hal spi multi_core">
    <name>Human Presence Detection</name>
    <id>mtb-example-psoc6-radar-presence</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-radar-presence</uri>
    <description><![CDATA[This application demonstrates the use of the radar presence detection.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-radar-presence/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 hal spi multi_core</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd,cy8ckit_062s2_ai]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd,cy8ckit_062s2_ai]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd]">
        <num>0.5.1 release</num>
        <commit>release-v0.5.1</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,radar,presence,csk" req_capabilities_v2="psoc6 hal spi feather multi_core">
    <name>Radar Gestures Detection</name>
    <id>mtb-example-psoc6-radar-gestures</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-radar-gestures</uri>
    <description><![CDATA[This application demonstrates the use of the radar for gestures detection.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-radar-gestures/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 hal spi feather multi_core</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cysbsyskit_dev_01,kit_bgt60tr13c_embedd]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,radar,entrance counter,csk">
    <name>Radar Entrance Counter Application</name>
    <id>mtb-example-sensors-radar-entrancecounter</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-sensors-radar-entrancecounter</uri>
    <description><![CDATA[This application demonstrates the use of the radar entrance counter application on the feather board.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-sensors-radar-entrancecounter/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cysbsyskit_dev_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,co2,pasco2,dps,dps3xx,csk">
    <name>PAS CO2 Application</name>
    <id>mtb-example-sensors-pasco2</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-sensors-pasco2</uri>
    <description><![CDATA[This application demonstrates the use of the pas co2 pressure sensor on the feather board.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-sensors-pasco2/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cysbsyskit_dev_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,anycloud,radar,presence,counter,entrance counter,csk">
    <name>Radar Sensor MQTT Client</name>
    <id>mtb-example-sensors-radar-mqtt-client</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-sensors-radar-mqtt-client</uri>
    <description><![CDATA[This application demonstrates how to implement an MQTT client for publishing presence or entrance counter events to the cloud.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-sensors-radar-mqtt-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cysbsyskit_dev_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,radar,csk">
    <name>UDP Server Radar</name>
    <id>mtb-example-wifi-radar-udp-server</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-radar-udp-server</uri>
    <description><![CDATA[This application demonstrates how to implement a UDP server to download radar data.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-radar-udp-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cysbsyskit_dev_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>0.5.1 release</num>
        <commit>release-v0.5.1</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,radar,presence,csk">
    <name>MQTT Human Presence</name>
    <id>mtb-example-wifi-mqtt-radar-presence</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-mqtt-radar-presence</uri>
    <description><![CDATA[This application demonstrates how to implement an MQTT client for publishing presence events.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-mqtt-radar-presence/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cysbsyskit_dev_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>0.5.1 release</num>
        <commit>release-v0.5.1</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,sensor,xensiv,anycloud,co2,pasco2,csk">
    <name>PAS CO2 Sensor MQTT Client</name>
    <id>mtb-example-sensors-pasco2-anycloud-mqtt-client</id>
    <category>Sensing</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-sensors-pasco2-anycloud-mqtt-client</uri>
    <description><![CDATA[This application demonstrates how to implement an MQTT client for publishing the current PPM level to the cloud.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-sensors-pasco2-anycloud-mqtt-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cysbsyskit_dev_01</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,uart,mtb-flow">
    <name>UART Transmit and Receive</name>
    <id>mtb-example-cyw43907-uart-tx-rx</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-uart-tx-rx</uri>
    <description><![CDATA[This code example demonstrates the UART (HAL) transmit and receive operation in CYW43907. The application uses a serial terminal to read data and to echo back the received data. The UART resource is configured to do both transmit and receive operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-uart-tx-rx/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907, hello world, led, timer, mtb-flow">
    <name>Hello World</name>
    <id>mtb-example-cyw43907-hello-world</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-hello-world</uri>
    <description><![CDATA[This code example demonstrates the simple UART communication by printing a "Hello World" message on a terminal and blinks an LED using a Timer resource using CYW43907.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-hello-world/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907, watchdog timer, mtb-flow">
    <name>Watchdog Timer</name>
    <id>mtb-example-cyw43907-wdt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-wdt</uri>
    <description><![CDATA[This code example explains how to set up a Watchdog Timer using the WDT HAL resource. The WDT resets the device if it is not serviced or "kicked" within the configured timeout interval. This helps in recovering the program from an unintended lock up.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-wdt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907, gpio, mtb-flow">
    <name>GPIO</name>
    <id>mtb-example-cyw43907-gpio</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-gpio</uri>
    <description><![CDATA[This code example demonstrates the use of a GPIO configured as an input pin to generate interrupts on CYW43907. The GPIO signal interrupts the CPU and executes a user-defined Interrupt Service Routine (ISR).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-gpio/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907, pwm, mtb-flow">
    <name>PWM Square Wave</name>
    <id>mtb-example-cyw43907-pwm</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-pwm</uri>
    <description><![CDATA[This code example generates a square wave using the PWM driver. An LED connected to the PWM output pin blinks at 1000 Hz with Variable Duty Cycle.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-pwm/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,tcp,client,wifi,mtb-flow">
    <name>TCP Client</name>
    <id>mtb-example-cyw43907-tcp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-tcp-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of a TCP client.
    The example establishes a connection with a remote TCP server and based on the command received from the TCP server,
    turns the user LED ON or OFF.
    Additionally, this code example can be configured to bring up the Wi-Fi device either in STA interface or in Soft AP interface mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-tcp-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,tcp,server,wifi,mtb-flow">
    <name>TCP Server</name>
    <id>mtb-example-cyw43907-tcp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-tcp-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a TCP server.
    In this example, the TCP server establishes a connection with a TCP client. Once the connection completes successfully, the  server allows the user to send LED ON/OFF command to the TCP client and the client responds by sending an acknowledgement message to the server. Additionally, this code example can be configured to bring up the Wi-Fi device either in STA interface or in Soft AP interface mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-tcp-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,secure,tcp,client,wifi,mtb-flow">
    <name>Secure TCP Client</name>
    <id>mtb-example-cyw43907-secure-tcp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-secure-tcp-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of a secure TCP client.
    In this example, a TCP client establishes a secure connection with a TCP server through a SSL handshake.
    Once the SSL handshake completes successfully, the TCP client turns ON or OFF the user LED based on the command received    from the TCP server. The Wi-Fi device can be brought up in either STA or Soft AP interface mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-secure-tcp-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,secure,tcp,server,wifi,mtb-flow">
    <name>Secure TCP Server</name>
    <id>mtb-example-cyw43907-secure-tcp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-secure-tcp-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a secure TCP server.
    In this example, the TCP server establishes a secure connection with a TCP client through SSL handshake.
    Once the SSL handshake completes successfully, the server allows the user to send LED ON/OFF command to the TCP client;
    the client responds by sending an acknowledgement message to the server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-secure-tcp-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,scan,wifi,mtb-flow">
    <name>Wi-Fi Scan</name>
    <id>mtb-example-cyw43907-wifi-scan</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-wifi-scan</uri>
    <description><![CDATA[This example demonstrates how to configure different scan filters provided in the Wi-Fi connection manager (WCM) middleware and
    scan for the available Wi-Fi networks. The example initializes the Wi-Fi device, starts a Wi-Fi scan without any filter, and prints the results on the serial terminal.
    The example starts a scan every three seconds after the previous scan completes.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-wifi-scan/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,i2c,mtb-flow">
    <name>I2C Master</name>
    <id>mtb-example-cyw43907-i2c</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-i2c</uri>
    <description><![CDATA[This code example demonstrates the I2C (HAL) operation in CYW43907 MCU. The application uses I2C to read data from CY8CKIT-032 PSoC&#8482; Analog Front End (AFE) Arduino Shield and
    display the result in the UART serial Terminal every time the user presses the button.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-i2c/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>i2c cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,mqtt,client,wifi,mtb-flow">
    <name>MQTT Client</name>
    <id>mtb-example-cyw43907-mqtt-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-mqtt-client</uri>
    <description><![CDATA[This code example demonstrates implementing an MQTT client using the MQTT client library. The library uses the AWS IoT device SDK MQTT client library that includes an MQTT 3.1.1 client.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-mqtt-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,https,wifi,server,secure,mtb-flow">
    <name>Secure HTTP Server</name>
    <id>mtb-example-cyw43907-secure-http-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-secure-http-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of an HTTPS server with AIROC&#8482; CYW43907 MCU.It employs the HTTPS server middleware library,
    which takes care of all the underlying socket connections with the HTTPS client.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-secure-http-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,udp,client,wifi,mtb-flow">
    <name>UDP Client</name>
    <id>mtb-example-cyw43907-udp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-udp-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of a UDP client with CYW43907 connectivity device.
    The example establishes a connection with a remote UDP server, and based on the command received from the UDP server,
    turns the user LED ON or OFF.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-udp-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw43907,udp,server,wifi,mtb-flow">
    <name>UDP Server</name>
    <id>mtb-example-cyw43907-udp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-cyw43907-udp-server</uri>
    <description><![CDATA[In this code example, the UDP server waits for the UDP client to establish connection.
    Once the connection is established, the server allows the user to send the LED ON/OFF command to the UDP client through a button press;
    the client responds by sending an acknowledgement message to the server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw43907-udp-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,cdc,echo,mtb-flow" req_capabilities_v2="psoc6 usb_device">
    <name>USB CDC echo</name>
    <id>mtb-example-psoc6-usb-cdc-echo</id>
    <category>Peripherals</category>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-cdc-echo</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU for communication device class (CDC). When configured for a CDC, the PSoC&#8482; 6 MCU device enumerates a virtual COM port, which can be read and written by a terminal emulator program on a PC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-cdc-echo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_064b0s2_4343w]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="privacy,bonding,mtb-flow,btstack,freertos,bluetooth" req_capabilities_v2="bt led [cyw20829, cyw89829, psoc6]">
    <name>Bluetooth LE Peripheral Privacy</name>
    <id>mtb-example-btstack-freertos-peripheral-privacy</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-peripheral-privacy</uri>
    <description><![CDATA[This code example demonstrates the privacy features available to users in Bluetooth&#174; Low Energy 5.0 and above using ModusToolbox&#8482; software.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-peripheral-privacy/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 5.X release</num>
        <commit>latest-v5.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>5.0.0 release</num>
        <commit>release-v5.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,cyw920829m2evk_02,cyw989829m2evb_01,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5] [cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8cproto_062s2_43439,cy8ceval_062s2_cyw43022cub,cyw920829m2evk_02,cyw989829m2evb_01,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8cproto_062s2_43439]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8cproto_062s2_43439]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,bluetooth,btstack,mqtt,client,wifi,aws,iot,mosquitto,43012,43439" req_capabilities_v2="psoc6 wifi bt led switch [cyw43xxx,cyw55xxx][cy8ckit_062s2_43012,cy8ceval_062s2_mur_43439m2]">
    <name>Bluetooth LE IoT Gateway</name>
    <id>mtb-example-btstack-freertos-wifi-gateway</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-wifi-gateway</uri>
    <description><![CDATA[This code example demonstrates implementing a Bluetooth&#174; IoT gateway using the MQTT client library and Bluetooth&#174; LE host stack for Infineon connectivity devices. The MQTT client library uses the AWS IoT device SDK that includes an MQTT 3.1.1 client as well as libraries specific to AWS IoT such as Thing Shadows. The Bluetooth&#174; Mesh stack runs with FreeRTOS in the server and client model.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-wifi-gateway/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license.<br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi bt cyw43xxx led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,temp,sensor,adc,8-bit,temperature,mtb-flow" req_capabilities_v2="pmg1 usbpd uart led switch [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113, pmg1_b1_cy7116]">
    <name>On Chip Temp Sensor 8 bit SAR ADC</name>
    <id>mtb-example-pmg1-on-chip-temp-sensor-8-bit-saradc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-on-chip-temp-sensor-8-bit-saradc</uri>
    <description><![CDATA[This code example demonstrates the method of reading internal temperature through a BJT based on-chip temperature sensor provided on Power Delivery Microcontroller Generation 1 (PMG1) devices, using the 8-bit SAR ADC in USB PD block and to display the temperature value on a UART terminal on switch press.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-on-chip-temp-sensor-8-bit-saradc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usbpd uart led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,temp,sensor,adc,12-bit,temperature,mtb-flow" req_capabilities_v2="pmg1 adc uart led switch [pmg1_cy7113]">
    <name>On Chip Temp Sensor 12 bit SAR ADC</name>
    <id>mtb-example-pmg1-on-chip-temp-sensor-12-bit-saradc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-on-chip-temp-sensor-12-bit-saradc</uri>
    <description><![CDATA[This code example demonstrates the method of reading internal temperature through BJT based on-chip temperature sensor provided on PMG1-S3 devices, using the programmable 12-bit SAR ADC and to display the temperature value on a UART terminal on switch press. This example also explains the steps for configuration of internal temperature sensor and analog signal routing using Device Configurator tool.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-on-chip-temp-sensor-12-bit-saradc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 adc uart led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,uart,echo,mtb-flow" req_capabilities_v2="pmg1 uart [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>UART echo</name>
    <id>mtb-example-pmg1-uart-echo</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-uart-echo</uri>
    <description><![CDATA[This code example demonstrates the UART transmit and receive operation in PMG1 devices. The application uses a serial terminal to write data and echoes what is received. The UART is configured to do both transmit and receive operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-uart-echo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pairing,mtb-flow,bluetooth,button" req_capabilities_v2="bt led switch [psoc6, cyw920829m2evk_02, cyw89829]">
    <name>Bluetooth LE Hello Sensor</name>
    <id>mtb-example-btstack-freertos-hello-sensor</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-hello-sensor</uri>
    <description><![CDATA[This code example demonstrates the implementation of Bluetooth&#174; LE custom service with Bluetooth&#174; security using AIROC&#8482; CYW20829, PSoC&#8482; 6 , and ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-hello-sensor/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_cyw955513sdm2wlipa]">
        <num>4.1.0 release</num>
        <commit>release-v4.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4,bsp_gen5]">
        <num>3.7.0 release</num>
        <commit>release-v3.7.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.6.0 release</num>
        <commit>release-v3.6.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.5.0 release</num>
        <commit>release-v3.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>3.4.0 release</num>
        <commit>release-v3.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>3.3.0 release</num>
        <commit>release-v3.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,spi,led,mtb-flow" req_capabilities_v2="pmg1 spi led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>SPI Slave</name>
    <id>mtb-example-pmg1-spi-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-spi-slave</uri>
    <description><![CDATA[This code example demonstrates the SPI Slave in PMG1. The slave device's LED is toggled depending on the master's command. The master's LED is toggled depending on the slave's status reported.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-spi-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 spi led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,spi,led,mtb-flow" req_capabilities_v2="pmg1 spi led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>SPI Master</name>
    <id>mtb-example-pmg1-spi-master</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-spi-master</uri>
    <description><![CDATA[This code example demonstrates the SPI Master in PMG1. The slave device's LED is toggled depending on the SPI master's command. The master's LED is toggled depending on the slave's status reported.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-spi-master/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,analog,ctbm,ctb,opamp,comparator,mtb-flow" req_capabilities_v2="pmg1 opamp [pmg1_cy7113]">
    <name>CTBm OpAmp comparator</name>
    <id>mtb-example-pmg1-ctbm-opamp-comparator</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-ctbm-opamp-comparator</uri>
    <description><![CDATA[This code example demonstrates the method of using opamps in the Continuous Time Block mini (CTBm) resource on PMG1-S3 MCU devices for processing continuous-time signals. This includes the CTBm configuration as an opamp comparator and analog routing of inputs and the output. The output of the comparator is monitored by observing the state of an on-board LED.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-ctbm-opamp-comparator/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 opamp</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,adc,sar,12-bit,analog,pass,mtb-flow" req_capabilities_v2="pmg1 adc uart [pmg1_cy7113, pmg1_b1_cy7116]">
    <name>12 bit SAR ADC</name>
    <id>mtb-example-pmg1-12-bit-saradc-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-12-bit-saradc-basic</uri>
    <description><![CDATA[This code example demonstrates the method of using the 12-bit SAR ADC on PMG1-S3 MCU to read the input voltage applied in both differential and single-ended modes and to display the measured voltage and corresponding output codes in signed/unsigned format. It also explains the configuration of PASS 0 12-bit SAR ADC 0 using the Device Configurator tool.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-12-bit-saradc-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 adc uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,adc,sar,8-bit,analog,mtb-flow" req_capabilities_v2="pmg1 usbpd uart led [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113, pmg1_b1_cy7116]">
    <name>8 bit SAR ADC</name>
    <id>mtb-example-pmg1-8-bit-saradc-basic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-8-bit-saradc-basic</uri>
    <description><![CDATA[This code example demonstrates the method of using the 8-bit SAR ADC in the USBPD block on PMG1 MCU to measure the external input voltage. The measured voltage values and the corresponding ADC results are displayed on a UART terminal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-8-bit-saradc-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usbpd uart led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,flash" req_capabilities_v2="pmg1 [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>Flash write</name>
    <id>mtb-example-pmg1-flash-write</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-flash-write</uri>
    <description><![CDATA[This code example demonstrates writing to the internal flash in PMG1 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-flash-write/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usb,mtb-flow,cdc,echo" req_capabilities_v2="pmg1 usb_device [pmg1_cy7112, pmg1_cy7113]">
    <name>USBFS CDC echo</name>
    <id>mtb-example-pmg1-usbfs-cdc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbfs-cdc</uri>
    <description><![CDATA[This code example demonstrates how to configure the USB block on PMG1 MCU as a Communication Device Class (CDC). When configured for CDC, the PMG1 MCU device enumerates as virtual COM port, which can be read and written using a terminal emulator program on a PC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbfs-cdc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.3.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usb,mtb-flow,msc,mass storage, file system" req_capabilities_v2="pmg1 usb_device switch [pmg1_cy7112, pmg1_cy7113]">
    <name>USBFS MSC File System in SRAM</name>
    <id>mtb-example-pmg1-usbfs-msc-fs-sram</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbfs-msc-fs-sram</uri>
    <description><![CDATA[This code example demonstrates how to configure the USB block on EZ-PD&#8482; PMG1 MCU as a mass storage class (MSC) device and will emulate a file system in the SRAM memory.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbfs-msc-fs-sram/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usb_device switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,i2c,slave,led" req_capabilities_v2="pmg1 i2c [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>I2C Slave LED</name>
    <id>mtb-example-pmg1-i2c-slave-led</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-i2c-slave-led</uri>
    <description><![CDATA[This code example demonstrates how the I2C block in the EZ-PD&#8482; PMG1 MCU device can be used as a slave. An external I2C master sends commands, which are used to turn ON or OFF the user LED.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-i2c-slave-led/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,crypto,trng,cryptolite,otp" req_capabilities_v2="pmg1 [pmg1_cy7113]">
    <name>Cryptography TRNG</name>
    <id>mtb-example-pmg1-crypto-trng</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-crypto-trng</uri>
    <description><![CDATA[This code example demonstrates how to generate a 4-byte one-time password (OTP) with the true random number generation feature using the Cryptographic hardware block in PMG1 MCU.
      <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-crypto-trng/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="beacon,mtb-flow,bluetooth,ble" req_capabilities_v2="ble [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE Extended Advertisement Beacon</name>
    <id>mtb-example-btstack-freertos-extadv-beacon</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-extadv-beacon</uri>
    <description><![CDATA[This code example demonstrates the implementation of Bluetooth&#174; Low Energy extended advertisements and use of beacon library using ModusToolbox&#8482; software.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-extadv-beacon/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>ble cyw920829m2evk_02</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pairing,mtb-flow,bluetooth,button" req_capabilities_v2="bt cyw20829">
    <name>Bluetooth LE Voice Remote</name>
    <id>mtb-example-btstack-freertos-cyw20829-voice-remote</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-voice-remote</uri>
    <description><![CDATA[This solution demonstrates the basic features of HID (Human Interface Device) Profile from Bluetooth&#174; Low Energy  with Android TV.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-voice-remote/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt cyw20829</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5] [cyw920829_vr,cyw920829m2evk_02]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5] [cyw920829_vr,cyw920829m2evk_02]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829_vr,cyw920829m2evk_02]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829_vr,cyw920829m2evk_02]">
        <num>2.3.0 release</num>
        <commit>release-v2.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829_vr,cyw920829m2evk_02]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829_vr,cyw920829m2evk_02]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829_vr]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usb,i2c,multi,master,multi-master" req_capabilities_v2="pmg1 i2c [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113]">
    <name>I2C multi-master</name>
    <id>mtb-example-pmg1-i2c-multi-master</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-i2c-multi-master</uri>
    <description><![CDATA[This code example demonstrates how to use the SCB I2C component in master-slave configuration to send and receive I2C data to toggle the state of the onboard LEDs using PMG1 MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-i2c-multi-master/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,watchdog,wdt,timer,reset,interrupt,mtb-flow" req_capabilities_v2="pmg1 led switch [pmg1_cy7110, pmg1_cy7111, pmg1_cy7112, pmg1_cy7113, pmg1_b1_cy7116]">
    <name>Watchdog Timer</name>
    <id>mtb-example-pmg1-watchdog-timer</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-watchdog-timer</uri>
    <description><![CDATA[This code example demonstrates the method of using the watchdog timer (WDT) on PMG1 devices to automatically reset the device in the event of an unexpected firmware execution path that compromises the CPU functionality. It also explains the configuration of the watchdog timer as an interrupt source to generate a periodic interrupt that can be used to execute specific tasks..
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-watchdog-timer/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 led switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usb,mtb-flow,vendor interface,Bulkloop" req_capabilities_v2="pmg1 usb_device [pmg1_cy7112, pmg1_cy7113]">
    <name>USB FS vendor interface</name>
    <id>mtb-example-pmg1-usbfs-vendor-interface</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbfs-vendor-interface</uri>
    <description><![CDATA[This code example demonstrates how to configure the USB block on EZ-PD&#8482; PMG1 MCU as a vendor interface. When configured for vendor interface, the EZ-PD&#8482; PMG1 MCU device enumerates as Cypress&#8482; FX3 USB BulkloopExample Device, which can be read and written using a USB Control Center on a PC...
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbfs-vendor-interface/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,mtb-flow,6edl7141,gate-driver,motor-control" req_capabilities_v2="eval_6edl7141_trap_1sh">
    <name>XMC 6EDL7141 Trapezoidal 1 Shunt</name>
    <id>mtb-example-xmc-6edl7141-trapezoidal-1-shunt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-6edl7141-trapezoidal-1-shunt</uri>
    <description><![CDATA[This code example support motor control Trapezoidal 1 Shunt application in XMC1404 device and provide the SPI bus communication to configure the registers in 6EDL7141 motor control driver IC.]]></description>
    <req_capabilities>eval_6edl7141_trap_1sh</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,wifi,aws,iot,ota,mqtt" req_capabilities_v2="psoc6 cyw43xxx wifi led [flash_2048k, flash_1856k]">
    <name>AWS IoT OTA Using MQTT</name>
    <id>mtb-example-aws-iot-ota-mqtt</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-aws-iot-ota-mqtt</uri>
    <description><![CDATA[This code example demonstrates an OTA update with PSoC&#8482; 6 MCU and AIROC&#8482; CYW43xxx Wi-Fi & Bluetooth&#174; combo chips. The example uses the "AWS SDK for Embedded C" and "AWS IoT device sdk port" to connect and communicate with the AWS IoT MQTT core.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-aws-iot-ota-mqtt/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,button,low-power,wot,tuning,mtb-flow" req_capabilities_v2="psoc4 msclp serial_led">
    <name>MSCLP CAPSENSE LOW POWER</name>
    <id>mtb-example-psoc4-msclp-capsense-low-power</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-capsense-low-power</uri>
    <description><![CDATA[This code example demonstrates an implementation of a low-power application including recommended power states and transitions, tuning parameter adjustments, and method of tuning.This example uses a single self-capacitance-based button in MSCLP (5th-generation low-power CAPSENSE&#8482) to demonstrate different considerations to implement a low-power design.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-capsense-low-power/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>4.0.1 release</num>
        <commit>release-v4.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>3.0.1 release</num>
        <commit>release-v3.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,proximity,tuning,self capacitance,low-power,wake on touch,always on,touch,range,wot,led,tune,ratiometric,distance,detection,hover" req_capabilities_v2="psoc4 msclp serial_led spi i2c low_power msc_proximity">
    <name>MSCLP CAPSENSE Low-Power Proximity Tuning</name>
    <id>mtb-example-psoc4-msclp-low-power-proximity-rgbled</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-proximity-rgbled</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a Proximity widget and a low power widget for low power proximity detection in PSoC&#8482; 4 device using MSCLP (5th-generation low-power CAPSENSE&#8482;) and CAPSENSE&#8482; Tuner.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-proximity-rgbled/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led spi i2c low_power msc_proximity</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.5.0 release</num>
        <commit>release-v1.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.4.0 release</num>
        <commit>release-v1.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,proximity,tuning,self capacitance,low-power,wake on touch,always on,touch,range,wot,led,tune,ratiometric,distance,detection,hover" req_capabilities_v2="psoc4 msclp serial_led spi i2c low_power msc_proximity">
    <name>PSoC 4 MSCLP CAPSENSE Liquid Tolerant Proximity Sensing</name>
    <id>mtb-example-psoc4-msclp-liquid-tolerant-proximity</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-liquid-tolerant-proximity</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a Proximity widget for liquid tolerance in PSoC&#8482; 4 device using MSCLP (5th-generation low-power CAPSENSE&#8482;) and CAPSENSE&#8482; Tuner.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-liquid-tolerant-proximity/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led spi i2c low_power msc_proximity</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.2.1 release</num>
        <commit>release-v1.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,button,touchpad,low-power,wot,tuning,mtb-flow,led" req_capabilities_v2="psoc4 msclp serial_led msc_button msc_touchpad spi i2c low_power enclosure">
    <name>MSCLP Robust Low-Power Liquid-Tolerant CAPSENSE</name>
    <id>mtb-example-psoc4-msclp-capsense-demo</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-capsense-demo</uri>
    <description><![CDATA[This code example demonstrates a low-power, liquid-tolerant application including different CAPSENSE&#8482; states and transitions, with recommended tuning parameters. This example demonstrates the advanced features of MSCLP (5th-generation low-power CAPSENSE&#8482;) by using all the sensors on the CY8CKIT-040T CAPSENSE&#8482; evaluation kit. The on-board LEDs are used in this example to indicate different touch operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-capsense-demo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led msc_button msc_touchpad spi i2c low_power enclosure</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>3.0.1 release</num>
        <commit>release-v3.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,button,low-power,tuning,self-capacitance,mtb-flow" req_capabilities_v2="psoc4 msclp serial_led msc_button spi i2c low_power">
    <name>MSCLP Self Capacitance Button Tuning</name>
    <id>mtb-example-psoc4-msclp-csd-button</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-csd-button</uri>
    <description><![CDATA[This is a code example demonstrating the tuning procedure of CAPSENSE&#8482; self-capacitance button along with gestures using PSoC&#8482; 4 device using MSCLP (5th-generation low-power CAPSENSE&#8482;) and CAPSENSE&#8482; Tuner.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-csd-button/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led msc_button spi i2c low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,touchpad,low-power,tuning,self-capacitance,mtb-flow" req_capabilities_v2="psoc4 msclp serial_led msc_touchpad spi i2c low_power">
    <name>PSoC 4 MSCLP self-capacitance touchpad tuning</name>
    <id>mtb-example-psoc4-msclp-self-capacitance-touchpad</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-self-capacitance-touchpad</uri>
    <description><![CDATA[This code example demonstrates how to use the CAPSENSE&#8482; middleware to detect a finger touch position on a self-capacitance-based touchpad widget in PSoC&#8482; 4000T device with multi-sense converter low power (MSCLP&#8482;).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-self-capacitance-touchpad/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led msc_touchpad spi i2c low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csx,touchpad,low-power,tuning,mutual-capacitance,mtb-flow" req_capabilities_v2="psoc4 msclp serial_led msc_touchpad spi i2c low_power">
    <name>PSoC 4 MSCLP multitouch mutual-capacitance touchpad tuning</name>
    <id>mtb-example-psoc4-msclp-csx-touchpad</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-csx-touchpad</uri>
    <description><![CDATA[This is a code example demonstrating the tuning procedure of MSCLP (5th-generation low-power CAPSENSE&#8482;) mutual-capacitance touchpad along with gestures.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-csx-touchpad/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led msc_touchpad spi i2c low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csx,mptx,touchpad,low-power,tuning,mutual-capacitance,mtb-flow" req_capabilities_v2="psoc4 msclp serial_led msc_touchpad spi i2c low_power">
    <name>PSoC 4 MSCLP multi-phase mutual-capacitance touchpad</name>
    <id>mtb-example-psoc4-msclp-mptx-touchpad</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-mptx-touchpad</uri>
    <description><![CDATA[This code example demonstrates multi-phase CSX (MPTX) touchpad implemention on the CY8CKIT-040T and showcases the performance improvement over regular CSX.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-mptx-touchpad/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp serial_led msc_touchpad spi i2c low_power</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usb,mtb-flow,billboard" req_capabilities_v2="pmg1 usb_device [pmg1_cy7112, pmg1_cy7113]">
    <name>USBFS Billboard</name>
    <id>mtb-example-pmg1-usbfs-billboard</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbfs-billboard</uri>
    <description><![CDATA[This code example demonstrates how to configure the USB block on PMG1 MCU as a Billboard device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbfs-billboard/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="motor-control,mtb-flow" req_capabilities_v2="spi hal cy8cproto_062_4343w">
    <name>Multi Half-Bridge</name>
    <id>mtb-example-multi-half-bridge</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-multi-half-bridge</uri>
    <description><![CDATA[This example shows the usage of the Infineon multi half-bridge library with several application examples.<br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-multi-half-bridge/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>spi hal</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,csdidac,mtb-flow,capsense,csd,dac" req_capabilities_v2="psoc6 capsense [flash_2048k,flash_1024k,flash_512k]">
    <name>CSD Current DAC</name>
    <id>mtb-example-psoc6-csdidac</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-csdidac</uri>
    <description><![CDATA[This code example demonstrates using the CSD hardware-block-based current digital-to-analog converter (CSDIDAC) as a current source and a current sink.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-csdidac/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s4,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s4,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_062s4,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb,cy8ceval_062s2_lai_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_062s2_43012,cy8cproto_062s3_4343w]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.2.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen2] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8cproto_063_ble,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_062s2_43012,cy8cproto_062s3_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,capsense,button,slider,i2c,tuner,mtb-flow,capsense-on-cm0+,dual-cpu-example" req_capabilities_v2="psoc6 led capsense_button capsense_linear_slider [flash_2048k,flash_1024k,flash_512k,flash_256k]">
    <name>CAPSENSE on CM0p</name>
    <id>mtb-example-psoc6-capsense-cm0p</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-capsense-cm0p</uri>
    <description><![CDATA[This code example demonstrates how to create a CAPSENSE&#8482; design using only the CM0+ core of PSoC&#8482; 6 MCU devices. This code example features 5-segment CAPSENSE&#8482; slider and two CAPSENSE&#8482; buttons. Button 0 (BTN0) turns the LED ON, button 1 (BTN1) turns the LED OFF and the slider controls the brightness of the LED. This code example also demonstrates monitoring CAPSENSE&#8482; data using CAPSENSE&#8482; Tuner GUI tool.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-capsense-cm0p/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_lai_43439m2]">
        <num>2.2.0 release</num>
        <commit>release-v2.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,smpu,ppu,ipc,mtb-flow,security,rma" req_capabilities_v2="psoc6">
    <name>Security App</name>
    <id>mtb-example-psoc6-security</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-security</uri>
    <description><![CDATA[This is a minimal starter dual-CPU security application template for PSoC&#8482; 62/63 MCU devices. This code example is meant to be a companion to the <a href="https://www.infineon.com/an221111">AN221111 - PSoC&#8482; 6 MCU: Designing a secured system</a> application note.It demonstrates following features to create a secured system as explained in the application note.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-security/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>3.0.1 release</num>
        <commit>release-v3.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version_v2="[bsp_gen3] [cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,CCM,helloworld" req_capabilities_v2="psoc6 uart [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064s1_sb]">
    <name>CCM hello world</name>
    <id>mtb-example-ccm-mqtt-helloworld</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-ccm-mqtt-helloworld</uri>
    <description><![CDATA[This code example demonstrates publishing MQTT messages to the AWS IoT Core with the help of the Cloud Connectivity Manager (CCM) evaluation kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ccm-mqtt-helloworld/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,CCM,capsense" req_capabilities_v2="psoc6 uart capsense_linear_slider [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2]">
    <name>CCM CAPSENSE Publish</name>
    <id>mtb-example-ccm-mqtt-publish-capsense-slider</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-ccm-mqtt-publish-capsense-slider</uri>
    <description><![CDATA[This code example demonstrates publishing MQTT messages to AWS IoT Core with the help of Cloud Connectivity Manager (CCM) evaluation kit.
    This code example features a 5-segment CAPSENSE&#8482; slider. The brightness of the LED is calculated based on the position in linear slider and
    the brightness is published to the topic "MySubTopic" in AWS IoT core.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ccm-mqtt-publish-capsense-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,CCM,OTA,subscribe" req_capabilities_v2="psoc6 uart [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064s1_sb]">
    <name>CCM Subscribe OTA</name>
    <id>mtb-example-ccm-mqtt-ota-subscribe</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-ccm-mqtt-ota-subscribe</uri>
    <description><![CDATA[This code example demonstrates MQTT Subscribe and OTA from AWS IoT Core with the help of the Cloud Connectivity Manager (CCM) evaluation kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ccm-mqtt-ota-subscribe/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 capsense_linear_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.1 release</num>
        <commit>release-v2.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen3">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="2.4.1" req_capabilities_per_version="bsp_gen2">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="wlc1,usbpd,mtb-flow">
    <name>WLC1 EPP Power Transmitter</name>
    <id>mtb-example-wlc1-ptx-epp</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-wlc1-ptx-epp</uri>
    <description><![CDATA[This code example demonstrates the wireless charging power transmitter EPP function with USB-PD sink as the power input.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wlc1-ptx-epp/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usbpd wlc1</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen3">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen3">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk,findme,bluetooth,profile" req_capabilities_v2="fw2 btsdk">
    <name>LE Find Me</name>
    <id>mtb-example-btsdk-ble-findme</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btsdk-ble-findme</uri>
    <description><![CDATA[This application demonstrates the implementation of a simple LE Immediate Alert Service (IAS)-based Find Me Profile (FMP).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-ble-findme/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920819M2EVB_01,CYW920820EVB_02,CYW920820M2EVB_01,CYW920835M2EVB_01,CYW920719B2Q40EVB_01,CYW989820M2EVB_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920819M2EVB_01,CYW920820EVB_02,CYW920820M2EVB_01,CYW920835M2EVB_01,CYW920719B2Q40EVB_01,CYW989820M2EVB_01]">
        <num>1.0.1 releasee</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819EVB_02,CYW920819M2EVB_01,CYW920820EVB_02,CYW920820M2EVB_01,CYW920835M2EVB_01,CYW920719B2Q40EVB_01,CYW989820M2EVB_01]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,cdc,echo,mtb-flow,emUSB-Device" req_capabilities_v2="[psoc6,t2gbe] usb_device [flash_2048k,flash_1024k,flash_512k,flash_256k]">
    <name>emUSB-Device CDC echo</name>
    <id>mtb-example-usb-device-cdc-echo</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-cdc-echo</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482;  6 MCU for communication device class (CDC) using Segger's emUSB-Device middleware. When configured for a CDC, the PSoC&#8482;  6 MCU device gets enumerated as a virtual COM port, which can be read and written by a terminal emulator program on a PC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-cdc-echo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,mtb-flow,hid,generic,emUSB-Device" req_capabilities_v2="[psoc6,t2gbe] usb_device [flash_2048k,flash_1024k,flash_512k,flash_256k]">
    <name>emUSB-Device HID Generic</name>
    <id>mtb-example-usb-device-hid-generic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-hid-generic</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482;  6 MCU as a Human Interface Device (HID) using Segger's emUSB-Device middleware. The device enumerates as a Generic HID device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-hid-generic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,mtb-flow,hid,mouse,emUSB-Device" req_capabilities_v2="[psoc6,t2gbe] usb_device [flash_2048k,flash_1024k,flash_512k,flash_256k] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8cproto_062s2_43439]">
    <name>emUSB-Device HID Mouse</name>
    <id>mtb-example-usb-device-hid-mouse</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-hid-mouse</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482;  6 MCU as a HID using Segger's emUSB-Device middleware. The device enumerates as a 3-button mouse.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-hid-mouse/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,msc,usb,file system,mass storage,sd,mtb-flow,emUSB-Device" req_capabilities_v2="[psoc6,t2gbe] usb_device [flash_2048k] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2]">
    <name>emUSB-Device Mass Storage File System</name>
    <id>mtb-example-usb-device-msc-filesystem-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-msc-filesystem-freertos</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482;  6 MCU device as a Mass Storage (MSC) device and run a file system (FatFs) through an external memory (microSD). This example uses FreeRTOS and Segger's emUSB-Device middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-msc-filesystem-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,suspend,resume,mtb-flow,emUSB-Device" req_capabilities_v2="[psoc6,t2gbe] usb_device [flash_2048k,flash_1024k,flash_512k,flash_256k] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
    <name>emUSB-Device Suspend and Resume</name>
    <id>mtb-example-usb-device-suspend</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-suspend</uri>
    <description><![CDATA[This code example demonstrates how PSoC&#8482;  6 USB detects a suspend condition, enters a low-power state, and restores normal operation when USB activity is resumed. The code example uses Segger's emUSB-Device middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-suspend/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,cdc,echo,mtb-flow,emusb-Host" req_capabilities_v2="[psoc6,t2gbe] usb_host [flash_1024k,flash_2048k] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
    <name>emUSB-Host CDC echo</name>
    <id>mtb-example-usb-host-cdc-echo</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-host-cdc-echo</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482;  6 MCU as a communication device class (CDC) host using Segger's emUSB-Host middleware. When configured as a CDC host, the PSoC&#8482;  6 MCU device enumerates the CDC device as a virtual COM port and echoes back the incoming data from the device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-host-cdc-echo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_host</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pairing,mtb-flow,bluetooth,ble,battery,client,button" req_capabilities_v2="bt led">
    <name>Bluetooth LE Battery Client</name>
    <id>mtb-example-btstack-freertos-battery-client</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-battery-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of the Bluetooth&#174; LE Battery Service client using the Infineon&#174; AIROC&#8482; CYW20829 Bluetooth&#174; chip and PSoC&#8482; 6 MCU with AIROC&#8482; Bluetooth&#174; LE with ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-battery-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw989829m2evb_03]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval,cyw989829m2evb_03]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>1.2.1 release</num>
        <commit>release-v1.2.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble,cy8cproto_063_ble,cyble_416045_eval]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btsdk,lowpower,bluetooth,profile" req_capabilities_v2="fw2 btsdk [CYW920819M2EVB_01,CYW920820M2EVB_01]">
    <name>HAL Low Power</name>
    <id>mtb-example-btsdk-low-power-20819</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-btsdk-low-power-20819</uri>
    <description><![CDATA[This example demonstrates low-power modes on CYW20819 and CYW20820 using ModusToolbox&#8482;.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-low-power-20819/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819M2EVB_01,CYW920820M2EVB_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="2.4.0" req_capabilities_per_version_v2="[bsp_gen2] [CYW920819M2EVB_01,CYW920820M2EVB_01]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pairing,mtb-flow,bluetooth,ble,hello,sensor,le-lr,central,client,button" req_capabilities_v2="ble led [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE Long Range Central</name>
    <id>mtb-example-btstack-freertos-le-lr-central</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-lr-central</uri>
    <description><![CDATA[This code example demonstrates the use of LE Long Range PHY as a central (GATT Client) application with Infineon AIROC&#8482; CYW20829 Bluetooth&#174; devices and ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-lr-central/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pairing,mtb-flow,bluetooth,ble,hello,sensor,le-lr,peripheral,server,button" req_capabilities_v2="ble led [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE Long Range Peripheral</name>
    <id>mtb-example-btstack-freertos-le-lr-peripheral</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-lr-peripheral</uri>
    <description><![CDATA[This code example demonstrates the use of LE Long Range PHY as a peripheral (GATT Sever) application with Infineon AIROC&#8482; CYW20829 Bluetooth&#174; devices and ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-lr-peripheral/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="i2c,slave,mtb-flow" req_capabilities_v2="hal led i2c [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>HAL I2C Slave</name>
    <id>mtb-example-hal-i2c-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-i2c-slave</uri>
    <description><![CDATA[This code example demonstrates the use of I2C resource in HAL in slave mode. The I2C slave is configured to receive command packets to control a user LED on the kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-i2c-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>1.5.0 release</num>
        <commit>release-v1.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>1.4.0 release</num>
        <commit>release-v1.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.1 release</num>
        <commit>release-v1.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw20829,clk,freq" req_capabilities_v2="[cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>Clock Frequency Measurement</name>
    <id>mtb-example-cyw20829-clk-freq-measurement</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw20829-clk-freq-measurement</uri>
    <description><![CDATA[This example demonstrates how a clock measurement counter can be used to measure the internal clock signals using another clock signal as reference.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw20829-clk-freq-measurement/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cat1b</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.1 release</num>
        <commit>release-v1.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="hid,keyboard,bluetooth,button" req_capabilities_v2="bt cyw20829 [cyw920829_keyboard]">
    <name>AIROC LE CYW20829 Keyboard</name>
    <id>mtb-example-btstack-freertos-cyw20829-keyboard</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-keyboard</uri>
    <description><![CDATA[This code example demonstrates a keyboard solution using HID (Human Interface Device) Profile from Bluetooth&#174; Low Energy with Windows, Android and IOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-keyboard/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt cyw20829</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>3.2.0 release</num>
        <commit>release-v3.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>3.0.1 release</num>
        <commit>release-v3.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="hid,mouse,bluetooth,button" req_capabilities_v2="bt cyw20829 [cyw920829_mouse]">
    <name>AIROC LE CYW20829 Mouse</name>
    <id>mtb-example-btstack-freertos-cyw20829-mouse</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-mouse</uri>
    <description><![CDATA[This code example demonstrates a mouse solution using HID (Human Interface Device) Profile from Bluetooth&#174; Low Energy with Windows, Android and IOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-mouse/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt cyw20829</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 4.X release</num>
        <commit>latest-v4.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>4.0.0 release</num>
        <commit>release-v4.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>3.1.0 release</num>
        <commit>release-v3.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,lz4,compression,decompression,mtb-flow" req_capabilities_v2="[psoc6,t2gbe] [flash_8384k,flash_2048k,flash_1024k,flash_512k,flash_256k,flash_832k,flash_448k,flash_1856k]">
    <name>LZ4 compression and decompression demo</name>
    <id>mtb-example-lz4-demo</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-lz4-demo</uri>
    <description><![CDATA[This code example demonstrates a simple LZ4 compression and decompression on a byte array. The byte array included with this application is the pre-built image of the <a href="https://github.com/Infineon/mtb-example-hal-hello-world">hello-world application </a>. The application boots the decompressed byte array on a user command.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-lz4-demo/blob/main/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,audio,streaming">
    <name>Audio Streaming</name>
    <id>mtb-example-audio-streaming</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-audio-streaming</uri>
    <description><![CDATA[This example, which is based on FreeRTOS, demonstrates how to stream audio data, with a publicly available and widely used protocol <a href="https://github.com/cmcqueen/cobs-c">Consistent Overhead Byte Stuffing (COBS)</a>, from a micro controller to a host system.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-audio-streaming/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 pdm cy8cproto_062_4343w</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="spi,slave,mtb-flow" req_capabilities_v2="hal led spi [psoc6,t2gbe,xmc7000,t2gbh,t2gbh_lite,cyw20829,cyw89829]">
    <name>HAL SPI Slave</name>
    <id>mtb-example-hal-spi-slave</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-spi-slave</uri>
    <description><![CDATA[This code example demonstrates the use of SPI (HAL) resource in Slave mode. The SPI slave is configured to receive command packets to control a user LED on the kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-spi-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal led spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw989829m2evb_03,cyw989829m2evb_01,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8cproto_062s2_43439]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw989829m2evb_03,cyw989829m2evb_01,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1,cy8cproto_062s2_43439]">
        <num>1.4.0 release</num>
        <commit>release-v1.5.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw989829m2evb_03,cyw989829m2evb_01,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1]">
        <num>1.4.0 release</num>
        <commit>release-v1.4.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw920829m2evk_02,kit_xmc72_evk_mur_43439m2,kit_xmc71_evk_lite_v1]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw920829m2evk_02,kit_xmc72_evk_mur_43439m2]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw920829m2evk_02]">
        <num>1.1.2 release</num>
        <commit>release-v1.1.2</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw920829m2evk_02]">
        <num>1.1.1 release</num>
        <commit>release-v1.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02,cyble_416045_eval,cyw920829m2evk_02]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cy8cproto_062s3_4343w,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,cy8ceval_062s2_mur_43439m2,cy8cproto_064b0s3,cy8cproto_064s1_sb,kit_xmc72_evk,cyw920829m2evk_02]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw20829,adc,mtb-flow" req_capabilities_v2="cyw20829 [cyw920829m2evk_02]">
    <name>DC Monitoring</name>
    <id>mtb-example-cyw20829-dc-monitoring</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw20829-dc-monitoring</uri>
    <description><![CDATA[This application demonstrates how to configure and use ADC in AIROC&#8482; CYW920829M2EVK-02 board to measure DC voltage.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw20829-dc-monitoring/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cyw20829</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,tcpwm,square-wave,mtb-flow" req_capabilities_v2="led psoc4">
    <name>TCPWM square wave</name>
    <id>mtb-example-psoc4-tcpwm-square-wave</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-tcpwm-square-wave</uri>
    <description><![CDATA[This code example demonstrates how to generate a square wave using the TCPWM peripheral configured as a PWM on a PSoC&#8482; 4 device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-tcpwm-square-wave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,clock-buffer,smart-io,mtb-flow" req_capabilities_v2="led smart_io psoc4">
    <name>Clock Buffer with Smart IO</name>
    <id>mtb-example-psoc4-clock-buffer-with-smart-io</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-clock-buffer-with-smart-io</uri>
    <description><![CDATA[This example shows how to use a Smart I/O Peripheral in PSoC&#8482; 4 to implement a clock buffer that can operate in chip low power modes. It can also be used to drive a heavier load than one GPIO is rated for by replicating the signal and driving two pins.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-clock-buffer-with-smart-io/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led smart_io psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,canfd,mtb-flow" req_capabilities_v2="led [psoc6, cyw20829, cyw89829]">
    <name>CAN FD</name>
    <id>mtb-example-cat1-canfd</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cat1-canfd</uri>
    <description><![CDATA[This example demonstrates how to use CAN FD in Infineon's PSoC&#8482; 6 MCU,CYW20829 and CYW89829 devices. In this example, the CANFD Node-1 sends a CAN FD frame to CANFD-Node-2 on pressing the user button and vice versa. Both the CAN FD nodes log the received data over UART serial terminal. Each time a CAN FD Frame is received, the user LED toggles.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cat1-canfd/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s3_4343w,cy8ckit_062s4,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s3_4343w,cy8ckit_062s4,cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062s3_4343w,cy8ckit_062s4,cyw920829m2evk_02,cyw989829m2evb_01]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062s3_4343w,cy8ckit_062s4,cyw920829m2evk_02,cyw989829m2evb_01]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,hibernate,detection,led,mtb-flow" req_capabilities_v2="xmc4000 led [kit_xmc_plt2go_xmc4200, kit_xmc_plt2go_xmc4400]">
    <name>SCU Hibernate</name>
    <id>mtb-example-xmc-scu-hibernate</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-scu-hibernate</uri>
    <description><![CDATA[This code example demonstrates how to configure the SCU to enter Hiberante power mode and recover from hiberante to active power mode in XMC&#8482; MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-scu-hibernate/blob/master/README.md">README on GitHub</a>.
    <br><br><b>Note:</b> Programming this code example requires installing <a href="https://www.segger.com/downloads/jlink/#J-LinkSoftwareAndDocumentationPack">SEGGER J-Link software</a>.]]></description>
    <req_capabilities>xmc4000 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,psoc64,rma" req_capabilities_v2="psoc6 switch">
    <name>Transition to RMA</name>
    <id>mtb-example-psoc6-transition-to-rma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-transition-to-rma</uri>
    <description><![CDATA[This code example demonstrates the transitioning of PSoC6x device into RMA Life cycle stage.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-transition-to-rma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w,cy8cproto_064b0s3]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,mtb-flow,6edl7141,imd700,gate-driver,motor-control" req_capabilities_v2="xmc [eval_6edl7141_foc_3sh,eval_imd700a_foc_3sh]">
    <name>XMC FOC 3 Shunt</name>
    <id>mtb-example-xmc-foc-3-shunt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-foc-3-shunt</uri>
    <description><![CDATA[This code example support motor control FOC 3 Shunt application in XMC1404 device and provide the SPI bus communication to configure the registers in 6EDL7141 motor control driver IC.]]></description>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [eval_6edl7141_foc_3sh,eval_imd700a_foc_3sh]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [eval_6edl7141_foc_3sh,eval_imd700a_foc_3sh]">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,spi,slave-select,inversion,smart-io,mtb-flow" req_capabilities_v2="smart_io psoc4">
    <name>SPI Slave Select Inversion with Smart IO</name>
    <id>mtb-example-psoc4-spi-slave-select-inversion-with-smartio</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-spi-slave-select-inversion-with-smartio</uri>
    <description><![CDATA[This example demonstrates how to use the Smart IO Peripheral in PSoC&#8482; 4 MCU to invert the output of the serial communication block (SCB) SPI slave select signal. This method can be used for any of the SCB unidirectional signals to invert the signal polarity.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-spi-slave-select-inversion-with-smartio/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>smart_io psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,cdc,echo,mtb-flow,emusb-Device" req_capabilities_v2="[psoc6,t2gbe] arduino usb_device [flash_1024k,flash_2048k]">
    <name>emUSB-Device Audio FreeRTOS</name>
    <id>mtb-example-usb-device-audio-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-audio-freertos</uri>
    <description><![CDATA[This example demonstrates how to setup the USB block of an Infineon MCU using Segger's emUSB-device middleware to implement a USB audio device and HID audio playback control which then connects to the PC via the USB interface.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-audio-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device arduino</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,usb,cdc,echo,mtb-flow,emusb-Device" req_capabilities_v2="[psoc6,t2gbe] usb_device [flash_1024k,flash_2048k]">
    <name>emUSB-Device Audio Recorder FreeRTOS</name>
    <id>mtb-example-usb-device-audio-recorder-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-audio-recorder-freertos</uri>
    <description><![CDATA[This example demonstrates how to set up the USB block of an Infineon MCU using audio class of Segger's emUSB-Device middleware to implement an audio recorder.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-audio-recorder-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pmg1,usbfs,usb,mtb-flow,cdc,uart,dma" req_capabilities_v2="pmg1 usb_device uart [pmg1_cy7113]">
    <name>USBFS to UART Using DMA</name>
    <id>mtb-example-pmg1-usbfs-uart-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-pmg1-usbfs-uart-dma</uri>
    <description><![CDATA[This code example demonstrates the data transfer between USBFS and UART peripherals using DMA. The USBFS block will be configured as a USB Communications Device Class (CDC). The data received via the USB OUT endpoint will be transferred using DMA to the UART TX buffer. The UART Tx and UART Rx pins can be connected to do a loopback. The data received via the UART RX buffer is transferred to USB IN endpoint via DMA. This code example shows how to use DMA to transfer data between two peripherals.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-pmg1-usbfs-uart-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>pmg1 usb_device uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="deep sleep,hibernate,low power,measurement,mtb-flow,psoc6,sleep" req_capabilities_v2="psoc6 [cy8ckit_062_wifi_bt]">
    <name>PSoC 6 MCU Power measurements</name>
    <id>mtb-example-psoc6-power-measurements</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-power-measurements</uri>
    <description><![CDATA[This code example demonstrates how to achieve the power measurements listed in the PSoC&#8482; 6 MCU datasheets.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-power-measurements/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,rtc,low power,deepsleep,hibernate,mtb-flow" req_capabilities_v2="low_power rtc switch [psoc6,t2gbe,cyw20829,cyw89829]">
    <name>HAL RTC periodic wakeup</name>
    <id>mtb-example-hal-rtc-periodic-wakeup</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-rtc-periodic-wakeup</uri>
    <description><![CDATA[This code example demonstrates how to enter the DeepSleep and Hibernate modes, and wakeup using the RTC alarm.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-rtc-periodic-wakeup/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>low_power rtc uart switch</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_062s2_43012,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8cproto_063_ble,cyble_416045_eval,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_062s2_43012,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cyw920829m2evk_02,cyw989829m2evb_01,cy8cproto_062s2_43439,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8cproto_063_ble,cyble_416045_eval,cy8ckit_064b0s2_4343w,cy8cproto_064b0s3,cy8cproto_064s1_sb]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_062s2_43012,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cyw920829m2evk_02]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cyw9p62s1_43012evb_01,cy8ckit_062s2_43012,cy8cproto_062s3_4343w,cy8ckit_062s4,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="XMC4000,hrpwm,hrc" req_capabilities_v2="xmc4000 ccu8 [kit_xmc_plt2go_xmc4200, kit_xmc_plt2go_xmc4400]">
    <name>HRPWM HRC</name>
    <id>mtb-example-xmc-hrpwm-hrc</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-hrpwm-hrc</uri>
    <description><![CDATA[This example demonstrates how to use HRPWM High Resolution Channel in Infineon's XMC&#8482; 4000 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-hrpwm-hrc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc4000 ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,crypto,random-number,trng,otp" req_capabilities_v2="uart psoc4">
    <name>Cryptography TRNG Demonstration</name>
    <id>mtb-example-psoc4-cryptography-true-random-number-generation</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-cryptography-true-random-number-generation</uri>
    <description><![CDATA[This code example demonstrates generating a One-Time Password (OTP) using the True Random Number generation feature of PSoC&#8482; 4 cryptography block.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-cryptography-true-random-number-generation/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,direction,detection,quadrature decoder,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Direction Detection Using Quadrature Decoder</name>
    <id>mtb-example-psoc4-direction-detection-using-quadrature-decoder</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-direction-detection-using-quadrature-decoder</uri>
    <description><![CDATA[This code example demonstrates how to use the TCPWM peripheral configured as a quadrature decoder in PSoC&#8482; 4.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-direction-detection-using-quadrature-decoder/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,sha,crypto,message digest,hash,mtb-flow" req_capabilities_v2="uart std_crypto psoc4">
    <name>Cryptography SHA Demonstration</name>
    <id>mtb-example-psoc4-cryptography-sha-demonstration</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-cryptography-sha-demonstration</uri>
    <description><![CDATA[This code example shows how to generate a 20-byte hash value or message digest for an arbitrary user input message using the SHA2 algorithm using the Cryptographic hardware block in PSoC&#8482; 4. The example further shows that any change in the message results in a unique hash value for the message. The hash value generated for the message is displayed on a UART terminal emulator.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-cryptography-sha-demonstration/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart std_crypto psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,dual,core,cpu,http,softap,mqtt,client,wifi,virtual,broker" req_capabilities_v2="psoc6 cyw43xxx led capsense_button multi_core wifi flash_2048k">
    <name>Virtual MQTT</name>
    <id>mtb-example-wifi-dual-core-virtual-mqtt-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-dual-core-virtual-mqtt-client</uri>
    <description><![CDATA[This example demonstrates how to connect to an MQTT client using both the local and virtual connectivity APIs on separate cores. The code also shows how developers can enjoy a consistent user experience when using both APIs, as MW libraries handle communication between the cores, eliminating the need for applications to implement IPC for connectivity on the other core. see the <a href="https://github.com/Infineon/mtb-example-wifi-dual-core-virtual-mqtt-client/blob/master/README.md">README on GitHub</a>.
    <br><br>This code example showcases the usage of virtual APIs and teaches developers how to develop dual-core connectivity applications with the connectivity stack running on a single core. For more information on virtualization, see the <a href="https://github.com/Infineon/virtual-connectivity-manager">Virtual Connectivity Manager</a> library.
     <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx led capsense_button multi_core wifi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8cproto_062s2_43439,cy8ckit_062s2_43012,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8cproto_062s2_43439,cy8ckit_062s2_43012,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8cproto_062s2_43439,cy8ckit_062s2_43012,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" tools_max_version="3.0.1" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,flash,polling,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Non-blocking Flash Write Using Polling</name>
    <id>mtb-example-psoc4-non-blocking-flash-write-using-polling</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-non-blocking-flash-write-using-polling</uri>
    <description><![CDATA[This example uses a non-blocking Peripheral Driver Library (PDL) API function to write a flash row. This is done using polling method.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-non-blocking-flash-write-using-polling/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,flash,interrupt,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Non-blocking Flash Write Using Interrupt</name>
    <id>mtb-example-psoc4-non-blocking-flash-write-using-interrupt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-non-blocking-flash-write-using-interrupt</uri>
    <description><![CDATA[This example uses a non-blocking Peripheral Driver Library (PDL) API function to write a flash row. This is done using interrupt method.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-non-blocking-flash-write-using-interrupt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,tcpwm,eventcounter,mtb-flow" req_capabilities_v2="uart psoc4">
    <name>TCPWM event counter</name>
    <id>mtb-example-psoc4-tcpwm-event-counter</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-tcpwm-event-counter</uri>
    <description><![CDATA[The example shows how to use the TCPWM to count a number of external events and display the results over UART.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-tcpwm-event-counter/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,external voltages,LPComp,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Comparing two external voltages using LPComp</name>
    <id>mtb-example-psoc4-comparing-two-external-voltages-using-lpcomp</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-comparing-two-external-voltages-using-lpcomp</uri>
    <description><![CDATA[This code example demonstrates the voltage comparison functionality using the LPComp peripheral in PSoC&#8482; 4.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-comparing-two-external-voltages-using-lpcomp/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,wakeup,deepsleep,low-power,comparator,mtb-flow" req_capabilities_v2="led psoc4">
    <name>Wakeup from deepsleep using Low-Power Comparator</name>
    <id>mtb-example-psoc4-wakeup-from-deepsleep-using-low-power-comparator</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-wakeup-from-deepsleep-using-low-power-comparator</uri>
    <description><![CDATA[This code example demonstrates how low-power comparator (LPComp) is calibrated and how the peripheral generates an interrupt signal. This example also shows how the LPComp peripheral can be operated in low-power modes.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-wakeup-from-deepsleep-using-low-power-comparator/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,segment,lcd,mtb-flow" req_capabilities_v2="switch psoc4">
    <name>Segment LCD</name>
    <id>mtb-example-psoc4-segment-lcd</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-segment-lcd</uri>
    <description><![CDATA[This example project demonstrates the basic operation of the PSoC&#8482; 4 Segment LCD peripheral.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-segment-lcd/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>switch psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="XMC4000,hrpwm,csg" req_capabilities_v2="xmc4000 ccu8 [kit_xmc_plt2go_xmc4200, kit_xmc_plt2go_xmc4400]">
    <name>HRPWM CSG</name>
    <id>mtb-example-xmc-hrpwm-csg</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-hrpwm-csg</uri>
    <description><![CDATA[This example demonstrates how to use HRPWM comparator slope generator (CSG) module in Infineon's XMC&#8482; 4000 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-hrpwm-csg/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc4000 ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,button,sensor,motion,temperature,thermistor,i2c,eink,ble,bluetooth,btstack,freertos,mtb-flow " req_capabilities_v2="psoc6 led bt arduino">
    <name>Bluetooth LE SensorHub</name>
    <id>mtb-example-psoc6-freertos-bt-sensorhub</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-freertos-bt-sensorhub</uri>
    <description><![CDATA[This code example features a Bluetooth&#174; LE custom GATT Server with multiple sensors. The motion sensor and thermistor are interfaced with PSoC&#8482; 6 MCU. The sensor reading is sent to the GATT Client over GATT notification. This project uses the sensors and middleware library; it is developed in the ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-freertos-bt-sensorhub/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,frequency,measurement,tcpwm,mtb-flow" req_capabilities_v2="uart psoc4">
    <name>Frequency measurement using TCPWM</name>
    <id>mtb-example-psoc4-frequency-measurement-using-tcpwm</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-frequency-measurement-using-tcpwm</uri>
    <description><![CDATA[This code example demonstrates how to use the TCPWM peripheral in PSoC&#8482; 4 device to measure the frequency of a periodic digital signal.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-frequency-measurement-using-tcpwm/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="XMC4000,eru,hib,io" req_capabilities_v2="xmc4000 led">
    <name>ERU HIB IO</name>
    <id>mtb-example-xmc-eru-hib-io</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-eru-hib-io</uri>
    <description><![CDATA[This code example demonstrates the routing of the hibernate pin state through the Event Request Unit (ERU) block when powered in hibernate domain for XMC&#8482; MCU devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-eru-hib-io/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc4000 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="posix,freertos,led,mtb-flow" req_capabilities_v2="led qspi uart [psoc6,t2gbe,xmc7000]">
    <name>HAL FreeRTOS-POSIX Demo</name>
    <id>mtb-example-hal-posix-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-posix-freertos</uri>
    <description><![CDATA[This code example demonstrates the usage of FreeRTOS POSIX library for Infineon MCUs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-posix-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led qspi uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,http,https,client,wifi,xmc7000" req_capabilities_v2="led wifi std_crypto [cyw43xxx,cyw55xxx][psoc6,t2gbe, xmc7000] [flash_8384k, flash_2048k,flash_1024k,flash_512k,flash_1856k]">
    <name>Wi-Fi HTTPS Client</name>
    <id>mtb-example-wifi-https-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-wifi-https-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of an HTTPS client with PSoC&#8482; 6 MCU and AIROC&#8482; CYW43xxx connectivity devices. It employs the HTTPS client middleware library, which takes care of all the underlying socket connections with the HTTPS server. This example establishes a secure connection with a HTTPS server through SSL handshake. Once the SSL handshake completes successfully, the HTTPS server can make GET, POST, and PUT requests with the client.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-https-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license.<br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx led wifi std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,led,blinky,mtb-flow" req_capabilities_v2="psoc4 led">
    <name>Blinky</name>
    <id>mtb-example-psoc4-blinky</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-blinky</uri>
    <description><![CDATA[This code example blinks an LED using the PSoC&#8482; 4 device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-blinky/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.1.1 release</num>
        <commit>release-v2.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.1.0 release</num>
        <commit>release-v2.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="multicore,otw,dfu,firmware upgrade,bootloader,mcuboot,edge protect bootloader,mtb-flow" req_capabilities_v2="led uart std_crypto [xmc7000,t2gbh,t2gbh_lite]">
    <name>OTW Firmware Upgrade</name>
    <id>mtb-example-xmc7000-otw-firmware-upgrade</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-xmc7000-otw-firmware-upgrade</uri>
    <description><![CDATA[This example demonstrates a firmware upgrade for the XMC7000 using the edge protect bootloader and DFU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc7000-otw-firmware-upgrade/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>led uart std_crypto</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen5] [kit_xmc72_evk,kit_xmc71_evk_lite_v1,kit_xmc72_evk_mur_43439m2]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="class-b,mtb-flow,psoc4" req_capabilities_v2="psoc4 uart">
    <name>Class-B Safety Test Analog Peripherals</name>
    <id>mtb-example-psoc4-safety-analog-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-safety-analog-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the Analog peripherals like, Comparator, OpAmp, and ADC in the PSoC&#8482; 4 MCU. The example verifies the proper operation and accuracy of these peripherals.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-safety-analog-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>0.1.0 release</num>
        <commit>release-v0.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="class-b,mtb-flow,psoc4" req_capabilities_v2="psoc4 uart">
    <name>Class-B Safety Test Communication Protocol</name>
    <id>mtb-example-psoc4-safety-communication-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-safety-communication-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the Communication Protocol using the PSoC&#8482; 4 MCU. The example conducts a communication test by configuring two SCB instances as UART and connecting their TX and RX pins to the corresponding RX and TX pins of other blocks. The objective is to detect any potential data corruption during transit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-safety-communication-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>0.1.1 release</num>
        <commit>release-v0.1.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>0.1.0 release</num>
        <commit>release-v0.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="class-b,mtb-flow,psoc4" req_capabilities_v2="psoc4 uart">
    <name>Class-B Safety Test Core Peripherals</name>
    <id>mtb-example-psoc4-safety-core-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-safety-core-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the core peripherals of the PSoC&#8482; 4 MCU, which are critical for ensuring safety. The example includes tests such as CPU registers, Program Counter, WDT, clock, interrupt, Input/Output, Flash (Fletcher's test + CRC test), and config registers.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-safety-core-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>0.1.0 release</num>
        <commit>release-v0.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="class-b,mtb-flow,psoc4" req_capabilities_v2="psoc4 i2c uart">
    <name>Class-B Safety Test I2C</name>
    <id>mtb-example-psoc4-safety-i2c-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-safety-i2c-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the I2C interface in the PSoC&#8482; 4 MCU. The example tests the I2C interface by configuring one SCB instance as an I2C master and another SCB instance as an I2C slave. It then verifies the communication between the two SCB blocks by connecting external jumper wires between these two SCB blocks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-safety-i2c-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 i2c uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>0.1.0 release</num>
        <commit>release-v0.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="class-b,mtb-flow,psoc4" req_capabilities_v2="psoc4 uart spi">
    <name>Class-B Safety Test SPI Loopback</name>
    <id>mtb-example-psoc4-safety-spi-loopback-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-safety-spi-loopback-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the SPI loopback in the PSoC&#8482; 4 MCU. The example performs the SPI loopback test by configuring one SCB instance as SPI master and connecting its MOSI and MISO pins internally using Smart-IO.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-safety-spi-loopback-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 uart spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>0.1.0 release</num>
        <commit>release-v0.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="class-b,mtb-flow,psoc4" req_capabilities_v2="psoc4 uart">
    <name>Class-B Safety Test UART Loopback</name>
    <id>mtb-example-psoc4-safety-uart-loopback-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-safety-uart-loopback-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the UART loopback Test in the PSoC&#8482; 4 MCU. The example performs the UART loopback test by configuring one SCB instance as UART and connecting its TX and RX pins internally using Smart-IO.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-safety-uart-loopback-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>0.1.0 release</num>
        <commit>release-v0.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pairing,mtb-flow,bluetooth,button" req_capabilities_v2="bt led">
    <name>Bluetooth LE Hello Client</name>
    <id>mtb-example-btstack-freertos-hello-client</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-hello-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of Bluetooth&#174; LE multi role applications using AIROC&#8482; CYW20829, PSoC&#8482; 6 , and ModusToolbox&#8482; software.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-hello-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5] [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cyw989829m2evb_01]">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,led,button,sensor,temperature,thermistor,i2c,eink,ble,bluetooth,btstack,freertos,mtb-flow " req_capabilities_v2="psoc6 led bt arduino switch">
    <name>Bluetooth LE UI demo</name>
    <id>mtb-example-psoc6-freertos-bluetooth-ui-demo</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-freertos-bluetooth-ui-demo</uri>
    <description><![CDATA[This code example features a Bluetooth&#174; LE custom GATT service with UI experience for an E-INK display along with sensors and RGB LED. The sensor readings are sent to the GATT Client over GATT indication. This RGB LED is controlled over a GATT Client application; it is developed in the ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-freertos-bluetooth-ui-demo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_ble]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,usb,mtb-flow,hid,generic,emUSB-Device" req_capabilities_v2="xmc4000 usb_device">
    <name>emUSB-Device HID Generic</name>
    <id>mtb-example-xmc-usb-device-hid-generic</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-usb-device-hid-generic</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a XMC&#8482; 4000 MCU as a Human Interface Device (HID) using Segger's emUSB-Device middleware. The device enumerates as a Generic HID device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-usb-device-hid-generic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>usb_device</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="multi-peripheral,mtb-flow,bluetooth,btstack,freertos,gatt,server" req_capabilities_v2="bt led [cyw20829, psoc6]">
    <name>Bluetooth LE Multi-peripheral</name>
    <id>mtb-example-btstack-freertos-multi-peripheral</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-multi-peripheral</uri>
    <description><![CDATA[This code example demonstrates the implementation of multi-peripheral functionality using PSoC&#8482; 6 MCU with Bluetooth&#174; Low Energy, AIROC&#8482; CYW20829, and ModusToolbox&#8482; software environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-multi-peripheral/blob/master/README.md">README on GitHub</a>.]]></description>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cyble_416045_eval]">
        <num>Latest 3.X release</num>
        <commit>latest-v3.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cyble_416045_eval]">
        <num>3.0.0 release</num>
        <commit>release-v3.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cyble_416045_eval]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cyble_416045_eval]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cyble_416045_eval]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [cyw920829m2evk_02,cy8ckit_062_ble,cyble_416045_eval]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cyw20829,uart,dma,mtb-flow" req_capabilities_v2="hal uart [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>UART DMA</name>
    <id>mtb-example-hal-uart-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-hal-uart-dma</uri>
    <description><![CDATA[This code example demonstrates the UART transmit and receive operation in CYW20829 MCU using DMA . This example uses the loop back for UART to show the transmit and receive.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-uart-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>hal uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="XMC4000,XMC1000,vadc,ccu8,triggered" req_capabilities_v2="[xmc4000,xmc1000] led adc ccu8">
    <name>CCU8 TRIGGERED VADC MEASUREMENT</name>
    <id>mtb-example-xmc-ccu8-triggered-vadc-measurement</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-ccu8-triggered-vadc-measurement</uri>
    <description><![CDATA[This example demonstrates how to use CCU8 to trigger VADC in Infineon's XMC&#8482; 1000/4000 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-ccu8-triggered-vadc-measurement/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc4000 XMC1000 vadc ccu8</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc14_boot_001,kit_xmc_plt2go_xmc4200,kit_xmc43_relax_ecat_v1,kit_xmc_plt2go_xmc4400,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,mtb-flow,freertos,voice,dual cpu" req_capabilities_v2="psoc6 multi_core [cy8ceval_062s2]">
    <name>Dual CPU Cyberon</name>
    <id>mtb-example-psoc6-dual-cpu-cyberon-freertos</id>
    <category>Machine Learning</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-dual-cpu-cyberon-freertos</uri>
    <description><![CDATA[This code example shows how to use the dual CPU architecture of the PSoC&#8482; 6 MCU to implement a keyword spotting and command processing application.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-cyberon-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 multi_core</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,emusb,usb,uart,emusb-Device,mtb-flow" req_capabilities_v2="[psoc6,t2gbe] [flash_2048k,flash_1024k]">
    <name>emusb-Device Quad USB to UART bridge</name>
    <id>mtb-example-usb-device-quad-uart-bridge</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-usb-device-quad-uart-bridge</uri>
    <description><![CDATA[This sample program showcases the implementation of the USB Bulk device class to create four USB-UART bridges utilizing PSoC&#8482; 6 MCU. Upon enumeration, the program presents itself as four Bulk interfaces on a PC. Each UART corresponds to a Bulk interface (for example, UART0 mapped to Bulk Interface 0). Any data transmitted via the Bulk interface will be seen on the corresponding UART port TX pin, while any data received through the MCU's UART RX pin will be seen on the corresponding Bulk Interface..
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-usb-device-quad-uart-bridge/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ckit_062_wifi_bt,cy8ckit_062s2_43012,cy8cproto_062_4343w,cyw9p62s1_43438evb_01,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,proximity,tuner,led,i2c,mtb-flow" req_capabilities_v2="psoc4 capsense">
    <name>PSoC 4 CAPSENSE Proximity Sensing</name>
    <id>mtb-example-psoc4-capsense-proximity-sensing</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-proximity-sensing</uri>
    <description><![CDATA[This code example demonstrates a CAPSENSE&#8482; based proximity sensing design to control the brightness of an onboard LED. It helps to learn how to design a proximity sensor using a PSoC&#8482; 4 device, and see how an approaching hand controls the intensity of an onboard LED. It employs the CAPSENSE&#8482; auto-tuning ability, SmartSense, to tune the proximity sensor for any wire or trace length.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-proximity-sensing/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_045s,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_045s,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041_41xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,grapghics,display,lvgl,tft,mtb-flow" req_capabilities_v2="arduino psoc6 [flash_2048k,flash_1024k]">
    <name>LVGL Demo</name>
    <id>mtb-example-lvgl-demo</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-lvgl-demo</uri>
    <description><![CDATA[This code example demonstrates displaying a 2D graphics demo on a TFT display using the Light and Versatile Graphics Library (LVGL). The 2D graphics displays a music player application, which is listed as one of the standard demo on the LVGL page.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-lvgl-demo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 arduino</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062_wifi_bt,cy8ckit_062_ble,cyw9p62s1_43438evb_01,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ckit_064b0s2_4343w,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_mur_4373em2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,machine-learning,ml,bmx160,bmi160,bmi270,pdm,bmm350,dps,dps3xx,xensiv,radar,presence,csk,imagimob,mtb-flow" req_capabilities_v2="psoc6 spi i2c pdm">
    <name>Machine Learning Imagimob Data Collection</name>
    <id>mtb-example-ml-imagimob-data-collection</id>
    <category>Machine Learning</category>
    <uri>https://github.com/Infineon/mtb-example-ml-imagimob-data-collection</uri>
    <description><![CDATA[This code example demonstrates how to collect data using Imagimob's Capture Server to train a model with in Imagimob Studio. The code example supports collecting data from five different sources, data can be collected from an IMU (BMI160/BMI270) or from a digital microphone using PDM-PCM or magnetometer (BMM2350) or pressure sensor or Radar sensor.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ml-imagimob-data-collection/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 spi i2c pdm</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8ckit_062s2_ai]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8ckit_062s2_ai]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,machine-learning,ml,bmx160,bmi160,bmi270,pdm,imagimob,mtb-flow" req_capabilities_v2="psoc6 spi i2c pdm">
    <name>Machine Learning Imagimob MTBML Deploy</name>
    <id>mtb-example-ml-imagimob-mtbml-deploy</id>
    <category>Machine Learning</category>
    <uri>https://github.com/Infineon/mtb-example-ml-imagimob-mtbml-deploy</uri>
    <description><![CDATA[This code example demonstrates how to deploy an Imagimob generated machine learning model with the ModusToolbox&#8482; Machine Learning (MTBML) flow. The code example includes two models that are generated from Imagimob Studio's starter projects.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ml-imagimob-mtbml-deploy/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 spi i2c pdm</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8ckit_062s2_ai]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8ckit_062s2_ai]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012]">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc6,machine-learning,ml,imagimob,bmx160,bmi160,bmi270,motion sensor,mtb-flow" req_capabilities_v2="psoc6 spi i2c">
    <name>Machine Learning Imagimob Deploy</name>
    <id>mtb-example-ml-imagimob-deploy</id>
    <category>Machine Learning</category>
    <uri>https://github.com/Infineon/mtb-example-ml-imagimob-deploy</uri>
    <description><![CDATA[This code example demonstrates how to deploy an Imagimob generated machine learning model. It comes pre-configured with a model generated from the Human Activity Detection starter project in Imagimob Studio. The code example collects accelerometer data from an IMU which is then sent to the machine learning model to detect specific motions (sitting, standing, walking, running, or jumping). It uses the model.c/h files generated from within Imagimob Studio directly. New models based on the Human Activity Detection project can be dropped into the project as-is.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ml-imagimob-deploy/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 spi i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8ckit_062s2_ai]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8ckit_062s2_ai]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_43012,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cyw9p62s1_43438evb_01,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ckit_064b0s2_4343w,cy8ckit_064s0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,pipeline scan,mtb-flow" req_capabilities_v2="psoc4 led capsense">
    <name>CAPSENSE Pipeline scan and process</name>
    <id>mtb-example-psoc4-capsense-pipeline-scan-and-process</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-pipeline-scan-and-process</uri>
    <description><![CDATA[This code example demonstrates how to implement pipeline scanning in CAPSENSE&#8482; to improve performance. When a particular widget is being processed, the next widget in line can be scanned in parallel, and the device remains in Deep Sleep mode until the scan is complete. The WDT (Watchdog Timer) is used to wake up the device periodically from Deep Sleep mode. This is better than the traditional method of scanning all the widgets and then processing the scanned data later. This reduces the sensor scan time and minimizes power consumption.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-pipeline-scan-and-process/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,smartsense,buttons,slider,mtb-flow" req_capabilities_v2="psoc4 capsense">
    <name>CAPSENSE SmartSense buttons slider</name>
    <id>mtb-example-psoc4-capsense-smartsense-buttons-slider</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-smartsense-buttons-slider</uri>
    <description><![CDATA[This code example demonstrates how to tune self-capacitance (CSD)-based buttons and slider widgets with SmartSense in PSoC&#8482; 4 devices using the CAPSENSE&#8482; tuner.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-smartsense-buttons-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,multi-frequency,mtb-flow" req_capabilities_v2="capsense led psoc4">
    <name>CAPSENSE Multi-frequency Scan</name>
    <id>mtb-example-psoc4-capsense-multi-frequency-scan</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-multi-frequency-scan</uri>
    <description><![CDATA[This example demonstrates the use of the Multi-Frequency Scan (MFS) for PSoC&#8482; 4 CAPSENSE&#8482; applications to prevent false touch detection in the presence of external noise. This code example demonstrates this feature for both CSD (self-capacitance) and CSX (mutual-capacitance) designs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-multi-frequency-scan/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>capsense led psoc4</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,liquid-tolerant,proximity,mtb-flow" req_capabilities_v2="psoc4 led capsense">
    <name>CAPSENSE Liquid tolerant proximity</name>
    <id>mtb-example-psoc4-capsense-liquid-tolerant-proximity</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-liquid-tolerant-proximity</uri>
    <description><![CDATA[This code example demonstrates to tune the proximity sensors on CY8CKIT-024 proximity shield for liquid tolerance. This code example is tuned for a proximity-sensing distance of 3 cm with liquid tolerance. The proximity of the user hand is indicated by turning ON the LEDs (LED1-LED5).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-liquid-tolerant-proximity/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,touchpad,proximity,gestures,liquid-tolerant,mtb-flow" req_capabilities_v2="psoc4 uart led capsense">
    <name>MSC CAPSENSE Liquid tolerant touchpad</name>
    <id>mtb-example-psoc4-msc-capsense-liquid-tolerant-touchpad</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msc-capsense-liquid-tolerant-touchpad</uri>
    <description><![CDATA[This code example demonstrates how to use the CAPSENSE&#8482; middleware to detect a finger touch position with gestures on a self-capacitance-based touchpad widget in PSoC&#8482; 4 devices with multi sense converter (MSC).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msc-capsense-liquid-tolerant-touchpad/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 uart led capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,liquid-tolerant,buttons,hybrid,mtb-flow" req_capabilities_v2="psoc4 led capsense">
    <name>CAPSENSE liquid-tolerant hybrid scan</name>
    <id>mtb-example-psoc4-capsense-liquid-tolerant-hybrid-scan</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-liquid-tolerant-hybrid-scan</uri>
    <description><![CDATA[This code example demonstrates the self-capacitance scanning technique to implement liquid tolerance on mutual-cap sensors.
    <br>CAPSENSE&#8482; senses the self-capacitance of Tx and Rx nodes of a mutual-capacitance sensor. This ability of scanning the sensor using both self-capacitance (CSD) and mutual-capacitance (CSX) sensing modes is used to avoid false triggers due to the presence of liquid drops on a mutual-capacitance sensor.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-liquid-tolerant-hybrid-scan/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s,cy8cproto_040t]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,proximity,gestures,mtb-flow" req_capabilities_v2="psoc4 led capsense">
    <name>CAPSENSE proximity gestures</name>
    <id>mtb-example-psoc4-capsense-proximity-gestures</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-proximity-gestures</uri>
    <description><![CDATA[This code example demonstrate how to detect swipe gestures in the X-axis and Y-axis using the proximity sensors on CY8CKIT-024 using the PSoC&#8482; 4 device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-proximity-gestures/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,rtt,buttons,slider,mtb-flow" req_capabilities_v2="psoc4 led capsense">
    <name>CAPSENSE Buttons and Slider RTT</name>
    <id>mtb-example-psoc4-capsense-buttons-and-slider-rtt</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-buttons-and-slider-rtt</uri>
    <description><![CDATA[This code example demonstrates how to monitor self-capacitance (CSD) based buttons and slider widgets using the CAPSENSE&#8482; tuner through RTT in PSoC&#8482; 4 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-buttons-and-slider-rtt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx,cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_149,cy8ckit_145_40xx]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,tester,wifi,tool,unified,manufacturing">
    <name>Tester - WiFi unified application</name>
    <id>mtb-tester-wifi-unified-app</id>
    <category>Manufacturing</category>
    <uri>https://github.com/Infineon/mtb-tester-wifi-unified-app</uri>
    <description><![CDATA[This Tester is Wi-Fi integrated tools for cert, wifi, wl commands and lpa&#174; Firmware and RF performance for PSoC&#8482; 6 MCU with CYW4373 connectivity device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-tester-wifi-unified-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 wifi cyw4373</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="spi,cyw20829,dma,slave,mtb-flow" req_capabilities_v2="spi [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>SPI Slave DMA</name>
    <id>mtb-example-cyw20829-spi-slave-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw20829-spi-slave-dma</uri>
    <description><![CDATA[This example demonstrates the use of the SPI Serial Communication Block (SCB) resource for CYW20829&trade; MCU in slave mode using DMA. The SPI slave will toggle the LED on the command received by the master.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw20829-spi-slave-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>spi cat1b bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="spi,cyw20829,dma,master,mtb-flow" req_capabilities_v2="spi [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>SPI Master DMA</name>
    <id>mtb-example-cyw20829-spi-master-dma</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw20829-spi-master-dma</uri>
    <description><![CDATA[This example demonstrates the use of the SPI Serial Communication Block (SCB) resource for CYW20829&trade; MCU in master mode using DMA. The SPI master is configured to send command packets to control a user LED on the slave.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw20829-spi-master-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>spi cat1b bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,csx,button,slider,low-power,wot,tuning,mtb-flow" req_capabilities_v2="psoc4 msclp led i2c low_power msc_button msc_slider">
    <name>CY8CPROTO-040T Demo</name>
    <id>mtb-example-cy8cproto-040t-demo</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-cy8cproto-040t-demo</uri>
    <description><![CDATA[This example demonstrates the CAPSENSE&#8482; features of the PSoC&#8482; 4000T device on the CY8CPROTO-040T Kit including recommended power states and transitions, tuning parameter adjustments, and the method of tuning of a MSCLP self capacitance (CSD)-based button and slider widgets and a MSCLP mutual capacitance (CSX)-based button widget for low power operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cy8cproto-040t-demo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp led i2c low_power msc_button msc_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,slider,low-power,wot,tuning,mtb-flow" req_capabilities_v2="psoc4 msclp led i2c low_power msc_slider">
    <name>MSCLP Low Power CSD Slider</name>
    <id>mtb-example-psoc4-msclp-low-power-csd-slider</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csd-slider</uri>
    <description><![CDATA[This code example shows how to manually tune a MSCLP self capacitance (CSD)-based slider widget in PSoC&#8482; 4000T device for low power operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csd-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp led i2c low_power msc_slider</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,msclp,capsense,csd,proximity,tuning,self capacitance,low-power,wake on touch,always on,touch,range,wot,led,tune,ratiometric,distance,detection,hover" req_capabilities_v2="psoc4 msclp led i2c low_power msc_proximity">
    <name>MSCLP Low Power Proximity</name>
    <id>mtb-example-psoc4-msclp-low-power-csd-proximity</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csd-proximity</uri>
    <description><![CDATA[This code example shows how to manually tune a proximity widget in PSoC&#8482; 4000T device for low power operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csd-proximity/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp led i2c low_power msc_proximity</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="msclp, csd, button, tuning, self capacitance, self-cap, self, psoc 4000T, psoc4, capsense, low power, wot ,mtb-flow" req_capabilities_v2="psoc4 msclp led low_power msc_button i2c">
    <name>MSCLP Low Power CSD Button</name>
    <id>mtb-example-psoc4-msclp-low-power-csd-button</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csd-button</uri>
    <description><![CDATA[This code example shows how to manually tune a MSCLP self capacitance (CSD)-based button widget in PSoC&#8482; 4000T device for low power operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csd-button/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp led low_power msc_button i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="msclp, csx, button, tuning, mutual capacitance, mutual-cap, mutual, psoc 4000T, psoc4, capsense, low power, wot ,mtb-flow" req_capabilities_v2="psoc4 msclp led low_power msc_button i2c">
    <name>MSCLP Low power CSX button</name>
    <id>mtb-example-psoc4-msclp-low-power-csx-button</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csx-button</uri>
    <description><![CDATA[This code example shows how to manually tune a MSCLP mutual capacitance (CSX)-based button widget in PSoC&#8482; 4000T device for low power operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csx-button/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp led low_power msc_button i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="msclp, csx, slider, tuning, mutual capacitance, mutual-cap, mutual, psoc 4000T, psoc4, capsense, low power, wot, mtb-flow" req_capabilities_v2="psoc4 msclp led low_power msc_slider i2c">
    <name>MSCLP Low power CSX slider</name>
    <id>mtb-example-psoc4-msclp-low-power-csx-slider</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csx-slider</uri>
    <description><![CDATA[This code example shows how to manually tune a MSCLP mutual capacitance (CSX)-based slider widget in PSoC&#8482; 4000T device for low power operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-msclp-low-power-csx-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 msclp led low_power msc_slider i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_040t]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,liquid level sensing,tuner,uart,ezi2c,mtb-flow" req_capabilities_v2="psoc4 capsense">
    <name>PSoC 4 CAPSENSE liquid-level sensing</name>
    <id>mtb-example-psoc4-capsense-liquid-level-sensing</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-liquid-level-sensing</uri>
    <description><![CDATA[This code example demonstrates how to use PSoC&#8482; 4 MCU, CAPSENSE&#8482; technology, and capacitive sensors to measure the depth or presence of water-based liquids in non-conductive containers. Sensors located on or near the containers exterior provide real-time reporting of liquid levels. There are multiple options available that use low-cost materials to construct and integrate the sensors, while continuing to provide high-precision measurements.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-liquid-level-sensing/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_045s]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_045s]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_045s]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc4,capsense,low power,tuner,led,uart,i2c,mtb-flow" req_capabilities_v2="psoc4 capsense">
    <name>PSoC 4 CAPSENSE low-power</name>
    <id>mtb-example-psoc4-capsense-low-power</id>
    <category>Sensing</category>
    <uri>https://github.com/Infineon/mtb-example-psoc4-capsense-low-power</uri>
    <description><![CDATA[This code example demonstrates an implementation of a low-power CAPSENSE&#8482; design using the PSoC&#8482; 4 MCU. This example features the CAPSENSE&#8482; slider and the buttons. It scans all the widgets and then processes the scanned data. Here the device is put into Deep Sleep in idle mode and the WDT is used to wake up the device from the Deep Sleep mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-low-power/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 capsense</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_045s,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041s_max]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_045s,cy8ckit_149,cy8ckit_145_40xx,cy8ckit_041s_max]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="psoc64,tf-m,freertos" req_capabilities_v2="psoc6 secure_boot">
    <name>Trusted Firmware-M services</name>
    <id>mtb-example-psoc6-tfm-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-psoc6-tfm-freertos</uri>
    <description><![CDATA[This code example demonstrates how to use Trusted Firmware-M (TF-M) services on PSoC&#8482; 64 with PSA APIs. TF-M executes on Cortex&#174; M0+ CPU (Secure Processing Environment - SPE) and the user application executes on Cortex&#174; M4 CPU (Non-Secure Processing Environment - NSPE).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-tfm-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 secure_boot</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_064b0s2_4343w]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,spi,trigger,event" req_capabilities_v2="xmc led spi">
    <name>SPI EXTTRG transmit</name>
    <id>mtb-example-xmc-spi-external-trigger-transmit</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-spi-external-trigger-transmit</uri>
    <description><![CDATA[This example demonstrates the transfer of three bytes of data using the SPI master triggered by an external event or a timer-based event in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-spi-external-trigger-transmit/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc led spi</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc43_relax_ecat_v1,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc43_relax_ecat_v1,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,vadc,emux" req_capabilities_v2="xmc adc">
    <name>VADC EMUX</name>
    <id>mtb-example-xmc-vadc-emux</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-vadc-emux</uri>
    <description><![CDATA[This code example demonstrates the VADC capability to drive a external multiplexer automatically by emux output pins in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-vadc-emux/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc adc</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc43_relax_ecat_v1,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1,kit_xmc_plt2go_xmc4200,kit_xmc_plt2go_xmc4400]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc43_relax_ecat_v1,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1,kit_xmc_plt2go_xmc4200,kit_xmc_plt2go_xmc4400]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001,kit_xmc43_relax_ecat_v1,kit_xmc45_relax_v1,kit_xmc47_relax_v1,kit_xmc48_relax_ecat_v1,kit_xmc_plt2go_xmc4200,kit_xmc_plt2go_xmc4400]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="periodic adv, externed adv" req_capabilities_v2="[cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE Periodic Adv</name>
    <id>mtb-example-btstack-freertos-le-periodic-adv</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-periodic-adv</uri>
    <description><![CDATA[This code example demonstrates the use of LE Periodic ADV with Infineon AIROC&#8482; CYW20829 Bluetooth&#174; devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-periodic-adv/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="periodic sync" req_capabilities_v2="[cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE Periodic Sync</name>
    <id>mtb-example-btstack-freertos-le-periodic-sync</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-periodic-sync</uri>
    <description><![CDATA[This code example demonstrates the use of Periodic Sync to ADV with Infineon AIROC&#8482; CYW20829 Bluetooth&#174; devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-periodic-sync/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pawr client" req_capabilities_v2="[cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE PAwR Client</name>
    <id>mtb-example-btstack-freertos-le-pawr-client</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-pawr-client</uri>
    <description><![CDATA[This code example demonstrates a PAwR central implementation to establish synchronization with a PAwR peripheral.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-pawr-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="pawr server" req_capabilities_v2="[cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE PAwR Server</name>
    <id>mtb-example-btstack-freertos-le-pawr-server</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-pawr-server</uri>
    <description><![CDATA[This code example demonstrates a PAwR peripheral implementation to establish synchronization with a PAwR central.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-pawr-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btstack,freertos,battery,bluetooth,button" req_capabilities_v2="bt [cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>Bluetooth LE Battery Server with OTA</name>
    <id>mtb-example-btstack-freertos-cyw20829-battery-server-ota</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-battery-server-ota</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; Battery Service. The Battery Service exposes the battery level of the device and supports over-the-air (OTA) update over a Bluetooth&#174; Low Energy connection. The app downloads and writes the image to the secondary slot. On the next reboot, MCUboot copies the new image over to the primary slot and runs the application. If the new image is not validated in run time, on the next reboot, MCUboot reverts to the previously validated image.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-battery-server-ota/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5,bsp_gen4">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5,bsp_gen4">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btstack,freertos,power,bluetooth,button,lowpower,powermodes" req_capabilities_v2="bt [cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>Bluetooth LE Low Power Demo</name>
    <id>mtb-example-btstack-freertos-cyw20829-switching-power-modes</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-switching-power-modes</uri>
    <description><![CDATA[This code example shows how to enter device from Active to Sleep, Active to DeepSleep, Active to DeepSleep-RAM and  Active to Hibernate power modes.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cyw20829-switching-power-modes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="power,button,lowpower,powermodes" req_capabilities_v2="bt [cyw920829m2evk_02,cyw989829m2evb_01]">
    <name>Switching Power Modes</name>
    <id>mtb-example-cyw20829-switching-power-modes</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw20829-switching-power-modes</uri>
    <description><![CDATA[This code example shows how the device can operate in low-power and ultra low-power system modes and also transit from Active to Sleep, Active to DeepSleep, Active to DeepSleep-RAM and  Active to Hibernate power modes.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw20829-switching-power-modes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btstack,freertos,power,bluetooth,throughput" req_capabilities_v2="bt [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE GATT Throughput Client</name>
    <id>mtb-example-btstack-freertos-throughput-client</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-throughput-client</uri>
    <description><![CDATA[This code example demonstrates the maximum throughput (using GATT layer notification and GATT write command) that can be achieved with Infineon PSoC&#8482; 6 MCU with AIROC&#8482; Bluetooth&#174; LE and AIROC&#8482; CYW20829 Bluetooth&#174; LE SoC devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-throughput-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btstack,freertos,power,bluetooth,throughput" req_capabilities_v2="bt [cyw920829m2evk_02,cyw989829m2evb_01,cyw989829m2evb_03]">
    <name>Bluetooth LE GATT Throughput Server</name>
    <id>mtb-example-btstack-freertos-throughput-server</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-throughput-server</uri>
    <description><![CDATA[This code example demonstrates the maximum throughput (using GATT layer notification and GATT write command) that can be achieved with Infineon PSoC&#8482; 6 MCU with AIROC&#8482; Bluetooth&#174; LE and AIROC&#8482; CYW20829 Bluetooth&#174; LE SoC devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-throughput-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version_v2="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btstack,freertos" req_capabilities_v2="[cyw989829m2evb_01]">
    <name>Bluetooth LE ccc scan</name>
    <id>mtb-example-btstack-freertos-le-ccc-scan</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-ccc-scan</uri>
    <description><![CDATA[This code example demonstrates a ccc scan implementation scan find ccc adv.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-ccc-scan/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="btstack,freertos" req_capabilities_v2="[cyw989829m2evb_01]">
    <name>Bluetooth LE ccc adv</name>
    <id>mtb-example-btstack-freertos-le-ccc-adv</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-ccc-adv</uri>
    <description><![CDATA[This code example demonstrates a ccc adv implementation send adv.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-ccc-adv/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="ezi2c,master,slave,mtb-flow" req_capabilities_v2="[cyw920829m2evk_02]">
    <name>EzI2C Deep Sleep</name>
    <id>mtb-example-cyw20829-ezi2c-deepsleep</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw20829-ezi2c-deepsleep</uri>
    <description><![CDATA[This code example demonstrates the operation of the EzI2C resource in Deep Sleep mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw20829-ezi2c-deepsleep/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cyw20829</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="cryptolite,aes,key,mtb-flow" req_capabilities_v2="[cyw920829m2evk_02]">
    <name>Cryptolite</name>
    <id>mtb-example-cyw20829-cryptolite</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-cyw20829-cryptolite</uri>
    <description><![CDATA[This code example demonstrates the implementation of Cryptolite AES algorithm and how to encrypt and decrypt data using the CTR and CFB modes.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-cyw20829-cryptolite/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>cyw20829</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc,prng" req_capabilities_v2="[kit_xmc11_boot_001,kit_xmc12_boot_001,kit_xmc13_boot_001,kit_xmc14_boot_001]">
    <name>PRNG</name>
    <id>mtb-example-xmc-prng</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-prng</uri>
    <description><![CDATA[This code example demonstrates how to generate a random number of length 10 with the pseudo random number generation feature in XMC&#8482; MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-prng/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc1000 uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc4000,xmc1000,dpcc,buck converter,pccm" req_capabilities_v2="buck_converter">
    <name>PCCM buck converter</name>
    <id>mtb-example-xmc-pccm-buck-single</id>
    <category>Power Conversion</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-pccm-buck-single</uri>
    <description><![CDATA[This example demonstrates peak current control mode buck power stage converter capabilities of Infineon's XMC&#8482; 1000/4000 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-pccm-buck-single/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>buck_converter</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [buck_converter] [kit_xmc13_dpcc_v1, kit_xmc42_dpcc_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [buck_converter] [kit_xmc13_dpcc_v1, kit_xmc42_dpcc_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc4000,xmc1000,dpcc,buck converter,vcm" req_capabilities_v2="buck_converter">
    <name>VCM buck converter</name>
    <id>mtb-example-xmc-vcm-buck-single</id>
    <category>Power Conversion</category>
    <uri>https://github.com/Infineon/mtb-example-xmc-vcm-buck-single</uri>
    <description><![CDATA[This example demonstrates voltage control mode buck power stage converter capabilities of Infineon's XMC&#8482; 1000/4000 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc-vcm-buck-single/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>buck_converter</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [buck_converter] [kit_xmc13_dpcc_v1, kit_xmc42_dpcc_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [buck_converter] [kit_xmc13_dpcc_v1, kit_xmc42_dpcc_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,timer" req_capabilities_v2="uart [psoc6, xmc7000]">
    <name>Class-B Communication protocol</name>
    <id>mtb-example-ce239682-safety-communication-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce239682-safety-communication-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the communication protocol in embedded systems. The example conducts a communication test by configuring two SCB instances as UART and connecting their TX and RX pins to the corresponding RX and TX pins of other blocks. The objective is to detect any potential data corruption during transit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce239682-safety-communication-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,smartio" req_capabilities_v2="uart smart_io [psoc6, xmc7000]">
    <name>Class-B UART loopback</name>
    <id>mtb-example-ce239717-safety-uart-loopback-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce239717-safety-uart-loopback-test</uri>
    <description><![CDATA[This code example demonstrates the use of Class-B Safety Test Library to test the UART loopback test. The example performs the UART loopback test by configuring one SCB instance as UART and connecting its TX and RX pins internally using Smart I/O.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce239717-safety-uart-loopback-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart smart_io</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4][cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4][cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ckit_064b0s2_4343w,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,timer,flash,sram,cpu,wdt" req_capabilities_v2="uart [psoc6, xmc7000]">
    <name>Class-B Core peripherals</name>
    <id>mtb-example-ce239718-safety-core-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce239718-safety-core-test</uri>
    <description><![CDATA[This code example demonstrates the use of class-B Safety Test Library to test the core peripherals of the MCU, which are critical for ensuring safety. The example includes tests such as CPU Registers, Program Counter, WDT, clock, interrupt, IO, flash (Fletcher's test + CRC test), SRAM, stack and config Registers.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce239718-safety-core-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 2.X release</num>
        <commit>latest-v2.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>2.0.0 release</num>
        <commit>release-v2.0.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,timer,tcpwm,pwm,counter" req_capabilities_v2="uart [psoc6, xmc7000]">
    <name>Class-B TCPWM peripheral</name>
    <id>mtb-example-ce240064-safety-tcpwm-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce240064-safety-tcpwm-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the TCPWM resource configured as a timer/counter, PWM, and PWM output Gate Kill.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce240064-safety-tcpwm-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,adc,lpcomp,opamp" req_capabilities_v2="uart [psoc6, xmc7000]">
    <name>Class-B Analog peripherals</name>
    <id>mtb-example-ce240063-safety-analog-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce240063-safety-analog-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the analog peripherals such as, comparator, opamp, and ADC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce240063-safety-analog-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,stack,freertos" req_capabilities_v2="uart [psoc6, xmc7000]">
    <name>Class-B Stack test FreeRTOS</name>
    <id>mtb-example-ce240065-safety-stack-test-freertos</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce240065-safety-stack-test-freertos</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the stack overflow and stack underflow in a FreeRTOS environment.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce240065-safety-stack-test-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,i2c" req_capabilities_v2="uart i2c [psoc6, xmc7000]">
    <name>Class-B I2C peripheral</name>
    <id>mtb-example-ce239833-safety-i2c-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce239833-safety-i2c-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B Safety Test Library to test the I2C interface. The example tests the I2C interface by configuring one SCB instance as an I2C master and another SCB instance as an I2C slave. It then verifies the communication between the two Serial Communication Blocks (SCBs) by connecting external jumper wires between these two SCB blocks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce239833-safety-i2c-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart i2c</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,canfd" req_capabilities_v2="uart can [psoc6, xmc7000]">
    <name>Class-B CAN FD loopback</name>
    <id>mtb-example-ce239999-safety-canfd-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce239999-safety-canfd-test</uri>
    <description><![CDATA[This code example demonstrates proper message filtering and reception functionality in CAN FD using loopback mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce239999-safety-canfd-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart can</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062s4,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062s4,kit_xmc71_evk_lite_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,xmc7000,class-b,uart,spi,smartio" req_capabilities_v2="uart smart_io spi [psoc6, xmc7000]">
    <name>Class-B SPI loopback</name>
    <id>mtb-example-ce239832-safety-spi-loopback-test</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-ce239832-safety-spi-loopback-test</uri>
    <description><![CDATA[This code example demonstrates the use of the Class-B safety test library to test the SPI loopback test.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ce239832-safety-spi-loopback-test/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart spi smart_io</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen5,bsp_gen4] [cy8cproto_062s2_43439,cy8cproto_062_4343w,cy8ckit_062s2_43012,cy8ceval_062s2,cy8ceval_062s2_lai_4373m2,cy8ceval_062s2_mur_43439m2,cy8ceval_062s2_lai_43439m2,cy8ceval_062s2_mur_4373em2,cy8ceval_062s2_mur_4373m2,cy8ceval_062s2_cyw43022cub,cy8cproto_062s3_4343w,kit_xmc72_evk,kit_xmc72_evk_mur_43439m2,cy8ckit_062_ble,cy8ckit_062_wifi_bt,cy8cproto_063_ble,cy8ckit_062s4,cyw9p62s1_43012evb_01,cyw9p62s1_43438evb_01,cy8ckit_064b0s2_4343w,kit_xmc71_evk_lite_v1]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psoc6,machine-learning,ml,bmx160,bmi270,pdm,imagimob" req_capabilities_v2="uart spi i2c pdm psoc6">
    <name>Imagimob Streaming Protocol</name>
    <id>mtb-example-imagimob-streaming-protocol</id>
    <category>Machine Learning</category>
    <uri>https://github.com/Infineon/mtb-example-imagimob-streaming-protocol</uri>
    <description><![CDATA[This code example allows collecting data from either an IMU (BMX160/BMI270) or PDM-PCM mic using the Imagimob Studio.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-imagimob-streaming-protocol/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>uart spi i2c pdm psoc6</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_ai,cy8ckit_062s2_43012]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version_v2="[bsp_gen4] [cy8ckit_062s2_ai,cy8ckit_062s2_43012]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="nfc,adt" req_capabilities_v2="nfc_nbt">
    <name>NBT Asynchronous Data Transfer</name>
    <id>mtb-example-optiga-nbt-adt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-optiga-nbt-adt</uri>
    <description><![CDATA[This code example contains the NBT Asynchronous Data Transfer embedded application, a ModusToolbox&#8482; project which showcases the OPTIGA&#8482; Authenticate NBT device in the host parameterization via asynchronous data transfer (ADT) use case.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-optiga-nbt-adt">README on GitHub</a>.]]></description>
    <req_capabilities>nfc_nbt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="nbt,pt" req_capabilities_v2="nfc_nbt">
    <name>NBT Pass-Through</name>
    <id>mtb-example-optiga-nbt-pt</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-optiga-nbt-pt</uri>
    <description><![CDATA[This code example contains the NBT Pass-Through embedded application, a ModusToolbox&#8482; project which showcases the OPTIGA&#8482; Authenticate NBT in the host parameterization via pass-through (PT) use case.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-optiga-nbt-pt">README on GitHub</a>.]]></description>
    <req_capabilities>nfc_nbt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="isoc central" req_capabilities_v2="[cyw920829m2evk_02]">
    <name>Bluetooth LE ISOC Central</name>
    <id>mtb-example-btstack-freertos-le-isoc-central</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-isoc-central</uri>
    <description><![CDATA[This code example demonstrates the use of Bluetooth&#174; Low Energy isochronous channels as a central.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-isoc-central/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="isoc peripheral" req_capabilities_v2="[cyw920829m2evk_02]">
    <name>Bluetooth LE ISOC Peripheral</name>
    <id>mtb-example-btstack-freertos-le-isoc-peripheral</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-le-isoc-peripheral</uri>
    <description><![CDATA[This code example demonstrates the use of Bluetooth&#174; Low Energy isochronous channels as a peripheral.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-le-isoc-peripheral/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>bt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen5">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="nbt,ch" req_capabilities_v2="nfc_nbt">
    <name>NBT Static Connection Handover</name>
    <id>mtb-example-optiga-nbt-sch</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-optiga-nbt-sch</uri>
    <description><![CDATA[This code example contains the NBT Static Connection Handover embedded application, a ModusToolbox&#8482; project which showcases the OPTIGA&#8482; Authenticate NBT in the static connection handover (SCH) use case.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-optiga-nbt-sch">README on GitHub</a>.]]></description>
    <req_capabilities>nfc_nbt</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.0.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="starter,template,empty,blank,mtb-flow" req_capabilities_v2="cat5 cyw55xxx [cyw955513evk_01, cyw955913evk_01]">
    <name>Empty App</name>
    <id>mtb-example-threadx-empty-app</id>
    <category>Getting Started</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-empty-app</uri>
    <description><![CDATA[This empty application provides a template for creating applications using CYW55xxx devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-empty-app/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="starter,blinky,mtb-flow,led" req_capabilities_v2="cat5 cyw55xxx [cyw955513evk_01, cyw955913evk_01]">
    <name>HAL Blinky LED</name>
    <id>mtb-example-threadx-blinky-led</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-blinky-led</uri>
    <description><![CDATA[This code example demonstrates the blinking LED functionality implemented by ThreadX tasks on CYW55xxx devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-blinky-led/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,cat5,tester,wifi,wlan,tool,manufacturing" req_capabilities_v2="cat5 [cyw955913evk_01]">
    <name>Tester - Threadx Wi-Fi Bluetooth Console</name>
    <id>mtb-tester-threadx-wifi-bluetooth</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-tester-threadx-wifi-bluetooth</uri>
    <description><![CDATA[This application integrates command console library including Wi-Fi iPerf and Bluetooth&#174; Low Energy functionality. Using this application, the user can characterize the Wi-Fi/Bluetooth&#174; Low Energy functionality and performance.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-tester-threadx-wifi-bluetooth/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,cat5,tester,wifi,wlan,tool,manufacturing" req_capabilities_v2="cat5 [cyw955913evk_01]">
    <name>Tester - Threadx Enterprise security</name>
    <id>mtb-tester-threadx-enterprise-security</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-tester-threadx-enterprise-security</uri>
    <description><![CDATA[This application provides a console interface to test enterprise Wi-Fi commands. This application integrates the command console library.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-tester-threadx-enterprise-security/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version="bsp_gen4">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version="bsp_gen4">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version="bsp_gen4">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="hello world, uart, led">
    <name>HAL Hello World</name>
    <id>mtb-example-threadx-hello-world</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-hello-world</uri>
    <description><![CDATA[This code example demonstrates a simple UART communication by printing the "Hello world" message on a terminal and toggling an LED using the UART communication as control signal. The code example is based on HAL(Hardware Abstraction Layer) libraries.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-hello-world/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,ble,bluetooth,btstack,threadx,findme,cyw55913">
    <name>Bluetooth LE Findme</name>
    <id>mtb-example-btstack-threadx-findme</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-threadx-findme</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; Immediate Alert Service (IAS)-based Find Me Profile (FMP) using the Infineon Wi-Fi & Bluetooth&#174; combo SoC devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-threadx-findme/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>bt led cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,http,threadx,cyw55913">
    <name>Wi-Fi Web Server</name>
    <id>mtb-example-threadx-wifi-http-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-http-server</uri>
    <description><![CDATA[This code example demonstrates Wi-Fi provisioning via a SoftAP and setting up a web server with CYW955913EVK-01
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-http-server/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi led cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,tcp,client,threadx,cyw55913">
    <name>TCP Client</name>
    <id>mtb-example-threadx-wifi-tcp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-tcp-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of a TCP client with CYW955913EVK-01 EVK.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-tcp-client/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi led cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,tcp,server,threadx,cyw55913">
    <name>TCP Server</name>
    <id>mtb-example-threadx-wifi-tcp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-tcp-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a TCP server with CYW955913EVK-01 EVK.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-tcp-server/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi led cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,scan,threadx,cyw55913">
    <name>Wi-Fi Scan</name>
    <id>mtb-example-threadx-wifi-scan</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-scan</uri>
    <description><![CDATA[This example demonstrates how to configure different scan filters provided in the Wi-Fi connection manager (WCM) middleware and scan for the available Wi-Fi networks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-scan/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,bluetooth,threadx,cyw55913">
    <name>Bluetooth LE Wi-Fi onboarding</name>
    <id>mtb-example-threadx-le-wifi-onboarding</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-le-wifi-onboarding</uri>
    <description><![CDATA[This example uses the Infineon Wi-Fi onboarding custom service via Bluetooth&#174; LE for provisioning a new device to a Wi-Fi Access point.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-le-wifi-onboarding/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi bt cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,battery,bluetooth,btstack,threadx,server,cyw55913">
    <name>Battery Server</name>
    <id>mtb-example-btstack-threadx-battery-server</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-threadx-battery-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; battery service. The battery service exposes the battery level of the device and supports enabling battery level notifications.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-threadx-battery-server/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>bt led cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,AT-Commands,threadx,cyw55913">
    <name>Wi-Fi AT Commands</name>
    <id>mtb-example-threadx-at-commands</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-at-commands</uri>
    <description><![CDATA[This example demonstrates AT command application that accepts AT command from a Host over UART to configure, manage, and control Wi-Fi functionalities and features of a device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-at-commands/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,mqtt,threadx,cyw55913">
    <name>Wi-Fi MQTT Client</name>
    <id>mtb-example-threadx-wifi-mqtt-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-mqtt-client</uri>
    <description><![CDATA[This code example demonstrates implementing an MQTT Client using the MQTT Client library. The library uses the AWS IoT device SDK Port library and implements the glue layer that is required for the library to work with Infineon&#8482; connectivity platforms.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-mqtt-client/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,udp,client,threadx,cyw55913">
    <name>Wi-Fi UDP CLient</name>
    <id>mtb-example-threadx-wifi-udp-client</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-udp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP Client using the Wi-Fi connectivity SDK. The UDP Client establishes a connection with a remote UDP server and based on the command received from the UDP server, turns the user LED ON or OFF
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-udp-client/blob/master/README.md">README on GitHub</a>.
    .]]></description>
    <req_capabilities>wifi cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,udp,server,threadx,cyw55913">
    <name>Wi-Fi UDP Server</name>
    <id>mtb-example-threadx-wifi-udp-server</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-udp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP Server using the Wi-Fi connectivity SDK. The UDP Server allows the user to send LED ON/OFF command to the UDP client.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-udp-server/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,ble,bluetooth,btstack,threadx,beacon,cyw55913">
    <name>Bluetooth LE Beacon</name>
    <id>mtb-example-btstack-threadx-beacon</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-threadx-beacon</uri>
    <description><![CDATA[TThis code example demonstrates the implementation of Bluetooth&#174; LE extended advertisements and the use of the beacon library.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-threadx-beacon/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>bt cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,ble,kv-store,btstack,threadx,privacy,cyw55913">
    <name>Bluetooth LE Privacy</name>
    <id>mtb-example-btstack-threadx-peripheral-privacy</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-threadx-peripheral-privacy</uri>
    <description><![CDATA[This code example demonstrates the privacy features available to users in Bluetooth&#174; Low Energy 5.0 and above.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-threadx-peripheral-privacy/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>bt cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,ota,mqtt,threadx,cyw55913">
    <name>Over-the-air firmware update using MQTT</name>
    <id>mtb-example-threadx-wifi-ota-mqtt</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-ota-mqtt</uri>
    <description><![CDATA[This code example showcases how to perform an MQTT over-the-air (OTA) update using the CYW955913EVK-01 Evaluation Kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-ota-mqtt/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,ble,btstack,ota,threadx,cyw55913">
    <name>Over-the-air firmware update using Bluetooth LE</name>
    <id>mtb-example-btstack-threadx-le-ota</id>
    <category>Bluetooth&#174;</category>
    <uri>https://github.com/Infineon/mtb-example-btstack-threadx-le-ota</uri>
    <description><![CDATA[This code example showcases how to perform an over-the-air (OTA) update using the Bluetooth&#174; LE in CYW955913EVK-01 Evaluation Kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-threadx-le-ota/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>bt cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,wifi,ota,http,threadx,cyw55913">
    <name>Over-the-air firmware update using HTTP</name>
    <id>mtb-example-threadx-wifi-ota-http</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-wifi-ota-http</uri>
    <description><![CDATA[This code example showcases how to perform an HTTP over-the-air (OTA) update using the CYW955913EVK-01 Evaluation Kit.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-wifi-ota-http/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>wifi cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,psram,threadx,cyw55913">
    <name>PSRAM Read and Write</name>
    <id>mtb-example-threadx-psram</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-psram</uri>
    <description><![CDATA[This code example demonstrates how to interface with an external PSRAM using Serial Memory Interface (SMIF) PDL in CYW955913EVK-01 EVK. It also demonstrates how to perform read and write operations in CYW955913EVK-01 EVK.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-psram/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>psram cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,crypto,threadx,cyw55913">
    <name>Crypto</name>
    <id>mtb-example-threadx-crypto</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-crypto</uri>
    <description><![CDATA[This code example integrates Secure Hash Algorithm (SHA),  Advanced Encryption Standard (AES), and True Random Number Generation (TRNG) functionalities using Mbed TLS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-crypto/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,lowpower,bluetooth,wlan,threadx,cyw55913">
    <name>CYW5591x Low power</name>
    <id>mtb-example-threadx-cyw5591x-low-power</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-cyw5591x-low-power</uri>
    <description><![CDATA[This is low power application for CYW5591x devices. The application provides a simple UART interface to manipulate the device state and hence facilitating the system power measurement in different scenarios.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-cyw5591x-low-power/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,ambient,threadx,cyw55913">
    <name>Ambient light sensor</name>
    <id>mtb-example-threadx-ambient-light-sensor</id>
    <category>Peripherals</category>
    <uri>https://github.com/Infineon/mtb-example-threadx-ambient-light-sensor</uri>
    <description><![CDATA[This code example demonstrates the interfacing of ambient light sensor (TSL2540) with CYW955913EVK-01 EVK. This example reads the light value from a sensor through I2C interface.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-threadx-ambient-light-sensor/blob/master/README.md">README on GitHub</a>.
    ]]></description>
    <req_capabilities>cyw55xxx cat5</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,xmc7000,ethernet,ota,mqtt" req_capabilities_v2="xmc7000 led">
    <name>OTA over Ethernet MQTT</name>
    <id>mtb-example-ethernet-ota-mqtt</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-ota-mqtt</uri>
    <description><![CDATA[This code example demonstrates OTA update with XMC&#8482; 7000 MCU over Ethernet. The device establishes a connection with the designated MQTT broker (this example uses a local Mosquitto broker). It periodically checks the job document to see if a new update is available. When a new update is available, it is downloaded and written to the secondary slot. On the next reboot, MCUboot swaps the new image in the secondary slot with the primary slot image and runs the application. If the new image is not validated in runtime, on the next reboot, MCUboot reverts to the previously validated image.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-ota-mqtt/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>xmc7000 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="mtb-flow,xmc7000,ethernet,ota,http,https" req_capabilities_v2="xmc7000 led">
    <name>OTA over Ethernet HTTPS</name>
    <id>mtb-example-ethernet-ota-https</id>
    <category>Wi-Fi</category>
    <uri>https://github.com/Infineon/mtb-example-ethernet-ota-https</uri>
    <description><![CDATA[This code example demonstrates OTA update with XMC&#8482; 7000 MCU over Ethernet. The device establishes a connection with the designated HTTPS server. It periodically checks the job document to see if a new update is available. When a new update is available, it is downloaded and written to the secondary slot. On the next reboot, MCUboot swaps the new image in the secondary slot with the primary slot image and runs the application. If the new image is not validated in runtime, on the next reboot, MCUboot reverts to the previously validated image.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ethernet-ota-https/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>xmc7000 led</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.2.0" req_capabilities_per_version_v2="[bsp_gen4] [kit_xmc72_evk,kit_xmc72_evk_mur_43439m2]">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app keywords="xmc4800,pmsm,foc,motor-control,sensorless,mtb-flow" req_capabilities_v2="[eval_xmc4800psoc6m5_xmc]">
    <name>XMC48 PMSM FOC SL</name>
    <id>mtb-example-xmc48-pmsm-foc-sl</id>
    <category>Motor Control</category>
    <uri>https://github.com/Infineon/mtb-example-xmc48-pmsm-foc-sl</uri>
    <description><![CDATA[This code example demonstrates the sensorless PMSM FOC motor control application using XMC&#8482;4800PSoC&#8482;6M5 board.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-xmc48-pmsm-foc-sl/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>xmc4800</req_capabilities>
    <versions>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>Latest 0.X release</num>
        <commit>latest-v0.X</commit>
      </version>
      <version flow_version="2.0" tools_min_version="3.1.0" req_capabilities_per_version="bsp_gen4">
        <num>0.5.0 release</num>
        <commit>release-v0.5.0</commit>
      </version>
    </versions>
  </app>
</apps>
