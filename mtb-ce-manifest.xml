<apps>
  <app>
    <name>Empty PSoC4 App</name>
    <id>mtb-example-psoc4-empty-app-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-empty-app</uri>
    <description><![CDATA[This empty application provides a template for creating applications using PSoC&#8482; 4 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Periodic Interrupt Using TCPWM</name>
    <id>mtb-example-psoc4-tcpwm-interrupt-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-tcpwm-interrupt</uri>
    <description><![CDATA[This example uses the TCPWM Component in the Timer/Counter mode to generate a periodic interrupt. An LED toggles whenever the interrupt occurs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-tcpwm-interrupt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense CSX Button Tuning</name>
    <id>mtb-example-psoc4-capsense-csx-button-tuning-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-capsense-csx-button-tuning</uri>
    <description><![CDATA[This code example demonstrates how to manually tune a mutual capacitance (CSX)-based button widget in PSoC&#8482; 4 devices using CapSense Tuner GUI.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc4-capsense-csx-button-tuning/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc4 capsense_button</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Empty PSoC6 App</name>
    <id>mtb-example-empty-app-0</id>
    <uri>https://github.com/Infineon/mtb-example-empty-app</uri>
    <description><![CDATA[This empty application provides a template for creating applications using PSoC&#8482; 6 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Hello World</name>
    <id>mtb-example-hal-hello-world-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-hello-world</uri>
    <description><![CDATA[This code example demonstrates simple UART communication by printing a "Hello World" message on a terminal and blinks an LED using a Timer resource using PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-hello-world/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CAPSENSE Buttons and Slider</name>
    <id>mtb-example-psoc6-capsense-buttons-slider-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider</uri>
    <description><![CDATA[This code example features a 5-segment CAPSENSE&#8482; slider and two CAPSENSE&#8482; buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates interfacing with Tuner GUI using I2C interface.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-capsense-buttons-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Battery Level FreeRTOS</name>
    <id>mtb-example-psoc6-ble-battery-level-freertos-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-battery-level-freertos</uri>
    <description><![CDATA[This code example demonstrates the implementation of a Bluetooth&#174; Low Energy Battery Service using PSoC&#8482; 6 MCU with Bluetooth&#174; Low Energy Connectivity (PSoC&#8482; 6 Bluetooth&#174; LE). This code example implements a GATT Server with the Battery Service and Device Information Service Bluetooth&#174; Low Energy standards. This code example uses FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-battery-level-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.4.1">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.4.1">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.4.1">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.4.1">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>GPIO Interrupt</name>
    <id>mtb-example-hal-gpio-interrupt-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-gpio-interrupt</uri>
    <description><![CDATA[This example demonstrates how to configure a GPIO to generate an interrupt.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-gpio-interrupt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Find Me</name>
    <id>mtb-example-psoc6-ble-findme-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-findme</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; Low Energy Immediate Alert Service (IAS)-based Find Me Profile (FMP) using PSoC&#8482; 6 MCU with Bluetooth&#174; Low Energy Connectivity.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-findme/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PWM Square Wave</name>
    <id>mtb-example-hal-pwm-square-wave-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-pwm-square-wave</uri>
    <description><![CDATA[This code example generates a square wave using the PWM driver. An LED connected to the PWM output pin blinks at 2 Hz.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-pwm-square-wave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>RTC Basics</name>
    <id>mtb-example-hal-rtc-basics-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-rtc-basics</uri>
    <description><![CDATA[This example demonstrates the usage of the real-time clock (RTC) in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-rtc-basics/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Emulated EEPROM</name>
    <id>mtb-example-psoc6-emulated-eeprom-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emulated-eeprom</uri>
    <description><![CDATA[This code example demonstrates emulation of EEPROM behavior in flash memory of PSoC&#8482; 6 MCU using emeeprom middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-emulated-eeprom/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CAPSENSE Buttons and Slider FreeRTOS</name>
    <id>mtb-example-psoc6-capsense-buttons-slider-freertos-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider-freertos</uri>
    <description><![CDATA[This code example features a 5-segment CAPSENSE&#8482; slider and two CAPSENSE&#8482; buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates interfacing with Tuner GUI using I2C interface.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-capsense-buttons-slider-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Fault Handling</name>
    <id>mtb-example-psoc6-fault-handling-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-fault-handling</uri>
    <description><![CDATA[This example demonstrates the fault handling functionality of PSoC&#8482; 6 MCU using Peripheral Driver Library (PDL) System Library (SysLib).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-fault-handling/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography AES Demonstration</name>
    <id>mtb-example-psoc6-crypto-aes-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-aes</uri>
    <description><![CDATA[This code example encrypts and decrypts user input data using the AES algorithm using a 128-bit key. The encrypted and decrypted data are displayed on a UART terminal emulator.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-crypto-aes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography TRNG Demonstration</name>
    <id>mtb-example-hal-crypto-trng-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-crypto-trng</uri>
    <description><![CDATA[This code example demonstrates generating a One-Time Password (OTP) using the True Random Number generation feature of MCU cryptography block.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-crypto-trng/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>UART Transmit and Receive</name>
    <id>mtb-example-hal-uart-transmit-receive-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-uart-transmit-receive</uri>
    <description><![CDATA[This example demonstrates the UART (HAL) transmit and receive operation.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-uart-transmit-receive/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB UART Transmit and Receive using DMA</name>
    <id>mtb-example-psoc6-uart-transmit-receive-dma-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-uart-transmit-receive-dma</uri>
    <description><![CDATA[This example demonstrates the UART transmit and receive operation using DMA in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-uart-transmit-receive-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Master</name>
    <id>mtb-example-hal-i2c-master-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-i2c-master</uri>
    <description><![CDATA[This example demonstrates the use of I2C (HAL) resource for PSoC&#8482; 6 MCU in Master mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-i2c-master/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Master EzI2C Slave</name>
    <id>mtb-example-psoc6-i2c-master-ezi2c-slave-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-master-ezi2c-slave</uri>
    <description><![CDATA[This example demonstrates the use of I2C (HAL) resource for PSoC&#8482; 6 MCU in Master mode with an EzI2C slave.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-i2c-master-ezi2c-slave/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Slave Using Callbacks</name>
    <id>mtb-example-psoc6-i2c-slave-callback-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-slave-callback</uri>
    <description><![CDATA[This example demonstrates the operation of the I2C (HAL) resource for PSoC&#8482; 6 MCU in Slave mode using callbacks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-i2c-slave-callback/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SPI Master</name>
    <id>mtb-example-hal-spi-master-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-spi-master</uri>
    <description><![CDATA[This example demonstrates the use of SPI (HAL) resource for PSoC&#8482; 6 MCU in Master mode.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-spi-master/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB SPI Master DMA</name>
    <id>mtb-example-psoc6-spi-master-dma-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-spi-master-dma</uri>
    <description><![CDATA[This example demonstrates the use of PSoC&#8482; 6 MCU Serial Communication Block (SCB) resource in SPI Master mode using DMA.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-spi-master-dma/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>emWin E-Ink FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-eink-freertos-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-eink-freertos</uri>
    <description><![CDATA[This code example demonstrates displaying 2D graphics on an E-Ink display using EmWin graphics library in FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-emwin-eink-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led arduino switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>emWin OLED FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-oled-freertos-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-oled-freertos</uri>
    <description><![CDATA[This code example demonstrates displaying 2D graphics on an OLED display using EmWin graphics library in FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-emwin-oled-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 arduino switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography SHA Demonstration</name>
    <id>mtb-example-psoc6-crypto-sha-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-sha</uri>
    <description><![CDATA[This code example shows how to generate a 32-byte hash value or message digest for an arbitrary user input message with the SHA2 algorithm using the Cryptographic hardware block in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-crypto-sha/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI Flash Read Write</name>
    <id>mtb-example-serial-flash-readwrite-0</id>
    <uri>https://github.com/Infineon/mtb-example-serial-flash-readwrite</uri>
    <description><![CDATA[This example demonstrates interfacing with an external NOR flash memory in Quad-SPI mode using the Serial Memory Interface (SMIF) block in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-serial-flash-readwrite/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Watchdog Timer</name>
    <id>mtb-example-hal-wdt-0</id>
    <uri>https://github.com/Infineon/mtb-example-hal-wdt</uri>
    <description><![CDATA[This example demonstrates the Watchdog Timer (WDT) in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-hal-wdt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Multi-Counter Watchdog Timer</name>
    <id>mtb-example-psoc6-mcwdt-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-mcwdt</uri>
    <description><![CDATA[This example explains how to setup a 32-bit free-running counter using two 16-bit counters of Multi-Counter Watchdog Timer (MCWDT) in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-mcwdt/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Switching Power Modes</name>
    <id>mtb-example-psoc6-switching-power-modes-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-switching-power-modes</uri>
    <description><![CDATA[This example demonstrates how to transition PSoC&#8482; 6 MCU to the following power modes - Low Power Active, Low Power Sleep, Ultra Low Power Active, Ultra Low Power Sleep, and Deep Sleep.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-switching-power-modes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Sensor Hub</name>
    <id>mtb-example-btsdk-sensorhub-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-sensorhub</uri>
    <description><![CDATA[This example demonstrates the interfacing of Multiple sensors, Motion, Temperature, and 3D magnetic sensor with CYW208xx and CYW207xx devices using ModusToolbox&#8482; IDE.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-sensorhub/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>btsdk lsm9ds1 ncu15wf104 fw2</req_capabilities>
    <versions>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CYW208xx Data logger</name>
    <id>mtb-example-btsdk-cyw208xx-data-logger-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw208xx-data-logger</uri>
    <description><![CDATA[This code example includes two applications that demonstrate the operation of multiple Serial Peripheral Interface (SPI) interfaces using the CYW208xx Bluetooth&#174; SoC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-cyw208xx-data-logger/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>CYW208XX ncu15wf104</req_capabilities>
    <versions>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PDM to I2S Audio</name>
    <id>mtb-example-psoc6-pdm-to-i2s-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pdm-to-i2s</uri>
    <description><![CDATA[This example demonstrates how to route PDM audio data to the I2S interface in PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-pdm-to-i2s/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 arduino i2s pdm</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PDM PCM Audio</name>
    <id>mtb-example-psoc6-pdm-pcm-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pdm-pcm</uri>
    <description><![CDATA[This example demonstrates how to use the pulse-density modulation/pulse-code modulation (PDM/PCM) hardware block in PSoC&#8482; 6 MCU with a digital microphone.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-pdm-pcm/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 pdm</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2S Audio</name>
    <id>mtb-example-psoc6-i2s-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2s</uri>
    <description><![CDATA[This example demonstrates how to use the I2S hardware block in PSoC&#8482; 6 MCU to interface with an audio codec.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-i2s/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 arduino i2s</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB HID Mouse</name>
    <id>mtb-example-psoc6-usb-hid-mouse-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-hid-mouse</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU as a HID. The device enumerates as a 3-button mouse.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-hid-mouse/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI Flash Read Write Using SFDP</name>
    <id>mtb-example-psoc6-qspi-readwrite-sfdp-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-readwrite-sfdp</uri>
    <description><![CDATA[This example demonstrates interfacing with an external NOR flash memory in Quad-SPI mode using the Serial Memory Interface (SMIF) block in PSoC&#8482; 6 MCU. This example uses the Serial Flash Discoverable Parameters (SFDP) standard to auto-discover the flash parameters and the commands for read, program, and erase operations.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-qspi-readwrite-sfdp/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi TCP Client</name>
    <id>mtb-example-wifi-tcp-client-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-tcp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of TCP client with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-tcp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi Secure TCP Client</name>
    <id>mtb-example-wifi-secure-tcp-client-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-secure-tcp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of a secure TCP client with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-secure-tcp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi Secure TCP Server</name>
    <id>mtb-example-wifi-secure-tcp-server-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-secure-tcp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of a secure TCP server with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-secure-tcp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI F-RAM Access</name>
    <id>mtb-example-psoc6-qspi-fram-access-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-fram-access</uri>
    <description><![CDATA[This code example demonstrates interfacing PSoC&#8482; 6 MCU with an external QSPI F-RAM memory and access it in Single, Dual, or Quad SPI mode using the Serial Memory Interface (SMIF) block. This example uses the PSoC&#8482; 6 MCU standard QSPI HAL driver library to build the QSPI F-RAM access API.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-qspi-fram-access/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 qspi fram rgb_led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi TCP Server</name>
    <id>mtb-example-wifi-tcp-server-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-tcp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of a TCP server with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-tcp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Audio Recorder</name>
    <id>mtb-example-psoc6-usb-audio-recorder-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-audio-recorder</uri>
    <description><![CDATA[This example demonstrates the use of PSoC&#8482; 6 MCU to implement an audio recorder using the USB Audio Device Class.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-audio-recorder/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto usb_device pdm</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Audio Device FreeRTOS</name>
    <id>mtb-example-psoc6-usb-audio-device-freertos-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-audio-device-freertos</uri>
    <description><![CDATA[This example demonstrates how to use PSoC&#8482; 6 MCU to implement a USB Audio Device and HID Audio Playback Control that connects to the PC via the USB interface. The example also uses FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-audio-device-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto usb_device capsense_button capsense_linear_slider i2s</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Throughput Measurement</name>
    <id>mtb-example-btsdk-ble-throughput-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-ble-throughput</uri>
    <description><![CDATA[This code example demonstrates the maximum Bluetooth&#174; Low Energy throughput (using GATT layer notifications and writes) that can be obtained with AIROC&#8482; Bluetooth&#174; devices (CYW208xx and CYW207xx).
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-ble-throughput/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>btsdk fw2 button</req_capabilities>
    <versions>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB CDC echo</name>
    <id>mtb-example-psoc6-usb-cdc-echo-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-cdc-echo</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU for Communication Device Class (CDC). When configured for a CDC, the PSoC&#8482; 6 enumerates a Virtual COM port, which can be read and written by a terminal emulator program on a PC.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-cdc-echo/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB HID Generic</name>
    <id>mtb-example-psoc6-usb-hid-generic-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-hid-generic</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU as a Human Interface Device (HID). The device enumerates as a Generic HID device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-hid-generic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Peripheral Privacy</name>
    <id>mtb-example-btsdk-peripheral-privacy-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-peripheral-privacy</uri>
    <description><![CDATA[This code example demonstrates the privacy features available to users in Bluetooth&#174; Low Energy 5.0 and above.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-peripheral-privacy/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>button fw2 btsdk</req_capabilities>
    <versions>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PWM GPIO</name>
    <id>mtb-example-btsdk-pwm-gpio-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-pwm-gpio</uri>
    <description><![CDATA[This example demonstrates the configuration of PWM (pulse width modulation) to control the brightness of an LED, and configuration of GPIO to toggle an LED ON and OFF.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-pwm-gpio/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk led2x</req_capabilities>
    <versions>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CSDADC</name>
    <id>mtb-example-psoc6-csdadc-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-csdadc</uri>
    <description><![CDATA[This example demonstrates the usage of CSD analog-to-digital converter (ADC) in PSoC&#8482; 6 MCU. CSDADC measures the external voltage and displays the conversion result the terminal application.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-csdadc/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto capsense</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Secure Blinky LED FreeRTOS</name>
    <id>mtb-example-psoc6-secure-blinkyled-freertos-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-secure-blinkyled-freertos</uri>
    <description><![CDATA[This code example demonstrates the implementation of simple FreeRTOS task that blinks an LED periodically using PSoC&#8482; 64 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-secure-blinkyled-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>secure_boot</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CYW20719B2 SPI</name>
    <id>mtb-example-btsdk-cyw20719b2-spi-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw20719b2-spi</uri>
    <description><![CDATA[This code example demonstrates the SPI functionality using CYW20719B2.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-cyw20719b2-spi/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk CYW920719B2Q40EVB_01</req_capabilities>
    <versions>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi MQTT Client</name>
    <id>mtb-example-wifi-mqtt-client-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-mqtt-client</uri>
    <description><![CDATA[This code example demonstrates implementing an MQTT client using the MQTT client library for the family of AIROC&#8482; Wi-Fi & Bluetooth&#174; combos. This library uses the AWS IoT Device SDK that includes an MQTT 3.1.1 client.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-mqtt-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>WLAN Low Power</name>
    <id>mtb-example-wifi-wlan-lowpower-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-wlan-lowpower</uri>
    <description><![CDATA[This code example demonstrates the low-power operation of a host MCU and a WLAN device using the network activity handlers provided by the Low Power Assistant middleware for AIROC&#8482; Wi-Fi & Bluetooth&#174; combos.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-wlan-lowpower/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Throughput Measurement FreeRTOS</name>
    <id>mtb-example-psoc6-ble-throughput-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-throughput-freertos</uri>
    <description><![CDATA[This code example demonstrates Bluetooth&#174; Low Energy GATT throughput measurement (using GATT layer notifications and GATT write command) using PSoC&#8482; 6 Bluetooth&#174; Low Energy MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-throughput-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.4.1">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.4.1">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>WLAN Offloads</name>
    <id>mtb-example-wlan-offloads-0</id>
    <uri>https://github.com/Infineon/mtb-example-wlan-offloads</uri>
    <description><![CDATA[This code example demonstrates the TCP Keepalive Offload functionality offered by AIROC&#8482; Wi-Fi & Bluetooth&#174; combos using PSoC&#8482; 6 MCU. It employs Low Power Assistant (LPA) middleware library which helps in developing low power applications for the Infineon devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wlan-offloads/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>HAL Keyboard Scanner</name>
    <id>mtb-example-btsdk-cyw208xx-keyboard-scanner-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw208xx-keyboard-scanner</uri>
    <description><![CDATA[This code example demonstrates the dedicated keyscan hardware, which processes key press events from proprietary GPIOs (LHL GPIOs) without interrupting the CPU core. This code example also demonstrates low power entry when the system is idle (no activity or keypress) and wake up when there is key press.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btsdk-cyw208xx-keyboard-scanner/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>fw2 btsdk CYW208XX_62fbga</req_capabilities>
    <versions>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version flow_version="1.0" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>OTA Using MQTT</name>
    <id>mtb-example-ota-mqtt-0</id>
    <uri>https://github.com/Infineon/mtb-example-ota-mqtt</uri>
    <description><![CDATA[This code example demonstrates OTA update with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices. The device establishes a connection with the designated MQTT Broker (Mosquitto is used in this example) and subscribes to a topic. When an OTA image is published to that topic, the device automatically pulls the OTA image over MQTT and saves it to the the flash memory. This example uses MCUBoot based bootloader which boots the new application on next boot-up.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-ota-mqtt/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Mass Storage Logger</name>
    <id>mtb-example-psoc6-usb-msc-logger</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-msc-logger</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU as a Mass Storage (MSC) device and emulate a file system in the internal memory.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-msc-logger/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>WPS Enrollee</name>
    <id>mtb-example-wifi-wps-enrollee-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-wps-enrollee</uri>
    <description><![CDATA[This code example demonstrates how to use the connection management and WPS Enrollee feature provided in the Wi-Fi Connection Manager (WCM) middleware.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-wps-enrollee/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi Scan</name>
    <id>mtb-example-wifi-scan-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-scan</uri>
    <description><![CDATA[This code example demonstrates how to configure different scan filters provided in the Wi-Fi Connection Manager (WCM) middleware and scan for the available Wi-Fi networks.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-scan/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Multi Beacon</name>
    <id>mtb-example-btstack-freertos-multi-beacon-0</id>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-multi-beacon</uri>
    <description><![CDATA[This code example demonstrates the implementation of a beacon which advertises multiple Eddystone ADV data.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-multi-beacon/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Battery Server</name>
    <id>mtb-example-btstack-freertos-battery-server-0</id>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-battery-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; LE Battery Service.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-battery-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE Environmental Sensing Service</name>
    <id>mtb-example-btstack-freertos-ess-0</id>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-ess</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; LE Environmental Sensing Profile. It shows how to send environmental parameters like temperature by sending simulated temperature values over the Bluetooth&#174; LE connection using the AIROC&#8482; Wi-Fi & Bluetooth&#174; combos.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-ess/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi Onboarding Using Bluetooth LE</name>
    <id>mtb-example-btstack-freertos-wifi-onboarding-0</id>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-wifi-onboarding</uri>
    <description><![CDATA[This code example demonstrates Wi-Fi Onboarding using Bluetooth&#174; Low Energy.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-wifi-onboarding/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 wifi bt</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE CAPSENSE Buttons and Slider</name>
    <id>mtb-example-btstack-freertos-capsense-buttons-slider-0</id>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-capsense-buttons-slider</uri>
    <description><![CDATA[This code example demonstrates the CAPSENSE&#8482; implementation using Bluetooth&#174; Low Energy Custom Service.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-capsense-buttons-slider/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt capsense_button capsense_linear_slider led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE CTS Client</name>
    <id>mtb-example-btstack-freertos-cts-client-0</id>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cts-client</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; Low Energy GAP Peripheral - GATT Client with Current Time Service.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cts-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Bluetooth LE CTS Server</name>
    <id>mtb-example-btstack-freertos-cts-server-0</id>
    <uri>https://github.com/Infineon/mtb-example-btstack-freertos-cts-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of a simple Bluetooth&#174; Low Energy GAP Central - GATT Server with Current Time Service.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-btstack-freertos-cts-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CAPSENSE Custom Scan</name>
    <id>mtb-example-psoc6-capsense-custom-scan-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-custom-scan</uri>
    <description><![CDATA[This code example demonstrates CAPSENSE&#8482; custom scanning through CAPSENSE&#8482; Middleware's callback functions that allow altering the sensor parameters during runtime or synchronizing the CAPSENSE&#8482; scan with non-CAPSENSE#8482 operations. In this code example, the callback function is used to change the inactive sensor state to either shield or ground depending on the sensor being scanned.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-capsense-custom-scan/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led capsense_linear_slider</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI XIP</name>
    <id>mtb-example-psoc6-qspi-xip-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-xip</uri>
    <description><![CDATA[This example demonstrates how to use the QSPI block of the PSoC&#8482; 6 MCU in execute-in-place (XIP) mode with an external flash memory device.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-qspi-xip/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CAPSENSE Tuning Over Bluetooth LE - Server</name>
    <id>mtb-example-psoc6-ble-capsense-tuner-server-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-capsense-tuner-server</uri>
    <description><![CDATA[This code example demonstrates how to monitor the CAPSENSE&#8482; data and tune the CAPSENSE&#8482; sensors over Bluetooth&#174; Low Energy communication with CAPSENSE&#8482; Tuner GUI using PSoC&#8482; 6 Bluetooth&#174; Low Energy MCU. This is intended to be used with the CAPSENSE&#8482; Tuning Over Bluetooth&#174; Low Energy - Client example.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-capsense-tuner-server/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led ble capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi UDP Client</name>
    <id>mtb-example-wifi-udp-client-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-udp-client</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP Client using AnyCloud SDK. The UDP Client establishes a connection with a remote UDP server and based on the command received from the UDP server, turns the user LED ON or OFF using PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-udp-client/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi led</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi UDP Server</name>
    <id>mtb-example-wifi-udp-server-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-udp-server</uri>
    <description><![CDATA[This code example demonstrates implementation of UDP Server using AnyCloud SDK. The UDP Server allows the user to send LED ON/OFF command to the UDP client using PSoC&#8482; 6 MCU.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-udp-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Mass Storage File System</name>
    <id>mtb-example-psoc6-usb-msc-filesystem-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-msc-filesystem-freertos</uri>
    <description><![CDATA[This example demonstrates how to configure the USB block in a PSoC&#8482; 6 MCU device as a Mass Storage (MSC) device and run a file system (FatFs) through an external memory (microSD). This example uses FreeRTOS.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-usb-msc-filesystem-freertos/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto usb_device switch led pdm sdhc</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi HTTPS Server</name>
    <id>mtb-example-wifi-https-server-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-https-server</uri>
    <description><![CDATA[This code example demonstrates the implementation of an HTTPS server with PSoC&#8482; 6 MCU and CYW43xxx connectivity devices. It employs the HTTPS server middleware library, which takes care of all the underlying socket connections with the HTTPS client. This example establishes a secure connection with a HTTPS client through SSL handshake. Once the SSL handshake completes successfully, the HTTPS client can make GET, POST, and PUT requests with the server.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-https-server/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 cyw43xxx led wifi</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CAPSENSE Tuning Over Bluetooth LE - Client</name>
    <id>mtb-example-psoc6-ble-capsense-tuner-client-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-capsense-tuner-client</uri>
    <description><![CDATA[This code example demonstrates how to monitor the CAPSENSE&#8482; data and tune the CAPSENSE&#8482; sensors over Bluetooth&#174; Low Energy communication with CAPSENSE&#8482; Tuner GUI using PSoC&#8482; 6 Bluetooth&#174; Low Energy MCU. This is intended to be used with the CAPSENSE&#8482; Tuning Over Bluetooth&#174; Low Energy - Server example.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-ble-capsense-tuner-client/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 led ble</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>MCUboot-Based Basic Bootloader</name>
    <id>mtb-example-psoc6-mcuboot-basic-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-mcuboot-basic</uri>
    <description><![CDATA[This code example demonstrates building a simple bootloader application for PSoC&#8482; 62/63 MCUs using the open-source library - MCUboot.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-mcuboot-basic/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Dual-CPU Empty PSoC6 App</name>
    <id>mtb-example-psoc6-dual-cpu-empty-app-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dual-cpu-empty-app</uri>
    <description><![CDATA[This empty application provides a template for creating dual-CPU applications using PSoC&#8482; 6 devices.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-empty-app/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Dual-CPU IPC Semaphores</name>
    <id>mtb-example-psoc6-dual-cpu-ipc-sema-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dual-cpu-ipc-sema</uri>
    <description><![CDATA[This example demonstrates how to use the inter-processor communication (IPC) driver to implement a semaphore in PSoC&#8482; 6 MCU. The semaphore is used as a lock to control access to a resource shared by the CPUs and synchronize the initialization instructions.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-ipc-sema/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Dual-CPU IPC Pipes</name>
    <id>mtb-example-psoc6-dual-cpu-ipc-pipes-0</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-dual-cpu-ipc-pipes</uri>
    <description><![CDATA[This example demonstrates how to use the inter-processor communication (IPC) driver to implement a message pipe in PSoC&#8482; 6 MCU. The pipe is used to send messages between CPUs.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-psoc6-dual-cpu-ipc-pipes/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto switch</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Wi-Fi MCUboot-Based Bootloader with Rollback</name>
    <id>mtb-example-wifi-mcuboot-rollback-0</id>
    <uri>https://github.com/Infineon/mtb-example-wifi-mcuboot-rollback</uri>
    <description><![CDATA[This code example demonstrates an MCUboot-based bootloader that can rollback to the factory application/image located in external flash. Rollback can be initiated by the user in case of unrecoverable error conditions or for the purpose of running diagnostic tests using a test image. Bootloader runs on CM0+ and the user and factory applications run on CM4.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-wifi-mcuboot-rollback/blob/master/README.md">README on GitHub</a>.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led std_crypto qspi nor_flash</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Ramping LED using Smart IO</name>
    <id>mtb-example-smartio-ramping-led-0</id>
    <uri>https://github.com/Infineon/mtb-example-smartio-ramping-led</uri>
    <description><![CDATA[This example uses a PWM resource and Smart I/O in PSoC&#8482; 6 MCU to implement a ramping LED, where an LED gradually cycles through increasing and decreasing brightness levels. There is no CPU usage except for the initialization of PWM and Smart I/O.
    <br><br>For more details, see the <a href="https://github.com/Infineon/mtb-example-smartio-ramping-led/blob/master/README.md">README on GitHub</a>.]]></description>
    <req_capabilities>psoc6 std_crypto led smart_io</req_capabilities>
    <versions>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version req_capabilities_per_version="bsp_gen1" tools_max_version="2.1.0">
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
</apps>
