<apps>
  <app>
    <name>Empty PSoC6 App</name>
    <id>mtb-example-psoc6-empty-app</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-empty-app</uri>
    <description>This empty application provides a template for creating applications using PSoC 6 devices.</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Hello World</name>
    <id>mtb-example-psoc6-hello-world</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-hello-world</uri>
    <description>This code example demonstrates simple UART communication by printing a "Hello World" message on a terminal and blinks an LED using a Timer resource using PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense Buttons and Slider</name>
    <id>mtb-example-psoc6-capsense-buttons-slider</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider</uri>
    <description>This code example features a 5-segment CapSense slider and two CapSense buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates interfacing with Tuner GUI using I2C interface.</description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>BLE Battery Level FreeRTOS</name>
    <id>mtb-example-psoc6-ble-battery-level-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-battery-level-freertos</uri>
    <description>This code example demonstrates the implementation of a BLE Battery Service using PSoC 6 MCU with Bluetooth Low Energy Connectivity (PSoC 6 BLE). This code example implements a GATT Server with the Battery Service and Device Information Service BLE standards. This code example uses FreeRTOS.</description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>GPIO Interrupt</name>
    <id>mtb-example-psoc6-gpio-interrupt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-gpio-interrupt</uri>
    <description>This example demonstrates how to configure a GPIO to generate an interrupt in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led switch</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>BLE Find Me</name>
    <id>mtb-example-psoc6-ble-findme</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-findme</uri>
    <description>This code example demonstrates the implementation of a simple BLE Immediate Alert Service (IAS)-based Find Me Profile (FMP) using PSoC 6 MCU with Bluetooth Low Energy (BLE) Connectivity.</description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.0.1 release</num>
        <commit>release-v1.0.1</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PWM Square Wave</name>
    <id>mtb-example-psoc6-pwm-square-wave</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pwm-square-wave</uri>
    <description>This code example generates a square wave using the PWM driver. An LED connected to the PWM output pin blinks at 2 Hz.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>RTC Basics</name>
    <id>mtb-example-psoc6-rtc-basics</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-rtc-basics</uri>
    <description>This example demonstrates the usage of the real-time clock (RTC) in PSoC 6 MCU.</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Emulated EEPROM</name>
    <id>mtb-example-psoc6-emulated-eeprom</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emulated-eeprom</uri>
    <description>This code example demonstrates emulation of EEPROM behavior in flash memory of PSoC 6 MCU using emeeprom middleware.</description>
    <req_capabilities>psoc6 std_crypto led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense Buttons and Slider FreeRTOS</name>
    <id>mtb-example-psoc6-capsense-buttons-slider-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-buttons-slider-freertos</uri>
    <description>This code example features a 5-segment CapSense slider and two CapSense buttons. Button 0 turns the LED on, Button 1 turns the LED off and the slider controls the brightness of the LED. The code example also demonstrates interfacing with Tuner GUI using I2C interface.</description>
    <req_capabilities>psoc6 led capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Fault Handling</name>
    <id>mtb-example-psoc6-fault-handling</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-fault-handling</uri>
    <description>This example demonstrates the fault handling functionality of PSoC 6 MCU using Peripheral Driver Library (PDL) System Library (SysLib).</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography AES Demonstration</name>
    <id>mtb-example-psoc6-crypto-aes</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-aes</uri>
    <description>This code example encrypts and decrypts user input data using the AES algorithm using a 128-bit key. The encrypted and decrypted data are displayed on a UART terminal emulator.</description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography TRNG Demonstration</name>
    <id>mtb-example-psoc6-crypto-trng</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-trng</uri>
    <description>This code example demonstrates generating a One-Time Password (OTP) using the True Random Number generation feature of PSoC 6 MCU cryptography block.</description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>UART Transmit and Receive</name>
    <id>mtb-example-psoc6-uart-transmit-receive</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-uart-transmit-receive</uri>
    <description>This example demonstrates the UART (HAL) transmit and receive operation in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB UART Transmit and Receive using DMA</name>
    <id>mtb-example-psoc6-uart-transmit-receive-dma</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-uart-transmit-receive-dma</uri>
    <description>This example demonstrates the UART transmit and receive operation using DMA in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 std_crypto led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Master</name>
    <id>mtb-example-psoc6-i2c-master</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-master</uri>
    <description>This example demonstrates the use of I2C (HAL) resource for PSoC 6 MCU in Master mode.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Master EzI2C Slave</name>
    <id>mtb-example-psoc6-i2c-master-ezi2c-slave</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-master-ezi2c-slave</uri>
    <description>This example demonstrates the use of I2C (HAL) resource for PSoC 6 MCU in Master mode with an EzI2C slave.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Slave Using Callbacks</name>
    <id>mtb-example-psoc6-i2c-slave-callback</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2c-slave-callback</uri>
    <description>This example demonstrates the operation of the I2C (HAL) resource for PSoC 6 MCU in Slave mode using callbacks.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SPI Master</name>
    <id>mtb-example-psoc6-spi-master</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-spi-master</uri>
    <description>This example demonstrates the use of SPI (HAL) resource for PSoC 6 MCU in Master mode.</description>
    <req_capabilities>psoc6 std_crypto led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>SCB SPI Master DMA</name>
    <id>mtb-example-psoc6-spi-master-dma</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-spi-master-dma</uri>
    <description>This example demonstrates the use of PSoC 6 MCU Serial Communication Block (SCB) resource in SPI Master mode using DMA.</description>
    <req_capabilities>psoc6 std_crypto led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version>
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Ramping LED using Smart IO</name>
    <id>mtb-example-psoc6-smartio-ramping-led</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-smartio-ramping-led</uri>
    <description>This example uses a PWM resource and Smart I/O in PSoC 6 MCU to implement a ramping LED, where an LED gradually cycles through increasing and decreasing brightness levels. There is no CPU usage except for the initialization of PWM and Smart I/O.</description>
    <req_capabilities>psoc6 std_crypto led smart_io</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>emWin E-Ink FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-eink-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-eink-freertos</uri>
    <description>This code example demonstrates displaying 2D graphics on an E-Ink display using EmWin graphics library in FreeRTOS.</description>
    <req_capabilities>psoc6 led arduino switch</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>emWin OLED FreeRTOS</name>
    <id>mtb-example-psoc6-emwin-oled-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-emwin-oled-freertos</uri>
    <description>This code example demonstrates displaying 2D graphics on an OLED display using EmWin graphics library in FreeRTOS.</description>
    <req_capabilities>psoc6 arduino switch</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Cryptography SHA Demonstration</name>
    <id>mtb-example-psoc6-crypto-sha</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-crypto-sha</uri>
    <description>This code example shows how to generate a 32-byte hash value or message digest for an arbitrary user input message with the SHA2 algorithm using the Cryptographic hardware block in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 std_crypto</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI Flash Read Write</name>
    <id>mtb-example-psoc6-qspi-readwrite</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-readwrite</uri>
    <description>This example demonstrates interfacing with an external NOR flash memory in Quad-SPI mode using the Serial Memory Interface (SMIF) block in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Watchdog Timer</name>
    <id>mtb-example-psoc6-wdt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-wdt</uri>
    <description>This example demonstrates the Watchdog Timer (WDT) in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Multi-Counter Watchdog Timer</name>
    <id>mtb-example-psoc6-mcwdt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-mcwdt</uri>
    <description>This example explains how to setup a 32-bit free-running counter using two 16-bit counters of Multi-Counter Watchdog Timer (MCWDT) in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Switching Power Modes</name>
    <id>mtb-example-psoc6-switching-power-modes</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-switching-power-modes</uri>
    <description>This example demonstrates how to transition PSoC 6 MCU to the following power modes - Low Power Active, Low Power Sleep, Ultra Low Power Active, Ultra Low Power Sleep, and Deep Sleep.</description>
    <req_capabilities>psoc6</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Motion Sensor</name>
    <id>mtb-example-btsdk-motion-sensor</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-motion-sensor</uri>
    <description>This example demonstrates using the motion sensor with the CYW208xx and CYW207xx devices.</description>
    <req_capabilities>lsm9ds1</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CYW208xx Data logger</name>
    <id>mtb-example-btsdk-cyw208xx-data-logger</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw208xx-data-logger</uri>
    <description>This code example includes two applications that demonstrate the operation of multiple Serial Peripheral Interface (SPI) interfaces using the CYW208xx Bluetooth SoC.</description>
    <req_capabilities>CYW208XX ncu15wf104</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PDM to I2S Audio</name>
    <id>mtb-example-psoc6-pdm-to-i2s</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pdm-to-i2s</uri>
    <description>This example demonstrates how to route PDM audio data to the I2S interface in PSoC 6 MCU.</description>
    <req_capabilities>psoc6 arduino i2s pdm</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PDM PCM Audio</name>
    <id>mtb-example-psoc6-pdm-pcm</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-pdm-pcm</uri>
    <description>This example demonstrates how to use the pulse-density modulation/pulse-code modulation (PDM/PCM) hardware block in PSoC 6 MCU with a digital microphone.</description>
    <req_capabilities>psoc6 pdm</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2S Audio</name>
    <id>mtb-example-psoc6-i2s</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-i2s</uri>
    <description>This example demonstrates how to use the I2S hardware block in PSoC 6 MCU to interface with an audio codec.</description>
    <req_capabilities>psoc6 arduino i2s</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB HID Mouse</name>
    <id>mtb-example-psoc6-usb-hid-mouse</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-hid-mouse</uri>
    <description>This example demonstrates how to configure the USB block in a PSoC 6 MCU as a HID. The device enumerates as a 3-button mouse.</description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI Flash Read Write Using SFDP</name>
    <id>mtb-example-psoc6-qspi-readwrite-sfdp</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-readwrite-sfdp</uri>
    <description>This example demonstrates interfacing with an external NOR flash memory in Quad-SPI mode using the Serial Memory Interface (SMIF) block in PSoC 6 MCU. This example uses the Serial Flash Discoverable Parameters (SFDP) standard to auto-discover the flash parameters and the commands for read, program, and erase operations.</description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud TCP Client</name>
    <id>mtb-example-anycloud-tcp-client</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-tcp-client</uri>
    <description><![CDATA[
    This code example demonstrates implementation of TCP client with PSoC 6 MCU and CYW43xxx connectivity devices.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud Secure TCP Client</name>
    <id>mtb-example-anycloud-secure-tcp-client</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-secure-tcp-client</uri>
    <description><![CDATA[
    This code example demonstrates implementation of a secure TCP client with PSoC 6 MCU and CYW43xxx connectivity devices.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version>
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud Secure TCP Server</name>
    <id>mtb-example-anycloud-secure-tcp-server</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-secure-tcp-server</uri>
    <description><![CDATA[
    This code example demonstrates implementation of a secure TCP server with PSoC 6 MCU and CYW43xxx connectivity devices.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
      <version>
        <num>1.3.0 release</num>
        <commit>release-v1.3.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>QSPI F-RAM Access</name>
    <id>mtb-example-psoc6-qspi-fram-access</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-qspi-fram-access</uri>
    <description>This code example demonstrates interfacing PSoC 6 MCU with an external QSPI F-RAM memory and access it in Single, Dual, or Quad SPI mode using the Serial Memory Interface (SMIF) block. This example uses the PSoC 6 MCU standard QSPI HAL driver library to build the QSPI F-RAM access API.</description>
    <req_capabilities>psoc6 led qspi fram rgb_led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud TCP Server</name>
    <id>mtb-example-anycloud-tcp-server</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-tcp-server</uri>
    <description><![CDATA[
    This code example demonstrates implementation of a TCP server with PSoC 6 MCU and CYW43xxx connectivity devices.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Audio Recorder</name>
    <id>mtb-example-psoc6-usb-audio-recorder</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-audio-recorder</uri>
    <description>This example demonstrates the use of PSoC 6 MCU to implement an audio recorder using the USB Audio Device Class.</description>
    <req_capabilities>psoc6 std_crypto usb_device pdm</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Audio Device FreeRTOS</name>
    <id>mtb-example-psoc6-usb-audio-device-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-audio-device-freertos</uri>
    <description>This example demonstrates how to use PSoC 6 MCU to implement a USB Audio Device and HID Audio Playback Control that connects to the PC via the USB interface. The example also uses FreeRTOS.</description>
    <req_capabilities>psoc6 std_crypto usb_device capsense_button capsense_linear_slider i2s</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
      <version>
        <num>1.2.0 release</num>
        <commit>release-v1.2.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>BLE Throughput Measurement</name>
    <id>mtb-example-btsdk-ble-throughput</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-ble-throughput</uri>
    <description>This code example demonstrates the maximum BLE throughput (using GATT layer notifications and writes) that can be obtained with Cypress Bluetooth devices (CYW208xx and CYW207xx).</description>
    <req_capabilities>btsdk fw2 button</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB CDC Echo</name>
    <id>mtb-example-psoc6-usb-cdc-echo</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-cdc-echo</uri>
    <description>This example demonstrates how to configure the USB block in a PSoC 6 MCU for Communication Device Class (CDC). When configured for a CDC, the PSoC 6 enumerates a Virtual COM port, which can be read and written by a terminal emulator program on a PC.</description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB HID Generic</name>
    <id>mtb-example-psoc6-usb-hid-generic</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-hid-generic</uri>
    <description>This example demonstrates how to configure the USB block in a PSoC 6 MCU as a Human Interface Device (HID). The device enumerates as a Generic HID device.</description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>BLE Peripheral Privacy</name>
    <id>mtb-example-btsdk-peripheral-privacy</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-peripheral-privacy</uri>
    <description>This code example demonstrates the privacy features available to users in Bluetooth 5.0 and above.</description>
    <req_capabilities>button fw2 btsdk</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>PWM GPIO</name>
    <id>mtb-example-btsdk-pwm-gpio</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-pwm-gpio</uri>
    <description>This example demonstrates the configuration of PWM (pulse width modulation) to control the brightness of an LED, and configuration of GPIO to toggle an LED ON and OFF.</description>
    <req_capabilities>fw2 btsdk led2x</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CSDADC</name>
    <id>mtb-example-psoc6-csdadc</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-csdadc</uri>
    <description>This example demonstrates the usage of CSD analog-to-digital converter (ADC) in PSoC 6 MCU. CSDADC measures the external voltage and displays the conversion result the terminal application.</description>
    <req_capabilities>psoc6 std_crypto capsense</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CYW20719B2 SPI</name>
    <id>mtb-example-btsdk-cyw20719b2-spi</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw20719b2-spi</uri>
    <description>This code example demonstrates the SPI functionality using CYW20719B2.</description>
    <req_capabilities>fw2 btsdk CYW920719B2Q40EVB_01</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud MQTT Client</name>
    <id>mtb-example-anycloud-mqtt-client</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-mqtt-client</uri>
    <description><![CDATA[
    This code example demonstrates implementing an MQTT client using the MQTT client library for the family of Cypress connectivity devices. This library uses the AWS IoT Device SDK that includes an MQTT 3.1.1 client.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud WLAN Low Power</name>
    <id>mtb-example-anycloud-wlan-lowpower</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-wlan-lowpower</uri>
    <description><![CDATA[
    This code example demonstrates the low-power operation of a host MCU and a WLAN device using the network activity handlers provided by the Low Power Assistant middleware for Cypress connectivity devices.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>BLE Throughput Measurement FreeRTOS</name>
    <id>mtb-example-psoc6-ble-throughput-freertos</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-throughput-freertos</uri>
    <description>This code example demonstrates BLE GATT throughput measurement (using GATT layer notifications and GATT write command) using PSoC 6 BLE MCU.</description>
    <req_capabilities>psoc6 led switch ble</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud TCP Keepalive Offload</name>
    <id>mtb-example-anycloud-offload-tcp-keepalive</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-offload-tcp-keepalive</uri>
    <description><![CDATA[
    This code example demonstrates the TCP Keepalive Offload functionality offered by Cypress Wi-Fi devices using PSoC 6 MCU. It employs Low Power Assistant (LPA) middleware library which helps in developing low power applications for the Cypress devices. <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>HAL Keyboard Scanner</name>
    <id>mtb-example-btsdk-cyw208xx-keyboard-scanner</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-btsdk-cyw208xx-keyboard-scanner</uri>
    <description>This code example demonstrates the dedicated keyscan hardware, which processes key press events from proprietary GPIOs (LHL GPIOs) without interrupting the CPU core. This code example also demonstrates low power entry when the system is idle (no activity or keypress) and wake up when there is key press.</description>
    <req_capabilities>fw2 btsdk CYW208XX_62fbga</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud OTA Using MQTT</name>
    <id>mtb-example-anycloud-ota-mqtt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ota-mqtt</uri>
    <description><![CDATA[
    This code example demonstrates OTA update with PSoC 6 MCU and CYW43xxx connectivity devices. The device establishes a connection with the designated MQTT Broker (Mosquitto is used in this example) and subscribes to a topic. When an OTA image is published to that topic, the device automatically pulls the OTA image over MQTT and saves it to the the flash memory. This example uses MCUBoot based bootloader which boots the new application on next boot-up.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Mass Storage Logger</name>
    <id>mtb-example-psoc6-usb-msc-logger</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-msc-logger</uri>
    <description>This example demonstrates how to configure the USB block in a PSoC 6 MCU as a Mass Storage (MSC) device and emulate a file system in the internal memory.</description>
    <req_capabilities>psoc6 std_crypto usb_device</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud WPS Enrollee</name>
    <id>mtb-example-anycloud-wps-enrollee</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-wps-enrollee</uri>
    <description><![CDATA[
    This code example demonstrates how to use the connection management and WPS Enrollee feature provided in the Wi-Fi Connection Manager (WCM) middleware.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud Wi-Fi Scan</name>
    <id>mtb-example-anycloud-wifi-scan</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-wifi-scan</uri>
    <description><![CDATA[
    This code example demonstrates how to configure different scan filters provided in the Wi-Fi Connection Manager (WCM) middleware and scan for the available Wi-Fi networks.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack and the Mbed TLS open-source TLS/SSL library which has cryptographic capabilities. Creating a project from this template will cause lwIP and Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the lwIP &amp; Mbed TLS licenses and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 wifi cyw43xxx led switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud BLE Multi Beacon</name>
    <id>mtb-example-anycloud-ble-multi-beacon</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ble-multi-beacon</uri>
    <description>This code example demonstrates the implementation of a beacon which advertises multiple Eddystone ADV data.</description>
    <req_capabilities>psoc6 bt</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud BLE Battery Server</name>
    <id>mtb-example-anycloud-ble-battery-server</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ble-battery-server</uri>
    <description>This code example demonstrates the implementation of a simple BLE Battery Service.</description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud BLE Environmental Sensing Service</name>
    <id>mtb-example-anycloud-ble-ess</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ble-ess</uri>
    <description>This code example demonstrates the implementation of a simple BLE Environmental Sensing Profile. It shows how to send environmental parameters like temperature by sending simulated temperature values over the BLE connection using the Cypress WiFi-BT combo SoCs supported in AnyCloud-SDK.</description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud Wi-Fi Onboarding Using BLE</name>
    <id>mtb-example-anycloud-ble-wifi-onboarding</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ble-wifi-onboarding</uri>
    <description>This code example demonstrates WiFi Onboarding using BLE.</description>
    <req_capabilities>psoc6 wifi bt led anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud BLE Capsense Buttons Slider</name>
    <id>mtb-example-anycloud-ble-capsense-buttons-slider</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ble-capsense-buttons-slider</uri>
    <description>This code example demonstrates the CapSense implementation using BLE Custom Service.</description>
    <req_capabilities>psoc6 bt capsense_button capsense_linear_slider led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud BLE CTS Client</name>
    <id>mtb-example-anycloud-ble-cts-client</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ble-cts-client</uri>
    <description>This code example demonstrates the implementation of a simple BLE GAP Peripheral - GATT Client with Current Time Service.</description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud BLE CTS Server</name>
    <id>mtb-example-anycloud-ble-cts-server</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-ble-cts-server</uri>
    <description>This code example demonstrates the implementation of a simple BLE GAP Central - GATT Server with Current Time Service.</description>
    <req_capabilities>psoc6 bt led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense Custom Scan</name>
    <id>mtb-example-psoc6-capsense-custom-scan</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-capsense-custom-scan</uri>
    <description>This code example demonstrates CapSense custom scanning through CapSense Middleware's callback functions that allow altering the sensor parameters during runtime or synchronizing the CapSense scan with non-CapSense operations. In this code example, the callback function is used to change the inactive sensor state to either shield or ground depending on the sensor being scanned.</description>
    <req_capabilities>psoc6 led capsense_linear_slider</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Empty PSoC4 App</name>
    <id>mtb-example-psoc4-empty-app</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-empty-app</uri>
    <description>This empty application provides a template for creating applications using PSoC 4 devices.</description>
    <req_capabilities>psoc4</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Slave Using Callbacks</name>
    <id>mtb-example-psoc4-i2c-slave-callback</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-i2c-slave-callback</uri>
    <description>This example demonstrates the operation of the I2C block for PSoC 4 in Slave mode using callbacks.</description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>I2C Master EzI2C Slave</name>
    <id>mtb-example-psoc4-i2c-master-slave</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-i2c-master-slave</uri>
    <description>This example demonstrates the operation of I2C resource for PSoC 4 in Master mode with an EzI2C slave.</description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>Periodic Interrupt Using TCPWM</name>
    <id>mtb-example-psoc4-tcpwm-interrupt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-tcpwm-interrupt</uri>
    <description>This example uses the TCPWM Component in the Timer/Counter mode 
    to generate a periodic interrupt. An LED toggles whenever the interrupt occurs.</description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense CSX Button Tuning</name>
    <id>mtb-example-psoc4-capsense-csx-button-tuning</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-capsense-csx-button-tuning</uri>
    <description>This code example demonstrates how to manually tune a mutual capacitance (CSX)-based button widget in PSoC 4 devices using CapSense Tuner GUI.</description>
    <req_capabilities>psoc4 capsense_button</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense Tuning Over BLE - Server</name>
    <id>mtb-example-psoc6-ble-capsense-tuner-server</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-capsense-tuner-server</uri>
    <description>This code example demonstrates how to monitor the CapSense data and tune the CapSense sensors over BLE communication with CapSense Tuner GUI using PSoC 6 BLE MCU. This is intended to be used with the CapSense Tuning Over BLE - Client example</description>
    <req_capabilities>psoc6 led ble capsense_button capsense_linear_slider</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud UDP Client</name>
    <id>mtb-example-anycloud-udp-client</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-udp-client</uri>
    <description><![CDATA[
    This code example demonstrates implementation of UDP Client using AnyCloud SDK. The UDP Client establishes a connection with a remote UDP server and based on the command received from the UDP server, turns the user LED ON
    or OFF using PSoC 6 MCU.
    <br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi led anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
      <version>
        <num>1.1.0 release</num>
        <commit>release-v1.1.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud UDP Server</name>
    <id>mtb-example-anycloud-udp-server</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-udp-server</uri>
    <description><![CDATA[
	This code example demonstrates implementation of UDP Server using AnyCloud SDK. The UDP Server allows the user to send LED ON/OFF command to the UDP client using PSoC 6 MCU.
	<br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 cyw43xxx wifi switch anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>USB Mass Storage File System</name>
    <id>mtb-example-psoc6-usb-msc-file-system</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-usb-msc-file-system</uri>
    <description>This example demonstrates how to configure the USB block in a PSoC 6 MCU device as a Mass Storage (MSC) device and run a file system (FatFs) through an external memory (microSD). This example uses FreeRTOS.</description>
    <req_capabilities>psoc6 std_crypto usb_device switch led pdm sdhc anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>GPIO Interrupt</name>
    <id>mtb-example-psoc4-gpio-interrupt</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc4-gpio-interrupt</uri>
    <description>This example demonstrates the use of a GPIO configured as an input pin to generate interrupts on PSoC 4. The GPIO signal interrupts the CPU and executes a user-defined Interrupt Service Routine (ISR).</description>
    <req_capabilities>psoc4 led</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>AnyCloud HTTPS Server</name>
    <id>mtb-example-anycloud-https-server</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-anycloud-https-server</uri>
    <description><![CDATA[
	This code example demonstrates the implementation of an HTTPS server with PSoC 6 MCU and CYW43xxx connectivity devices. It employs the HTTPS server middleware library, which takes care of all the underlying socket connections with the HTTPS client. This example establishes a secure connection with a HTTPS client through SSL handshake. Once the SSL handshake completes successfully, the HTTPS client can make GET, POST, and PUT requests with the server.
	<br><br><b>License Disclaimer:</b><br><br>
    This code example makes use of the lwIP open-source TCP/IP stack. Creating a project from this template will cause lwIP to be downloaded on your computer. It is your responsibility to understand and accept the lwIP license. <br><br>Creating a project from this template will cause Mbed TLS to be downloaded on your computer. It is your responsibility to understand and accept the Mbed TLS license and regional use restrictions (including abiding by all applicable export control laws).
    ]]></description>
    <req_capabilities>psoc6 cyw43xxx led wifi anycloud</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>CapSense Tuning Over BLE - Client</name>
    <id>mtb-example-psoc6-ble-capsense-tuner-client</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-ble-capsense-tuner-client</uri>
    <description>This code example demonstrates how to monitor the CapSense data and tune the CapSense sensors over BLE communication with CapSense Tuner GUI using PSoC 6 BLE MCU. This is intended to be used with the CapSense Tuning Over BLE - Server example</description>
    <req_capabilities>psoc6 led ble</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
  <app>
    <name>MCUboot-Based Basic Bootloader</name>
    <id>mtb-example-psoc6-mcuboot-basic</id>
    <uri>https://github.com/cypresssemiconductorco/mtb-example-psoc6-mcuboot-basic</uri>
    <description>This code example demonstrates building a simple bootloader application for PSoC 62/63 MCUs using the open-source library - MCUboot. </description>
    <req_capabilities>psoc6 std_crypto led qspi nor_flash</req_capabilities>
    <versions>
      <version>
        <num>Latest 1.X release</num>
        <commit>latest-v1.X</commit>
      </version>
      <version>
        <num>1.0.0 release</num>
        <commit>release-v1.0.0</commit>
      </version>
    </versions>
  </app>
</apps>
